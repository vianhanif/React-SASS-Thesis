#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage{sectsty}
\usepackage{dirtree}
\usepackage{url}
\usepackage{hyperref}
\chapterfont{\centering} 

% The following commands set the page numbers on the top right
% except in the beginning of chapters
\lhead{}
\chead{}
\rhead{\thepage}
\lfoot{}
\cfoot{}
\rfoot{}
\renewcommand{\headrulewidth}{0pt}

%%%%%%%
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement H
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Indeks
\shortcut idx
\color #008000
\end_index
\leftmargin 4cm
\topmargin 3cm
\rightmargin 3cm
\bottommargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
input{made-hypen.tex} 
\end_layout

\begin_layout Plain Layout


\backslash
sloppy 
\end_layout

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Cover}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size huge
GUNADARMA UNIVERSITY
\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
FACULTY OF INDUSTRIAL TECHNOLOGY
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename images/LogoGunadarma.jpg
	width 55mm

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{10mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
\size larger
Implementation of React and SASS as Component-Based Development Method for
 Front End Web Design
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{1mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="2" columns="1">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="middle" width="13cm">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align center

\series bold
by :
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\align center

\series bold
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Alvian Rahman Hanif
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
NPM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
50412668
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Department
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Informatics Engineering
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Pembimbing
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
:
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Dr.
 Ernastuti
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

 
\backslash
vspace*{8mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
A Thesis Submitted to The Faculty of Industrial Technology
\end_layout

\begin_layout Standard
\align center

\series bold
Gunadarma University
\end_layout

\begin_layout Standard
\align center

\series bold
In Partial Fulfillment of The Requirements
\end_layout

\begin_layout Standard
\align center

\series bold
For The Undergraduate Degree
\end_layout

\begin_layout Standard
\align center

\series bold
Jakarta
\end_layout

\begin_layout Standard
\align center

\series bold
2016
\end_layout

\begin_layout Standard
\align center

\size large
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{3mm}
\end_layout

\end_inset


\end_layout

\begin_layout Chapter*

\size larger
STATEMENT of ORIGINALITY and PUBLICATION
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{STATEMENT of ORIGINALITY and PUBLICATION}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
I who undesigned below:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="left" valignment="top">
<column alignment="center" valignment="top">
<column alignment="left" valignment="top" width="7cm">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Alvian Rahman Hanif
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
NPM
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
50412668
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Title
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Implementation of React and SASS as Component-Based Development Method for
 Front End Web Design
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Session Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Passed Date
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
:
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\noindent
declare that this submission is my own work and may be published entirely
 by the Gunadarma University.
 All quotation is any form have been following the rules and ethics.
 Regarding the contents of the writing is the responsibility of the Author,
 not the Gunadarma University.
 This statement has been made with the full truth and awareness.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{25mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{7mm}
\end_layout

\end_inset

Jakarta, 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{20mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
(Alvian Rahman Hanif)
\end_layout

\begin_layout Chapter*
Validation Page
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Validation Page}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
Advisory Committee
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="13cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="middle" width="7cm">
<column alignment="center" valignment="middle" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Position
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align right
Session Date :
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{1mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
Board of Examiners
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="3">
<features rotate="0" tabularvalignment="middle" tabularwidth="13cm">
<column alignment="center" valignment="top">
<column alignment="center" valignment="middle" width="7cm">
<column alignment="center" valignment="middle" width="3cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
No
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Name
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Position
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\align right
Passing Date :
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{1mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center

\series bold
Acknowledged by, 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{10mm}
\end_layout

\end_inset

Supervisor
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{46mm}
\end_layout

\end_inset

Department Head of Bachelor's
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{85mm}
\end_layout

\end_inset

Defense Examination
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{20mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{5mm}
\end_layout

\end_inset

(Dr.
 Ernastuti)
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{45mm}
\end_layout

\end_inset

(Dr.
 Edi Sukirman, SSI, MM)
\end_layout

\begin_layout Chapter*
Abstract
\end_layout

\begin_layout Standard
\paragraph_spacing single
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Abstract}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent

\series bold
Alvian Rahman Hanif
\series default
.
 50412668
\end_layout

\begin_layout Standard
\noindent

\series bold
\begin_inset Quotes eld
\end_inset

Implementation of React and SASS as Component-Based Development Method for
 Front End Web Design
\begin_inset Quotes erd
\end_inset


\series default
.
 
\end_layout

\begin_layout Standard
\noindent

\series bold
Bachelor's Thesis.
 
\series default
Information Engineering Department.
 Faculty of Industrial Technology.
 2016
\end_layout

\begin_layout Standard
\noindent
Keyword : Web, Front End, Component-Based Development, maintainable, reusable,
 separation of concern, HTML, CSS, JavaScript, CSS pre-Processor, Object-Oriente
d Design, React, SASS, Babel.
\end_layout

\begin_layout Standard
\noindent
(xii + 98 + Appendix)
\end_layout

\begin_layout Standard
\noindent
The separation of concerns in developing user interfaces in HTML and CSS
 is getting a lot harder as the bigger demand the development gets.
 And it becoming an issue for developers either in their personal work or
 even in a team.
 Therefore, it is hard to maintain and make it possible to reuse for other
 new project.
 This research has tried to recreate an old web design project by implementing
 Component-Based Development method using React and SASS respectively in
 order to create a maintanable and reusable HTML and CSS development.
 Conceptually, this development has followed the Object-Oriented Design
 (OOD) principles that makes it possible to judge them as maintainable and
 reusable, practically by using JSX syntax feature in React and programming
 features in SASS such as: variables, extends, mixins, imports and more.
 This research has succeeded in implementing Component-Based Development
 method in designing user interfaces and make the separation of concern
 a lot easier, eventhough several dependencies are used as tools before
 start using React and SASS.
 Lastly, the suggestion from this research is that any similar research
 should try to use Webpack that could bundle and replace almost all dependencies
 used in this development.
\end_layout

\begin_layout Standard
\noindent
Bibliography (1999 - 2016)
\end_layout

\begin_layout Chapter*
Acknowledgement
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{plain}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Acknowledgement}
\end_layout

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Praise and thanks raised to Allah SWT for all blessing and also utterance
 and good wishes sent to the prophet of Muhammad SAW so, with all the grants,
 author have finished this thesis, which is titled 
\begin_inset Quotes eld
\end_inset

Implementation of Component-Based Development Using React and SASS for Front
 End Web Design
\begin_inset Quotes erd
\end_inset

.
 The writing of this thesis is intended to complete the requirement to reach
 Sarjana degree in Gunadarma University.
 This thesis would not have been possible without the support and encouragement
 of many people, so I want to thanks to:
\end_layout

\begin_layout Enumerate
Prof.
 Dr.
 E.
 S.
 Margianti, SE, MM, as Rector of Gunadarma University.
\end_layout

\begin_layout Enumerate
Prof.
 Suryadi Harmanto, SSi, MMSI.
 as 2nd Rector Assistant of Gunadarma University, who gave me the opportunity
 to join to SarMag Program.
\end_layout

\begin_layout Enumerate
Prof.
 Dr.
 Ir.
 Bambang Suryawan, MT, as Dean of Industrial Technology Faculty.
\end_layout

\begin_layout Enumerate
Dr.
 -Ing.
 Adang Suhendra, SSi, SKom, MSc, as head of Informatics Engineering Program.
\end_layout

\begin_layout Enumerate
Drs.
 Haryanto, MMSI, as Director of SarMag (Sarjana Magister) Program.
\end_layout

\begin_layout Enumerate
Dr.
 Edi Sukirman, SSi, MM, as Department Head of Bachelor's Defense Examination.
\end_layout

\begin_layout Enumerate
Dr.
 Ernastuti, as author's supervisor.
 With her enthusiasm and her great efforts to explain things clearly and
 simply.
\end_layout

\begin_layout Enumerate
Remi Senjaya, ST., MMSI, as SarMag coordinator who always gave us all of
 informations about SarMag and supports.
\end_layout

\begin_layout Enumerate
All od SarMag lectures, for support and knowledge given to author.
\end_layout

\begin_layout Enumerate
Author's entire family, especially my mother (Neni Rokhayati) and my father
 (Teguh Budi Santoso), my siblings(Annisa Lestari, Akmal Shalahudin and
 Adian Damar Farizki), for the encouragement and for providing a loving
 environment to the author.
\end_layout

\begin_layout Enumerate
Jefri Yushendri, Ferdi Areanto and Andrey Agassy for the support.
\end_layout

\begin_layout Enumerate
All of SarMag staff in Simatupang and Salemba, for the support.
\end_layout

\begin_layout Enumerate
Author's friends in SarMag.
 Thank you for giving happiness in SarMag environment.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
I am looking forward to get some critiques and suggestions from anyone for
 developing this thesis.
 Hopefully, this work can bring some advantages especially to readers.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{5mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align right
Jakarta,
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
vspace*{20mm}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align right
Alvian Rahman Hanif
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Contents}
\end_layout

\end_inset


\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{List of Figures}
\end_layout

\end_inset


\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{List of Tables}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Chapter
INTRODUCTION
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
setcounter{page}{1}
\end_layout

\begin_layout Plain Layout


\backslash
pagenumbering{arabic}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This chapter contains the Background, Problem Statement, Objectives, Working
 Methodology, and Scope of The Work for this research.
\end_layout

\begin_layout Section
Background
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ever since the opened source license is getting more popular, a number of
 developers are seemed to have changed how they used to work in projects
 as a team member at the matter of software development.
 And along with observations in many forums, communities, as well as the
 World Wide Web, it looks like it will not stop increasing in few years
 ahead.
 Software developers are now able to make significant contributions to many
 projects without actually being the project team member, as long as the
 project itself has a good documentary so anyone could understand the matters
 on it.
 Therefore, this will excite and give more pleasure in the development process
 because they will be able to work, learn and contribute and enrolls to
 more communities while working on their main project.
\end_layout

\begin_layout Standard
By that observations, the more contribution made in more development project
 is positively be potential for users to get greater technology environment
 and better user experience in much faster phase.
 And as developers, they could get something even better.
 Nowadays, lots of developers collaborated with each other with the help
 of project management and versioning tools like Git, GitHub, BitBucket
 or others to create something that mostly seen as libraries, plugins or
 frameworks.
 So, what that affected to them is that when they are about to face a new
 case or project that requires a number of features, they will look and
 discuss about what kind of library, plugin or even framework that is suitable
 to solve the case and will support that features instead of working on
 it from the scratch.
 And on top of that, those are mostly covered by opened source license.
 So, there are opportunities for them to modify the libraries to make them
 suit the project best.
 
\end_layout

\begin_layout Standard
Talking about libraries, plugins and frameworks.
 Based on question quoted in Quora.com
\begin_inset CommandInset citation
LatexCommand cite
key "quora"

\end_inset

 in 2011 and dictionaries at Computerhope.com
\begin_inset CommandInset citation
LatexCommand cite
key "hope"

\end_inset

 about libraries, plugins and frameworks, libraries are pieces of reusable
 code for developers and didn't provide any hooks to extend it.
 While frameworks are pieces of code that dictates the basic architecture
 of the software application that developers will follow, and it has lots
 of libraries and hooks to make the work easier.
 And plugins are software add-on that installed onto a program, enabling
 it to perform additional features.
 Thus in this case, this research will also keep in mind to look for the
 right libraries, plugins or frameworks and make use of versioning tools
 that will support the achievement of this research.
\end_layout

\begin_layout Standard
Now, get to more the inside of software development.
 As previous paragraphs had discussed about how developers collaborate to
 work on projects in faster and better ways, one of the achievement of these
 is that now there are editors (could be Text Editor or Integrated Development
 Environment) that used in the coding process, had gone to a better release.
 It is the community version.
 Or in a mean that the editor is purposely made to be opened for developers
 to modify and improve, either by joining their communities or as third
 party companies.
 So developers are able to submit their code as a pull request or extensions
 and they will decide themselves weather to use it or not and they will
 eventually find them useful.
 Therefore, as for this research concerning about Front End development,
 the editor that will be used is Brackets.
 Brackets is a modern Text Editor created by Adobe as a community guided,
 that claimed to understands web design with focused visual tools and preprocess
or support.
\end_layout

\begin_layout Standard
Moreover, discussing about web development, the standard model of a web
 is HTML, CSS and JavaScript based on an article by Blainerobertson.net
\begin_inset CommandInset citation
LatexCommand cite
key "BlaineWeb15"

\end_inset

 updated in 2015.
 These are the three basic web technologies used as the web development
 model and they are operating on the client devices.
\end_layout

\begin_layout Standard
Also, by an explanation at VikingCodeSchool.com
\begin_inset CommandInset citation
LatexCommand cite
key "viking"

\end_inset

, when discussing about web development, there would be terms like Front
 End, Back End and Full Stack.
 Accordingly, Front End will focus on user interaction and interfaces on
 the client side, Back End will focus on empowering the web application
 in the server side, and Full Stack is about working as both ends at the
 same time.
 So, there are approximately three kinds of developer in web development.
 But this research will be centered in being Front End developer.
 Therefore, Front End developers will mostly work with HTML, CSS and JavaScript.
 
\end_layout

\begin_layout Standard
As being a Front End developer, it is true that there is always great excitement
 when developing a web application concerning the client side.
 But the problem founded when facing cases that has similar design or concept
 with previous projects.
 Humbly, developers will think to attempt opening back the old project and
 try to modify it to suit the new one.
 One question needed to be answered is that weather the code in the old
 project is ready to reuse or not.
 So it is considered as a not good practice since every project usually
 has its own dependencies.
 Also, there are big chances they would forget and hard to understand the
 code in the old project, where that would probably kill more time than
 actually coding from the start.
 So, by keeping that problem in mind, the approach to make a proper reusable
 and maintaninable Front End code generation is by using component-based
 development method.
\end_layout

\begin_layout Standard
At benmccormick.org
\begin_inset CommandInset citation
LatexCommand cite
key "BenCBD14"

\end_inset

 in 2014, it describes about component-based development, a movement that
 has been growing over these few years.
 It is a mean of desire to provide greater code reusability and abstraction
 by bundling functionality into small composable components.
 And the approach in this research to implement this method is by following
 some principles of Object-Oriented Design and using a JavaScript library
 created by Facebook and Instagram called React as for creating HTML code
 components.
 One of their headlines is saying “Build Composable Components”.
 Described as if the “only” thing developer has to do is building components,
 and they will have the code reuse, testing and separation of concerns easier.
 Also, the approach in making composable themes or coloring style sheets
 in CSS, this research will be using a preprocessor named SASS.
 It is an extension of CSS that will helps keeping large style sheets well
 organized.
 
\end_layout

\begin_layout Standard
So in overall discussion, this research will focus on creating a web Front
 End code generation that will raise its reusability and maintainability,
 implementing component-based development method with React and SASS, by
 following an older web-design project as the template sample, using Brackets
 as the editor for coding.
 Along with the help of Git as versioning tool for research tracking, both
 in software development and written documentation.
 
\end_layout

\begin_layout Section
Problem Statement
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The problems stated for this research are :
\end_layout

\begin_layout Enumerate
How component-based development method is applied in React and SASS?
\end_layout

\begin_layout Enumerate
How React and SASS gives the ability to create maintainable and reusable
 Front End Development?
\end_layout

\begin_layout Enumerate
Is React and SASS able to make separation of concerns easier?
\end_layout

\begin_layout Section
Scope of The Work
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This research is focused on implementing component-based development method
 using React and SASS in order to create maintainable and reusable HTML
 and CSS code.
 The judgement of the code maintainable and reusable is done by verifying
 the codes generation result with any implemented Object-Oriented Design
 (OOD) principles.
\end_layout

\begin_layout Section
Objective of The Work
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The main objective in this research is to share a new technic about generating
 HTML and CSS codes more maintainable and possible to reuse, by using React
 and SASS respectively.
 The direction of work to achieve this objective is by recreating an old
 web design project that only use basic HTML and CSS.
\end_layout

\begin_layout Section
Working Methodology
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The research methods used along this development are field and literature
 studies.
 Some observations were made as a way to understand problems concerning
 this research, by attending development conferences, enrolls to communities
 and forums, and surfs web articles or web conferences regarding Front End
 development.
 Subsequently, Studies of theories are needed as much as it supports the
 truth of research's background as facts.
 And the implementations in actual development will be done afterwards.
\end_layout

\begin_layout Section
Structure of The Thesis
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are 5 chapters planned to be written in this research.
 In chapter 1, it will discuss about the background, reasons, objectives
 and purposes of making this research.
 Second chapter will describe any relevant theory to support the fact of
 methods and tools used in this research like HTML, CSS, JavaScript, component-b
ased development, React, SASS and more.
 Then, chapter 3 will be about problem identification analysis and method
 design that will implement component-based development, using UML Class
 diagram and file-tree description as for example.
 And chapter 4 will show results of research and discuss how it will be
 judged as a reusable and maintainable code for future development.
 Lastly, chapter 5 is the conclusion from all discussion along with suggestions
 and recommendations for similar research.
\end_layout

\begin_layout Chapter
LITERATURE STUDY
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This chapter contains the theories needed to support this research as facts.
 The theories are about UML, HTML, CSS, DOM, ShellScript, JavaScript, JSON,
 OOD, Component-Based Development, React, Babel, CSS pre-Processor, SASS,
 and Git.
\end_layout

\begin_layout Section
Unified Modeling Language (UML)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
UML is a standard language for specifying, visualizing, constructing, and
 documenting the artifacts of software systems.
 UML stands for Unified Modeling Language.
 UML is a pictorial language used to make software blue prints.
 Although UML is generally used to model software systems but it is not
 limited within this boundary.
 It is also used to model non-software systems as well, like process flow
 in a manufacturing unit etc.
\end_layout

\begin_layout Standard
Structural modeling captures the static features of a system They consists
 of the following:
\end_layout

\begin_layout Enumerate
Classes diagrams
\end_layout

\begin_layout Enumerate
Object diagrams
\end_layout

\begin_layout Enumerate
Deployment diagrams
\end_layout

\begin_layout Enumerate
Package diagram
\end_layout

\begin_layout Enumerate
Composite structure diagram
\end_layout

\begin_layout Enumerate
Component diagram 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Structural model represents the framework for the system and this framework
 is the place where all other components exist.
 They all represent the elements and the mechanism to assemble them.
 But the structural model never describes the dynamic behavior of the system.
\end_layout

\begin_layout Section
HyperText Markup Language (HTML)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
HTML is a short for HyperText Markup Language, which has been around since
 the beginning of the web.
 HTML is a terrific technology for several reasons:
\end_layout

\begin_layout Enumerate

\series bold
It uses plain text
\series default
.
 Most document systems (like word processors) use special binary encoding
 schemes that incorporate formatting directly into the computer's internal
 language, which locks a document into a particular computer or software.
 That is, a document stored in Word format can't be read without a program
 that understands Word formatting.
 HTML gets past this problem by storing everything in plain text.
 
\end_layout

\begin_layout Enumerate

\series bold
It works on all computers
\series default
.
 The main point of HTML is to have a universal format.
 Any computer should be able to read and write it.
\end_layout

\begin_layout Enumerate

\series bold
It describes what documents mean
\series default
.
 HTML isn't really designed to indicate how a page or its elements look.
 HTML is about describing the meaning of various elements.
 This has some distinct advantages in understanding how to use HTML properly.
\end_layout

\begin_layout Enumerate

\series bold
It's easy to write
\series default
.
 HTML usually gets a little more complicated as it goes, but it is easy
 to figure out how to write HTML without any specialized editors.
 One only have to know a handful of elements, and they're pretty straightforward.
\end_layout

\begin_layout Enumerate

\series bold
It's free
\series default
.
 HTML doesn't cost anything to use, primarily because it isn't owned by
 anyone.
 No corporation has control of it, and nobody has a patent on it.
 The fact that this technology is freely available to anyone is a huge advantage.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The key to writing HTML code is the special text inside angle braces (<>).
 These special elements are tags.
 They aren't meant to be displayed on the Web page but offer instructions
 to the Web browser about the meaning of the text.
 The tags are meant to be embedded into each other to indicate the organization
 of the page.
 Example:<html></html>, <title></title><body></body>
\end_layout

\begin_layout Subsection
XHTML
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In 2000, the World Wide Web Consortium (usually abbreviated as W3C) got
 together and proposed some fixes for HTML.
 The basic plan was to create a new form of HTML that complied with a stricter
 form of markup, or eXtensible Markup Language (XML).
 Here are some of those standards:
\end_layout

\begin_layout Enumerate
All Tags have endings, but there are few exceptions come with their own
 ending built-in.
\end_layout

\begin_layout Enumerate
Tags cannot be overlapped.
\end_layout

\begin_layout Enumerate
Everything's lowercase.
\end_layout

\begin_layout Enumerate
Attributes must be in quotes.
\end_layout

\begin_layout Enumerate
Layout must be separate from markup.
\end_layout

\begin_layout Section
Cascading Style Sheets (CSS)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
CSS (Cascading Style Sheets) gives abilities to change the color of any
 image on the page, add backgrounds and borders, change the visual appearance
 of elements (like lists and links), as well as customize the entire layout
 of the page.
 Additionally, CSS allows keeping the XHTML simple because all the formatting
 is stored in the CSS.
 CSS is efficient, too, because it allows reusable style across multiple
 pages.
 If XHTML gives pages structure, CSS gives them beauty.
 
\end_layout

\begin_layout Standard
style sheets describe presentation rules for XHTML elements.
 Styles are simply a list of selectors.
 Each selector can have a number of style rules.
 Each rule describes some attribute of the selector.
 To set up a style, keep the following in mind: 
\end_layout

\begin_layout Enumerate

\series bold
Define an element
\series default
.
 Uses the element name (the tag name alone) to begin the definition of a
 particular element's style.
\end_layout

\begin_layout Enumerate

\series bold
Use braces ({}) to enclose the style rules
\series default
.
 Each style's rules are enclosed in a set of braces.
 Similar to many programming languages, braces mark off special sections
 of code.
 It's traditional to indent inside the braces.
\end_layout

\begin_layout Enumerate

\series bold
Give a rule name and rule's value
\series default
.
 Different rules take different values.
 The attribute value is followed by a semicolon (:).
 Traditionally, each name-value pair is on one line.
\end_layout

\begin_layout Section
Document Object Model (DOM)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Document Object Model (DOM) is a programming interface for HTML, XML
 and SVG documents.
 It provides a structured representation of the document (a tree) and it
 defines a way that the structure can be accessed from programs so that
 they can change the document structure, style and content.
 The DOM provides a representation of the document as a structured group
 of nodes and objects that have properties and methods.
 Nodes can also have event handlers attached to them, and once that event
 is triggered the event handlers get executed.
 Essentially, it connects web pages to scripts or programming languages.
 
\end_layout

\begin_layout Standard
Though often accessed using JavaScript, the DOM itself is not a part of
 the JavaScript language, and it can be accessed by other languages, though
 this is much less common.
 
\end_layout

\begin_layout Section
ShellScript
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First of all, a Shell is an environment in which user can run commands,
 programs and shell scripts.
 There are different flavors of shells, just as there are different flavors
 of operating systems.
 Each flavor of shell has its own set of recognized commands and functions.
\end_layout

\begin_layout Standard
And the basic concept of ShellScript is a list of commands, which are listed
 in the order of execution.
 In ShellScript, loops allows user to go through massive amounts of data,
 files to read and store data and the script may include functions.
 However, ShellScript and functions are both interpreted.
 This means they are not compiled.
 
\end_layout

\begin_layout Section
JavaScript
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
JavaScript is a cross-platform, object-oriented scripting language.
 It is a small and lightweight language.
 Inside a host environment (for example, a web browser), JavaScript can
 be connected to the objects of its environment to provide programmatic
 control over them.
\end_layout

\begin_layout Standard
JavaScript contains a standard library of objects, such as Array, Date,
 and Math, and a core set of language elements such as operators, control
 structures, and statements.
 Core JavaScript can be extended for a variety of purposes by supplementing
 it with additional objects.
 For example: 
\end_layout

\begin_layout Enumerate

\emph on
Client-side
\emph default
 JavaScript extends the core language by supplying objects to control a
 browser and its Document Object Model (DOM).
 For example, client-side extensions allow an application to place elements
 on an HTML form and respond to user events such as mouse clicks, form input,
 and page navigation.
\end_layout

\begin_layout Enumerate

\emph on
Server-side
\emph default
 JavaScript extends the core language by supplying objects relevant to running
 JavaScript on a server.
 For example, server-side extensions allow an application to communicate
 with a database, provide continuity of information from one invocation
 to another of the application, or perform file manipulations on a server.
\end_layout

\begin_layout Subsection
ECMAScript 6
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The JavaScript core language features are defined in a standard called ECMA-262.
 The language defined in this standard is called ECMAScript, of which the
 JavaScript in the browser is a superset.
 And the committee responsible for driving the ECMAScript process and developmen
t is TC-39.
\end_layout

\begin_layout Standard
ECMAScript 6 reached feature complete status in 2015.
 The features vary widely from completely new objects and patterns to syntax
 changes to new methods on existing objects.
 The exciting thing about ECMAScript 6 is that all of these changes are
 geared towards problems that developers are actually facing.
 Many JavaScript environments, such as web browsers are actively working
 on implementing ECMAScript 6.
 
\end_layout

\begin_layout Section
JavaScript Object Notation (JSON)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The JavaScript Object Notation data format, or JSON for short, is derived
 from the literal of the JavaScript programming language.
 This makes JSON a subset of the JavaScript language.
 As a subset, JSON does not posses any additional features that the Javacript
 language itself does not already posses.
 Although JSON is a subset a programming language, it itself is not a programmin
g language but, in fact, a data interchange format.
\end_layout

\begin_layout Standard
JSON is known as the data interchange standard, which implies that it can
 be used as the data format wherever the exchange of data occurs.
 A data exchange can occur between both browser and server and even server
 to server, for that matter.
 
\end_layout

\begin_layout Standard
JSON, in a nutshell, is a textual representation defined by a small set
 of governing rules in which data is structured.
 The JSON specification states that data can be structured in either of
 the two following compositions:
\end_layout

\begin_layout Enumerate
A collection of name/value pairs.
\end_layout

\begin_layout Enumerate
An ordered list of values.
\end_layout

\begin_layout Section
Model-View-Controller (MVC)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In object-oriented programming development, model-view-controller (MVC)
 is the name of a methodology or design pattern for successfully and efficiently
 relating the user interface to underlying data models.
 The MVC pattern has been heralded by many developers as a useful pattern
 for the reuse of object code and a pattern that allows them to significantly
 reduce the time it takes to develop applications with user interfaces.
\end_layout

\begin_layout Standard
The model-view-controller pattern proposes three main components or objects
 to be used in software development :
\end_layout

\begin_layout Enumerate
A 
\shape italic
Model
\shape default
, which represents the underlying, logical structure of data in a software
 application and the high-level class associated with it.
 This object model does not contain any information about the user interface.
\end_layout

\begin_layout Enumerate
A 
\shape italic
View
\shape default
, which is a collection of classes representing the elements in the user
 interface (all of the things the user can see and respond to on the screen,
 such as buttons, display boxes, and so forth).
\end_layout

\begin_layout Enumerate
A 
\shape italic
Controller
\shape default
, which represents the classes connecting the model and the view, and is
 used to communicate between classes in the model and view.
\end_layout

\begin_layout Section
Component-Based Development 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Modem software systems become more and more large-scale, complex and uneasily
 controlled, resulting in high development cost, low productivity, unmanageable
 software quality and high risk to moves to new technology.
 Consequently, there is a growing demand of searching for a new, efficient,
 and cost-effective software development paradigm.
\end_layout

\begin_layout Standard
One of the most promising solutions today is the component-based software
 development approach.
 This approach is based on the idea that software systems can be developed
 by selecting appropriate off-the-shelf components and then assembling them
 with a well-defined software architecture.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/Diagram-CBD.png
	scale 35

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Component-Based Development software architecture
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Component-based software development (CBSD) can significantly reduce development
 cost and time-to-market, and improve maintainability, reliability and overall
 quality of software systems.
 his approach has raised a tremendous amount of interests both in the research
 community and in the software industry.
 The life cycle and software engineering model of CBSD is much different
 from that of the traditional ones.
\end_layout

\begin_layout Section
Object-Oriented Design (OOD)
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Object-Orient Design is a process of planning a software system where objects
 will interact with each other to solve specific problems.
 As developers, when anyone starts creating software architecture, they
 try to use their existing experience to create an elegant and clean design.
 Over time software starts to rot.
 With every feature request or change software design alters its shape and
 eventually the simplest changes to application requires a lot of effort
 and, more importantly, creates higher chances for more bugs.
\end_layout

\begin_layout Standard
One of the biggest reasons for the damaging of software design is the introducti
on of unplanned dependencies into the system.
 Every part of the system is dependant on some other part and so changing
 one part will affect another part.
 If there is an ability to manage those dependencies, it will be easier
 to maintain the software system and software quality too.
\end_layout

\begin_layout Standard
There are five principles of class design:
\end_layout

\begin_layout Enumerate
The Single Responsibility Principle: Each responsibility should be a separate
 class, because each responsibility is an axis of change.
\end_layout

\begin_layout Enumerate
The Open Closed Principle: A class should be open for extension, but closed
 for modification.
\end_layout

\begin_layout Enumerate
The Liskov Substitution Principle: The object of a derived class should
 be able to replace an object of the base class.
\end_layout

\begin_layout Enumerate
The Interface Segregation Principle: The dependency of one class to another
 one should depend on the smallest possible interface.
 
\end_layout

\begin_layout Enumerate
The Dependency Inversion Principle: High level modules should not depend
 upon low level modules.
 Both should depend upon abstractions.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are also three principles of package cohesion:
\end_layout

\begin_layout Enumerate
The Reuse Release Equivalence Principle: The granule of reuse is the granule
 of release.
 Only components that are released through a tracking system can effectively
 be reused.
\end_layout

\begin_layout Enumerate
The Common Closure Principle: Classes within a released component should
 share common closure.
 That is, if one needs to be changed, they all are likely to need to be
 changed.
 
\end_layout

\begin_layout Enumerate
The Common Reuse Principle: The classes in a package are reused together.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
And, there are three principles of package coupling
\end_layout

\begin_layout Enumerate
The Acyclic Dependencies Principle: The dependency structure between packages
 must not contain cyclic dependencies.
 
\end_layout

\begin_layout Enumerate
The Stable Dependencies Principle: The dependencies between packages should
 be in the direction of the stability of the packages.
 A package should only depend upon packages that are more stable than it
 is.
 
\end_layout

\begin_layout Enumerate
The Stable Abstractions Principle: Packages that are maximally stable should
 be maximally abstract.
 Unstable packages should be concrete.
 The abstractness of a package should be in proportion to its stability.
 
\end_layout

\begin_layout Section
Brackets
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Brackets is a modern open-source code editor for HTML, CSS and JavaScript
 that's built in HTML, CSS and JavaScript.
 The differences of Brackets than other code editors are:
\end_layout

\begin_layout Enumerate
Instead of cluttering up the coding environment with lots of panels and
 icons, the Quick Edit UI in Brackets puts context-specific code and tools
 inline.
\end_layout

\begin_layout Enumerate
With Live Preview, Brackets works directly with the browser to push code
 edits instantly and jump back and forth between the real source code and
 the browser view.
\end_layout

\begin_layout Enumerate
Because Brackets is open source, and built with HTML, CSS and JavaScript,
 anyone can help build the best code editor for the web.
\end_layout

\begin_layout Section
React
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
React is a UI library developed at Facebook to facilitate the creation of
 interactive, stateful & reusable UI components, many people choose to think
 of React as the V in MVC.
 It also uses a concept called the Virtual DOM that selectively renders
 subtrees of nodes based upon state changes.
 It does the least amount of DOM manipulation possible in order to keep
 components up to date.
\end_layout

\begin_layout Standard
About how the virtual DOM works, imagine of having an object that was modeled
 around a person.
 It has every relevant property a person could possibly have, and mirrored
 the persons current state.
 This is basically what React does with the DOM.
 For example, if people took that object and made some changes.
 Added a mustache, biceps and eyes.
 In React, when they apply these changes, two things take place.
 First, React runs a “diffing” algorithm, which identifies what has changed.
 The second step is reconciliation, where it updates the DOM with the results
 of diff.
\end_layout

\begin_layout Standard
The way React works, rather than taking the real person and rebuilding them
 from the ground up, it would only change the face and the arms.
 This means that if a user had text in an input and a render took place,
 as long as the input’s parent node wasn’t scheduled for reconciliation,
 the text would stay undisturbed.
 Some brief advantages of using React libraries are: 
\end_layout

\begin_layout Enumerate

\series bold
Simple
\series default
.
 Developers simply express how the app should look at any given point in
 time, and React will automatically manage all UI updates when the underlying
 data changes.
\end_layout

\begin_layout Enumerate

\series bold
Declarative
\series default
.
 When the data changes, React conceptually hits the "refresh" button, and
 knows to only update the changed parts.
\end_layout

\begin_layout Enumerate

\series bold
Build Composable Components
\series default
.
 React is all about building reusable components.
 Since they're so encapsulated, components make code reuse, testing, and
 separation of concerns easy.
\end_layout

\begin_layout Subsection
JSX Syntax
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
React believes that components are the right way to separate concerns rather
 than "templates" and "display logic." React think that markup and the code
 that generates it are intimately tied together.
 Additionally, display logic is often very complex and using template languages
 to express it becomes cumbersome.
 React found that the best solution for this problem is to generate HTML
 and component trees directly from the JavaScript code.
 It is JSX, an optional HTML-like syntax to create these React tree nodes.
\end_layout

\begin_layout Standard
“JSX lets you create JavaScript objects using HTML syntax”.
 For example, to generate a link in React using pure JavaScript is:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

React.createElement('a', 
\end_layout

\begin_layout Plain Layout

	{href: 'http://facebook.github.io/react/'}, 'Hello')
\end_layout

\end_inset


\end_layout

\begin_layout Standard
with React this becomes:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "breaklines=true,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<a href="http://facebook.github.io/react/">Hello</a>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Some key differences of JSX from DOM nodes are:
\end_layout

\begin_layout Enumerate
All DOM properties and attributes (including event handlers) should be camelCase
d to be consistent with standard JavaScript style.
\end_layout

\begin_layout Enumerate
The “style” attribute accepts a JavaScript object with camelCased properties
 rather than a CSS string.
 This is consistent with the DOM style JavaScript property, is more efficient,
 and prevents XSS security holes.
\end_layout

\begin_layout Enumerate
Since “class” and “for” are reserved words in JavaScript, the JSX elements
 for built-in DOM nodes should use the attribute names “className” and “htmlFor”
 respectively.
 Custom elements should use “class” and “for” directly.
\end_layout

\begin_layout Section
Babel
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Babel is a generic multi-purpose compiler for JavaScript.
 Using Babel, developers can use (and create) the next generation of JavaScript,
 as well as the next generation of JavaScript tooling.
 JavaScript as a language is constantly evolving, with new specs and proposals
 coming out with new features all the time.
 Using Babel will allow developers to use many of these features years before
 they are broadly available.
\end_layout

\begin_layout Standard
Babel does this by compiling down JavaScript code written with the latest
 standards into a version that will work everywhere today.
 This process is known as source-to-source compiling, also known as transpiling.
 However, Babel can do much more than this as Babel has support for syntax
 extensions such as the JSX syntax for React and Flow syntax support for
 static type checking.
 
\end_layout

\begin_layout Section
CSS pre-Processor
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
CSS preprocessors are tools that allow developers to code CSS in a certain
 way, and process it into readable, pure CSS.
 These pure CSS files are what ultimately need to link to in the projects,
 as this is the only CSS that browsers will understand.
 However, preprocessed CSS coding allow developers to streamline their work
 and take on a more scalable approach to the programming.
 There are a few preprocessors out there, notably Sass (and SCSS), LESS,
 and Stylus.
\end_layout

\begin_layout Section
SASS
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SASS is a meta-language on top of CSS that's used to describe the style
 of a document cleanly and structurally, with more power than flat CSS allows.
 SASS provides a simpler, more elegant syntax for CSS and implements various
 features that are useful for creating manageable style sheets.
 
\end_layout

\begin_layout Standard
It allows developers to use variables, nested rules, mixins, inline imports,
 and more, all with a fully CSS-compatible syntax.
 Sass helps keeping large style sheets well-organized, and get small style
 sheets up and running quickly.
 
\end_layout

\begin_layout Standard
There are two syntaxes available for Sass:
\end_layout

\begin_layout Enumerate

\series bold
SCSS
\series default
.
 (Sassy CSS) is an extension of the syntax of CSS.
 This means that every valid CSS style sheet is a valid SCSS file with the
 same meaning.
 In addition, SCSS understands most CSS hacks and vendor-specific syntax,
 such as IE’s old filter syntax.
 Files using this syntax have the “.scss” extension.
\end_layout

\begin_layout Enumerate

\series bold
SASS
\series default
.
 An older syntax, known as the indented syntax (or sometimes just “Sass”),
 provides a more concise way of writing CSS.
 It uses indentation rather than brackets to indicate nesting of selectors,
 and newlines rather than semicolons to separate properties.
 The indented syntax has all the same features, although some of them have
 slightly different syntax.
 Files using this syntax have the “.sass” extension.
\end_layout

\begin_layout Section
Git
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The manufacturers of computer software are facing difficult challenges caused
 by quite trivial reasons.
 For example, a typical application is produced by a team of developers
 working on hundreds or thousands of files on a short schedule.
 Each file needs to be available for modification by all of the developers
 at any moment.
 These problems have been known for many years, and there are various software
 tools that make group work on text files a lot of easier.
 These tools are commonly referred to as version control software or revision
 control software.
 And git belongs to this family.
\end_layout

\begin_layout Standard
Git is a distributed version control system created to support the development
 of a Linux kernel.
 It was started in April 2005 by Linus Torvalds and is now maintained by
 Junio C.
 Hamano.
 Git is just a simple content tracker, it does not include access control
 mechanisms out of the box.
 
\end_layout

\begin_layout Standard
The main features that set git apart among other version control systems
 are:
\end_layout

\begin_layout Enumerate

\series bold
Branching
\series default
.
 A branch is a way to separate parallel thinking about how a piece of code
 might evolve.
 A branch always begins from a specific point in the code base.
 branch is like an in-repository split where new work begins.
 A branch might be created with the intention of contributing work back,
 or it might be created with the intention of keeping work separate.
\end_layout

\begin_layout Enumerate

\series bold
Data Integrity
\series default
.
 It means that git tracks all the files and directories of the project in
 such a way that it is not possible to introduce unnoticed changes.
 Even if people want to change a single byte, they have to create a revision.
 When creating a revision, there is no way to hide something inside.
 This is a built-in feature that cannot be turned off.
\end_layout

\begin_layout Enumerate

\series bold
Locality
\series default
.
 This increases git’s efficiency and allows people to execute many git commands
 even if the network is down.
 When working with git people are not connected to any server.
 Most commands, such as commit, branch, merge, and rebase are performed
 locally in a similar way to typical filesystem commads such as mkdir, ls,
 rm.
 They don’t carry out any data transfer.
\end_layout

\begin_layout Enumerate

\series bold
Distributed system
\series default
.
 This means instead of having one central place which everyone must use
 if they want to have their changes recorded, each person works independently
 from the centralized code hosting system, and is responsible for making
 commits to their local copy of the repository.
 This means changes from developers are never forced into others work, instead
 it is their own decision of when they want to incorporate outside work,
 and when they want to share their own.
\end_layout

\begin_layout Enumerate

\series bold
Open Source
\series default
.
 Added to this is the fact that git is an open-source project and it is
 becoming the most popular version control system on the world.
\end_layout

\begin_layout Chapter
Analysis and Design
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This chapter contains the Problem Identification, Implementation Design
 and the Tools used in this research.
 They are the alternatives used in order to make sure the development process
 done correctly.
\end_layout

\begin_layout Section
Problem Identification
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Problem identification is made in order to make a tangible research development.
 In this research, the problem identifications are broken down into two
 parts, HTML and CSS.
\end_layout

\begin_layout Subsection
HTML Coding Issues
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
At first, building a web structure in HTML is easy.
 Without further interfaces design, creating HTML markup would probably
 be the easiest thing to do.
 But as time goes by, the demand in design implementation is significantly
 increased as now there are more devices with different sizes which causing
 front end developers had to build more complex web structures to fit in
 with these devices.
 After that, things would become a lot more complicated by then, since the
 HTML markup is filled with tags that are actually just a helper.
 Developers could barely differentiate which part of the markup code is
 the actual component they should be focusing onto creating display logic.
\end_layout

\begin_layout Subsection
React Advantages
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are three popular tools that have the ability in creating components.
 Notably React, Polymer and Angular.
 But this research had chosen React for the following reasons.
 React has only fewer lifecycle methods than Angular has.
 Therefore, React didn’t make their own specific kind of code that developers
 have to use to bind functions, as much as Angular does.
 Unlike Angular, developers don’t really have to understand React code first
 to get started as long as they are familiar with JavaScript.
\end_layout

\begin_layout Standard
Furthermore, React is also a bit superior with Polymer as of now.
 Primarily, Polymer brings compatibility expansion for Web Components to
 work in browsers that don’t support them natively yet.
 This seems great because Web Component is a new specification standard
 in HTML that allows the creation of reusable components that works independentl
y on any frameworks and libraries.
 But as for an application, Polymer hasn’t been much used in development
 and the standard of Web Component itself hasn’t been really finalized.
 So React would be a much better option for development, though React and
 Polymer are not contradictive.
\end_layout

\begin_layout Section
CSS Coding Issues
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First of, what most concerning in CSS is that style sheets are immensely
 repetitive.
 For example, developers had to repeat the exact same code for Colors, fonts,
 groupings of properties, etc.
 Entirely, CSS is a declarative, not a programming language.
 This simply means that the style properties and values that are declared
 within the rules of CSS are exactly what the browser uses to paint the
 screen.
 A programming language on the other hand provides some means of defining
 logic.
 A programming language also facilitates variables and functions.
 And there are few tools to answer this problem that works as a preprocessor
 and give these capabilities.
 However, the preprocessor that is used for this research is SASS.
\end_layout

\begin_layout Subsection
SASS Advantages
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As explained in previous chapter, SASS allows developers to use variables,
 nested rules, mixins, imports, and more, all with a fully CSS-compatible
 syntax.
 But notably, there are other preprocessors that are also popular such as
 LESS and Stylus.
 In most cases, all of them are helpful to use, but there are key differences
 between them that makes SASS superior:
\end_layout

\begin_layout Enumerate

\series bold
Syntax
\series default
.
 SASS and LESS both use the standard CSS syntax.
 This makes it easy to convert an existing CSS file to either preprocessor.
 However, Stylus is much more verbose as it also accepts other variations
 where brackets, colons, and semi-colons are all optional.
 By this comparison, SASS and LESS are superior because it has stricter
 syntax so there should be no confusion in reading the code.
\end_layout

\begin_layout Enumerate

\series bold
Inheritance
\series default
.
 All three preprocessors have the ability to inherit rules from other selectors
 so developers could have neater style sheets and it’ll be easier to maintain.
 But for LESS, it doesn’t truly support inheriting styles like SASS and
 Stylus.
 Instead of adding multiple selectors to one set of properties, its properties
 are repeated in the compiled style sheet.
 So LESS would be compiling more lines of codes and give bigger file size
 than the other two.
 In this case, SASS and Stylus are the better option.
\end_layout

\begin_layout Section
Implementation Design
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After getting all problems identified, designing methodology is needed to
 clearance how this research will do the implementation.
 The design is divided into three parts, React, JSON and SASS.
\end_layout

\begin_layout Subsection
React Structure Specification
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the research, every component was technically made into object classes.
 So, to describe the integration from each class with the other, UML Class
 Diagram is made.
 The Class Diagram is broken down into packages for each component, and
 the relation with other component is made afterwards.
 The following are types of component made in the application.
\end_layout

\begin_layout Enumerate

\series bold
Single Component
\series default
.
 Several single components are made because they don’t have any dependencies
 for their logical function in how they are going to be rendered in the
 browser.
 What they do is basically giving a design template according to its name.
\end_layout

\begin_layout Enumerate

\series bold
Packaged Component
\series default
.
 Several components are bundled into packages for a reason that every component
 should be made as small as possible so its function could focus on a single
 responsibility.
 Therefore, some components could work as aggregations or compositions and
 single components are used as relations or dependencies for some packages.
 In this research, there are packages that work as a grouper for its single
 component.
 There are also packages that work as combination of groupers and realted
 segment of its components.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
All components are made related to each other becoming a completed page
 following the pages designed in the old project.
 The pages made as Figure 3.1 and Figure 3.2 :
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/Index.png
	lyxscale 10
	scale 19

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class Diagram for Index page
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Figure 3.1, it shows the relations on each component to render the Index
 page.
 The data for articles and other configuration for the page is transfered
 from 
\begin_inset Quotes eld
\end_inset

Index
\begin_inset Quotes erd
\end_inset

 class.
 The data will flow through any component that it is supposed to go to.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/Konten.png
	lyxscale 10
	scale 19

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class Diagram for Konten page
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
In Figure 3.2, it shows the relations on each component to render the Konten
 page.
 Similar with 
\begin_inset Quotes eld
\end_inset

Index
\begin_inset Quotes erd
\end_inset

 class, only one data article is transfered to the page from 
\begin_inset Quotes eld
\end_inset

Konten
\begin_inset Quotes erd
\end_inset

 class.
 Then the other data will flow the same way as what has done in 
\begin_inset Quotes eld
\end_inset

Index
\begin_inset Quotes erd
\end_inset

 class.
\end_layout

\begin_layout Subsection
JSON Structure Specification
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this research, JSON is mainly used for setting up the content in the
 application.
 Overall, the key sets to each page are the same.
 The structure are explained in the following.
\end_layout

\begin_layout Enumerate

\series bold
Base Structure
\end_layout

\begin_deeper
\begin_layout Enumerate
Page.
 This key is made to set whether to activate functions in navigation bar
 and the search form.
\end_layout

\begin_layout Enumerate
Tags.
 This key is made to set variation of badge names for the articles later.
 
\end_layout

\begin_layout Enumerate
Menus.
 This key is made to set menus name and its link that will shown in the
 navigation bar.
\end_layout

\begin_layout Enumerate
Pagination.
 This key is made set array of page number.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Index
\end_layout

\begin_deeper
\begin_layout Enumerate
Articles.
 This key is made to set variations of articles with its content such as
 title, images, tags, source, video, paragraphs.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Konten
\end_layout

\begin_deeper
\begin_layout Enumerate
Article.
 This key is made to set a single article with the same content as “articles”
 key content.
\end_layout

\begin_layout Enumerate
Small Articles.
 This key is made to set recent articles shown in this page.
 The structure inside is same as the “articles” key.
\end_layout

\end_deeper
\begin_layout Subsection
SASS Structure Specification
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Following the old project, this research is going to implement SASS features
 such as variables, imports, mixins, extends, inheritance and restructured
 back all CSS properties.
 Also separating style sheets into different files according to the component
 properties.
 Additionally, all the values of coloring properties is moved into a single
 configurable file by defining arrays of primary colors.
 And these primary colors are distributed into variables by defining proper
 tint or shade of the colors for all properties.
 Entirely, these components are divided into two types as the following
 file-tree.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
dirtree{%
\end_layout

\begin_layout Plain Layout

.1 sass/
\backslash
DTcomment{main folder for the sass project}.
\end_layout

\begin_layout Plain Layout

.2 main.scss
\backslash
DTcomment{imports all files to main file}.
\end_layout

\begin_layout Plain Layout

.2 
\backslash
_config.scss
\backslash
DTcomment{configure breakpoints and colorings themes}.
\end_layout

\begin_layout Plain Layout

.2 base/
\backslash
DTcomment{properties with no specific components}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_base.scss
\backslash
DTcomment{the base styles for all pages}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_media.scss
\backslash
DTcomment{style adjuster for dynamic layout}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_mixins.scss
\backslash
DTcomment{functions for shortening CSS code}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_variables.scss
\backslash
DTcomment{adapt coloring properties}.
\end_layout

\begin_layout Plain Layout

.2 components/
\backslash
DTcomment{properties for specific components}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_articles.scss
\backslash
DTcomment{to set style for article panels}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_badge.scss
\backslash
DTcomment{to set style for badge used as article tags}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_footer.scss
\backslash
DTcomment{to set style for the footer of the page}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_forms.scss
\backslash
DTcomment{to set style for all type of forms}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_navbar.scss
\backslash
DTcomment{to set style for navigation bar}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_pagination.scss
\backslash
DTcomment{to set style for pagination of articles}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_sidepanel.scss
\backslash
DTcomment{to set style for the side panel of main page}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_slider.scss
\backslash
DTcomment{to set style for the article slider}.
\end_layout

\begin_layout Plain Layout

.3 
\backslash
_smallarticles.scss
\backslash
DTcomment{to set style for small articles in side panel}.
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Tools
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The tools used in this development in order to implement the design are
 shown in the following.
 There are Brackets with Babel extension, Scout, Git and a ShellScript.
 
\end_layout

\begin_layout Enumerate

\series bold
Brackets
\series default
.
 To install Brackets, simply download the installer in brackets.io and follow
 its instruction and install Babel extension.
 The steps are shown as the following:
\end_layout

\begin_deeper
\begin_layout Enumerate
In Brackets, navigate to File > Extension Manager…
\end_layout

\begin_layout Enumerate
Search Autobabel, then click “install”.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Scout
\series default
.
 To install Scout, simply download the installer in 
\begin_inset Quotes eld
\end_inset

mhs.github.io/scout-app/
\begin_inset Quotes erd
\end_inset

 and follow its instruction.
 After that, to initialize the CSS preprocessor, open the application and
 add the SASS folder in the project to Scout so it will transpile them into
 CSS.
 The steps are shown as the following:
\end_layout

\begin_deeper
\begin_layout Enumerate
In Scout, click “+” and select project.
\end_layout

\begin_layout Enumerate
Then, set style sheet directories for input and output.
 Input is the sass folder, Ouput is the css folder.
\end_layout

\begin_layout Enumerate
Lastly, set JavaScript directories the same way as the previous step.
\end_layout

\end_deeper
\begin_layout Enumerate

\series bold
Git
\series default
.
 To install Git, simply download the installer in 
\begin_inset Quotes eld
\end_inset

git-scm.com/download/mac
\begin_inset Quotes erd
\end_inset

 and follow its instructions.
 After that, in order start using git, run a command line to initialize
 the project so it will be tracked by git.
 To do this, simply open command line and move to the project folder with
 cd command and run 
\begin_inset Quotes eld
\end_inset

git init
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate

\series bold
ShellScript
\series default
.
 Since all the React components are separated, it is needed to bundle them
 into a single file so linking the scripts in HTML will be easier.
 This research creates a small shellscript and uses an API from closure-compiler.
appspot.com/compile to compile and bundle them into a single minified file.
 
\end_layout

\begin_deeper
\begin_layout Standard
The shellscript code is shown as follows:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

#!/bin/bash
\end_layout

\begin_layout Plain Layout

# Constants 
\end_layout

\begin_layout Plain Layout

SERVICE_URL=http://closure-compiler.appspot.com/compile 
\end_layout

\begin_layout Plain Layout

#NEWFILE="c`date +"%d%m%y"`.js" 
\end_layout

\begin_layout Plain Layout

#this specifies last arg as destination  declare -a
\end_layout

\begin_layout Plain Layout

component=(
\end_layout

\begin_layout Plain Layout

"react/components/Article/Article.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/ArticleGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/Image.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/Paragraph.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/Video.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Badge.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Badge.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Footer.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Headline.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/Navbar.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/Dropdown.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/DropdownMenu.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/Menu.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/NavbarForm.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/NavsGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Pagination.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SidePanel/SidePanel.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SidePanel/SidePanelHeader.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SidePanel/SidePanelFooter.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Slider/Slider.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Slider/SliderGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SmallArticle/SmallArticle.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SmallArticle/SmallArticleGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/TagPanel.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Title.js") 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

declare -a index=("react/index/Index.js" 
\end_layout

\begin_layout Plain Layout

	"react/index/IndexBody.js") 
\end_layout

\begin_layout Plain Layout

declare -a konten=("react/konten/Konten.js" 
\end_layout

\begin_layout Plain Layout

	"react/konten/KontenBody.js") 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for NEWFILE in $*; do :; done
\end_layout

\begin_layout Plain Layout

process_files=false 
\end_layout

\begin_layout Plain Layout

if [[ $1 == 1 ]]; then declare -a data="${component[@]}"  
\end_layout

\begin_layout Plain Layout

fi 
\end_layout

\begin_layout Plain Layout

if [[ $1 == 2 ]]; then declare -a data="${index[@]}"  
\end_layout

\begin_layout Plain Layout

fi  
\end_layout

\begin_layout Plain Layout

if [[ $1 == 3 ]]; then declare -a data="${konten[@]}"  
\end_layout

\begin_layout Plain Layout

fi 
\end_layout

\begin_layout Plain Layout

for f in ${data[@]} do         
\end_layout

\begin_layout Plain Layout

if [ ${f} != $NEWFILE ] then                 
\end_layout

\begin_layout Plain Layout

	if [ -r ${f} ] then                        
\end_layout

\begin_layout Plain Layout

		code="${code} --data-urlencode js_code@${f}"                         
          
\end_layout

\begin_layout Plain Layout

		if [ ${f} -nt $NEWFILE ]; then 						    			process_files=true 						
\end_layout

\begin_layout Plain Layout

		fi                 
\end_layout

\begin_layout Plain Layout

	else                         
\end_layout

\begin_layout Plain Layout

		echo "File ${f} does not exist or is not readable.
 Skipped."                	
\end_layout

\begin_layout Plain Layout

	fi         
\end_layout

\begin_layout Plain Layout

fi 
\end_layout

\begin_layout Plain Layout

done 
\end_layout

\begin_layout Plain Layout

curl 
\backslash
 
\end_layout

\begin_layout Plain Layout

--url ${SERVICE_URL} 
\backslash
 
\end_layout

\begin_layout Plain Layout

--header 'Content-type: application/x-www-form-urlencoded' 
\backslash
 
\end_layout

\begin_layout Plain Layout

${code} 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_format=json 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_info=compiled_code 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_info=statistics 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_info=errors 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data compilation_level=SIMPLE_OPTIMIZATIONS |
\end_layout

\begin_layout Plain Layout

python -c ' 
\end_layout

\begin_layout Plain Layout

import json, sys 
\end_layout

\begin_layout Plain Layout

data = json.load(sys.stdin)
\end_layout

\begin_layout Plain Layout

if "errors" in data: 	
\end_layout

\begin_layout Plain Layout

	print "### COMPILATION FAILED WITH ERRORS" 	
\end_layout

\begin_layout Plain Layout

	for err in data["errors"]: 		
\end_layout

\begin_layout Plain Layout

		file = sys.argv[int(err["file"].replace("Input_", "")) 
\end_layout

\begin_layout Plain Layout

			+ 1] 		
\end_layout

\begin_layout Plain Layout

		print "File: %s, %d:%d" % (file, err["lineno"], 
\end_layout

\begin_layout Plain Layout

			err["charno"]) 		
\end_layout

\begin_layout Plain Layout

		print "Error: %s" % err["error"] 		
\end_layout

\begin_layout Plain Layout

		print "Line: %s" % err["line"] 	
\end_layout

\begin_layout Plain Layout

		print "
\backslash
nBuild failed.
\backslash
n" 
\end_layout

\begin_layout Plain Layout

else: 	
\end_layout

\begin_layout Plain Layout

	print "### COMPILATION COMPLETED" 	
\end_layout

\begin_layout Plain Layout

	print "Original size: %db, gziped: %db" % 
\end_layout

\begin_layout Plain Layout

		(data["statistics"]["originalSize"], 		data["statistics"]["originalGzipSize"])
 	
\end_layout

\begin_layout Plain Layout

	print "Compressed size: %db, gziped: %db" % 
\end_layout

\begin_layout Plain Layout

		(data["statistics"]["compressedSize"], 		data["statistics"]["compressedGzipSiz
e"]) 	
\end_layout

\begin_layout Plain Layout

	print "Compression rate: %.2f" % 
\end_layout

\begin_layout Plain Layout

		(float(data["statistics"]["compressedSize"]) / 
\end_layout

\begin_layout Plain Layout

		int(data["statistics"]["originalSize"]))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	filename = "'${NEWFILE}'" 	
\end_layout

\begin_layout Plain Layout

	with open(filename, "w") as f: 		
\end_layout

\begin_layout Plain Layout

		f.write(data["compiledCode"])
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	print "
\backslash
nBuild file %s created.
\backslash
n" % filename 
\end_layout

\begin_layout Plain Layout

' $@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
There are three main files used for the html as the following:
\end_layout

\begin_layout Enumerate
built.min.js -> to create this file, run 
\begin_inset Quotes eld
\end_inset

./compressjs.sh 1 js/built.min.js
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
index.min.js -> to create this file, run 
\begin_inset Quotes eld
\end_inset

./compressjs.sh 2 js/index.min.js
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Enumerate
konten.min.js -> to create this file, run 
\begin_inset Quotes eld
\end_inset

./compressjs.sh 3 js/konten.min.js
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
hspace*{20pt}
\end_layout

\end_inset

These commands are executed each time there are changes made in the components.
 The first one is to merge all components specified.
 Index and Konten are the actual page in the application that use the merged
 components as their library.
\end_layout

\end_deeper
\begin_layout Chapter
Implementation and Discussion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This chapter contains the implementation of the design specified in Chapter
 3 and the Dicussions about the implementation of Component-Based Development
 to make maintainable and reusable code.
\end_layout

\begin_layout Section
React Implementation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Below is the implementation of React structure specified in Chapter 3, contains
 classes such as: Article, Navbar, SidePanel, Slider, SmallArticle, Badge,
 Headline, Title, TagPanel, Pagination, Footer, Index and Konten.
\end_layout

\begin_layout Subsection
Class Article
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Article component is used to render the article data presented from
 JSON that includes author, tags, paragraphs, image and video as the main
 article view.
\end_layout

\begin_layout Subsubsection
Segment Class ArticleGroup
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used to loop and group all articles that will be presented
 in the data.
 there are full-width panel and half-width panel for an article, which is
 specified by the data.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var ArticleGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		linkMore : React.PropTypes.bool 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkColoumnType: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.type == "full" ? 
\end_layout

\begin_layout Plain Layout

			"col-md-12 panel-wide" : 
\end_layout

\begin_layout Plain Layout

			"col-md-6 col-sm-6 col-xs-12"; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderArticles: function(){   
\end_layout

\begin_layout Plain Layout

		var linkMore = this.props.linkMore;   
\end_layout

\begin_layout Plain Layout

		var column = this.checkColoumnType();   
\end_layout

\begin_layout Plain Layout

		var type = this.props.type;   
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function(article, key){     
\end_layout

\begin_layout Plain Layout

			return (     
\end_layout

\begin_layout Plain Layout

				<div  key={key} className={column}>       
\end_layout

\begin_layout Plain Layout

					<Article 
\end_layout

\begin_layout Plain Layout

						type={type} 
\end_layout

\begin_layout Plain Layout

						link={article.link} 
\end_layout

\begin_layout Plain Layout

						title={article.title} 
\end_layout

\begin_layout Plain Layout

						tags={article.tags} 
\end_layout

\begin_layout Plain Layout

						source={article.source} 
\end_layout

\begin_layout Plain Layout

						linkMore={linkMore}>           
\end_layout

\begin_layout Plain Layout

							{article.content}         
\end_layout

\begin_layout Plain Layout

					</Article>     
\end_layout

\begin_layout Plain Layout

				</div>      
\end_layout

\begin_layout Plain Layout

			);   
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return ({this.renderArticles()}); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Article
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used to render the panel of a single article with its content,
 such as tags, image, video and paragraph.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Article = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		linkMore : React.PropTypes.bool.isRequired 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 	
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTags: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map(function(tag, key){             
\end_layout

\begin_layout Plain Layout

			return(
\end_layout

\begin_layout Plain Layout

				<li key={key}>
\end_layout

\begin_layout Plain Layout

					<Badge type={tag.type}>{tag.title}</Badge>
\end_layout

\begin_layout Plain Layout

				</li>
\end_layout

\begin_layout Plain Layout

			);
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	shouldLinkMore: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.linkMore? 
\end_layout

\begin_layout Plain Layout

			<li className="article-footer text-left">
\end_layout

\begin_layout Plain Layout

				<a href={this.props.link}>Read More...</a>
\end_layout

\begin_layout Plain Layout

			</li> : null;  
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderParagraph: function(){   
\end_layout

\begin_layout Plain Layout

		return 
\end_layout

\begin_layout Plain Layout

			<Paragraph type={this.props.type}>
\end_layout

\begin_layout Plain Layout

				{this.getChild().paragraph}
\end_layout

\begin_layout Plain Layout

			</Paragraph>; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderVideo: function(){   
\end_layout

\begin_layout Plain Layout

		return <Video src={this.getChild().video}></Video>; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderImage: function(){   
\end_layout

\begin_layout Plain Layout

		return <Image src={this.getChild().image}></Image>; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderArticles: function(){   
\end_layout

\begin_layout Plain Layout

		var content = {     
\end_layout

\begin_layout Plain Layout

			paragraph: this.renderParagraph(),     
\end_layout

\begin_layout Plain Layout

			video: this.renderVideo(),     
\end_layout

\begin_layout Plain Layout

			image: this.renderImage()   
\end_layout

\begin_layout Plain Layout

		};   
\end_layout

\begin_layout Plain Layout

		return 
\end_layout

\begin_layout Plain Layout

			this.getChild().video != "" ?
\end_layout

\begin_layout Plain Layout

				<div>{content.video}{content.paragraph}</div>:
\end_layout

\begin_layout Plain Layout

			this.getChild().image != "" ? 
\end_layout

\begin_layout Plain Layout

				<div>{content.image}{content.paragraph}</div>:
\end_layout

\begin_layout Plain Layout

			null;   
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (             
\end_layout

\begin_layout Plain Layout

		<div className="panel panel-default">                 
\end_layout

\begin_layout Plain Layout

			<div className="panel-heading">                   
\end_layout

\begin_layout Plain Layout

				<div className="panel-title">
\end_layout

\begin_layout Plain Layout

					<a href={this.props.link}><span className="lead">
\end_layout

\begin_layout Plain Layout

						{this.props.title}</span>
\end_layout

\begin_layout Plain Layout

					</a>
\end_layout

\begin_layout Plain Layout

				</div>                 
\end_layout

\begin_layout Plain Layout

			</div>                 
\end_layout

\begin_layout Plain Layout

			<div className="panel-body">                   
\end_layout

\begin_layout Plain Layout

				<ul className="list-unstyled">                     
\end_layout

\begin_layout Plain Layout

					<li>                       
\end_layout

\begin_layout Plain Layout

						<ul className="list-inline">
\end_layout

\begin_layout Plain Layout

							{this.renderTags()}
\end_layout

\begin_layout Plain Layout

						</ul>                     
\end_layout

\begin_layout Plain Layout

					</li>                     
\end_layout

\begin_layout Plain Layout

					<li>                       
\end_layout

\begin_layout Plain Layout

						<blockquote>                         
\end_layout

\begin_layout Plain Layout

							<footer>Author : <cite title="Source Title">
\end_layout

\begin_layout Plain Layout

								{this.props.source}</cite>
\end_layout

\begin_layout Plain Layout

							</footer>                       
\end_layout

\begin_layout Plain Layout

						</blockquote>                    
\end_layout

\begin_layout Plain Layout

					</li>                     
\end_layout

\begin_layout Plain Layout

					<div>{this.renderArticles()}</div>
\end_layout

\begin_layout Plain Layout

					{this.shouldLinkMore()}
\end_layout

\begin_layout Plain Layout

				</ul>                 
\end_layout

\begin_layout Plain Layout

			</div>              
\end_layout

\begin_layout Plain Layout

		</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Paragraph
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used by the Article segment to render the paragraph that
 is presented on a single article.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Paragraph = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.array, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderParagraph: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children.map(function(paragraph, key){             
\end_layout

\begin_layout Plain Layout

			return(               
\end_layout

\begin_layout Plain Layout

			<p className="text-justify" key={key}>                 
\end_layout

\begin_layout Plain Layout

				{paragraph}               
\end_layout

\begin_layout Plain Layout

			</p>             
\end_layout

\begin_layout Plain Layout

			);           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className={"article-text-"+ this.props.type}>       
\end_layout

\begin_layout Plain Layout

				{this.renderParagraph()}     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Image
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used by the Article segement to render the image that is
 presented on a single article.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Image = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		src : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className="konten-img">
\end_layout

\begin_layout Plain Layout

				<img src={this.props.src} className="img-responsive"/>
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Video
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used by the Article segment to render the video that is
 presented on a single article.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Video = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		src : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li>       
\end_layout

\begin_layout Plain Layout

				<div className="embed-responsive embed-responsive-16by9">         
\end_layout

\begin_layout Plain Layout

					<iframe 
\end_layout

\begin_layout Plain Layout

						className="embed-responsive-item" 
\end_layout

\begin_layout Plain Layout

						src={this.props.src} 
\end_layout

\begin_layout Plain Layout

						frameBorder="0" 
\end_layout

\begin_layout Plain Layout

						allowFullScreen>
\end_layout

\begin_layout Plain Layout

					</iframe>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Article.png
	lyxscale 40
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Article
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Navbar
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Navbar component is used to render the menu specified from the data
 into the main menu bar at top of the page.
 
\end_layout

\begin_layout Subsubsection
Segment Class Navbar
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the base foundation of the navigation bar.
 it determines when and where to render a form, a dropdown and menus specified
 by the data.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Navbar = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		menus : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		page : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		addMargin : React.PropTypes.bool,   
\end_layout

\begin_layout Plain Layout

		title : React.PropTypes.bool,   
\end_layout

\begin_layout Plain Layout

		active : React.PropTypes.string 
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarCollapse ? 
\end_layout

\begin_layout Plain Layout

			"collapse navbar-collapse" : 
\end_layout

\begin_layout Plain Layout

			""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	navbarLeft: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarLeft ? {     
\end_layout

\begin_layout Plain Layout

			float: "left",     
\end_layout

\begin_layout Plain Layout

			margin: this.props.addMargin,     
\end_layout

\begin_layout Plain Layout

			menu: this.props.menus.left,     
\end_layout

\begin_layout Plain Layout

			page: this.props.page.active,     
\end_layout

\begin_layout Plain Layout

			collapse: this.props.page.navbarCollapse,     
\end_layout

\begin_layout Plain Layout

			active: this.props.active,     
\end_layout

\begin_layout Plain Layout

		} : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	navbarRight: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarRight ? {     
\end_layout

\begin_layout Plain Layout

			float: "right",     
\end_layout

\begin_layout Plain Layout

			margin: this.props.addMargin,     
\end_layout

\begin_layout Plain Layout

			menu: this.props.menus.right,     
\end_layout

\begin_layout Plain Layout

			page: this.props.page.active,     
\end_layout

\begin_layout Plain Layout

			collapse: this.props.page.navbarCollapse,     
\end_layout

\begin_layout Plain Layout

			active: this.props.active,     
\end_layout

\begin_layout Plain Layout

		} : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderNav: function(nav){   
\end_layout

\begin_layout Plain Layout

		return nav != null?     
\end_layout

\begin_layout Plain Layout

			<NavsGroup 
\end_layout

\begin_layout Plain Layout

				addMargin={nav.margin}                  
\end_layout

\begin_layout Plain Layout

				options={nav.menu}                  
\end_layout

\begin_layout Plain Layout

				page={nav.page}                  
\end_layout

\begin_layout Plain Layout

				float={nav.float}                  
\end_layout

\begin_layout Plain Layout

				collapse={nav.collapse}                  
\end_layout

\begin_layout Plain Layout

				active={nav.active}>     
\end_layout

\begin_layout Plain Layout

			</NavsGroup> : null;   
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderForm: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarForm ? 
\end_layout

\begin_layout Plain Layout

			<NavbarForm></NavbarForm> : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTitle: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.title ? 
\end_layout

\begin_layout Plain Layout

			<Title navbar={true}></Title> : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<nav className={"navbar navbar-default panel-navbar full-nav " 
\end_layout

\begin_layout Plain Layout

					+ this.checkIsCollapse()}>           
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid">             
\end_layout

\begin_layout Plain Layout

					<div className="navbar-header">               
\end_layout

\begin_layout Plain Layout

						<button 
\end_layout

\begin_layout Plain Layout

							type="button" 
\end_layout

\begin_layout Plain Layout

							className="navbar-toggle collapsed" 
\end_layout

\begin_layout Plain Layout

							data-toggle="collapse" 
\end_layout

\begin_layout Plain Layout

							data-target="#bs-example-navbar-collapse-1" 
\end_layout

\begin_layout Plain Layout

							aria-expanded="false">                 
\end_layout

\begin_layout Plain Layout

							<span className="sr-only">Toggle navigation</span>    							<span
 className="icon-bar"></span>                 
\end_layout

\begin_layout Plain Layout

							<span className="icon-bar"></span>                 							<span className
="icon-bar"></span>               
\end_layout

\begin_layout Plain Layout

						</button>               
\end_layout

\begin_layout Plain Layout

						{this.renderTitle()}             
\end_layout

\begin_layout Plain Layout

					</div>
\end_layout

\begin_layout Plain Layout

					<div className="collapse navbar-collapse" 
\end_layout

\begin_layout Plain Layout

						id="bs-example-navbar-collapse-1">             						{this.renderNav(this.na
vbarLeft())}          						{this.renderForm()}
\end_layout

\begin_layout Plain Layout

						{this.renderNav(this.navbarRight())}             
\end_layout

\begin_layout Plain Layout

					</div>           
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

			</nav>     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}); 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class NavbarForm
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the template of a form in a navigation bar.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var NavbarForm = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	render : function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<form className="navbar-form navbar-right" role="search">       
\end_layout

\begin_layout Plain Layout

				<div className="form-group">         
\end_layout

\begin_layout Plain Layout

					<input 
\end_layout

\begin_layout Plain Layout

						type="text" 
\end_layout

\begin_layout Plain Layout

						className="form-control" 
\end_layout

\begin_layout Plain Layout

						placeholder="Search"/>  
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</form>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class NavsGroup
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segement is used to detemines the type of menu, whether it should be
 a single menu or a dropdown menu.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var NavsGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		float : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		collapse : React.PropTypes.bool.isRequired,   
\end_layout

\begin_layout Plain Layout

		options : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		addMargin : React.PropTypes.bool.isRequired,   
\end_layout

\begin_layout Plain Layout

		active : React.PropTypes.string 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkMenuFloat: function(){   
\end_layout

\begin_layout Plain Layout

		var float = this.props.float == "right" ? 
\end_layout

\begin_layout Plain Layout

			"nav navbar-nav navbar-right" : 
\end_layout

\begin_layout Plain Layout

			"nav navbar-nav navbar-left";   
\end_layout

\begin_layout Plain Layout

		return float + this.shouldAddMargin(); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	shouldAddMargin: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.addMargin ? "" : " navbar-float-left"; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderMenus: function(){   
\end_layout

\begin_layout Plain Layout

		var collapse = this.props.collapse;   
\end_layout

\begin_layout Plain Layout

		var active = this.props.active;   
\end_layout

\begin_layout Plain Layout

		return this.props.options.map(function(option, key){             
\end_layout

\begin_layout Plain Layout

			if(option.length >= 2){               
\end_layout

\begin_layout Plain Layout

				return 
\end_layout

\begin_layout Plain Layout

					<Dropdown 
\end_layout

\begin_layout Plain Layout

						collapse={collapse} 
\end_layout

\begin_layout Plain Layout

						key={key} 
\end_layout

\begin_layout Plain Layout

						dropdownMenus={option} 
\end_layout

\begin_layout Plain Layout

						link={option[0][1]}>
\end_layout

\begin_layout Plain Layout

						{option[0][0]}
\end_layout

\begin_layout Plain Layout

					</Dropdown>;             
\end_layout

\begin_layout Plain Layout

			}else{               
\end_layout

\begin_layout Plain Layout

				return 
\end_layout

\begin_layout Plain Layout

					<Menu 
\end_layout

\begin_layout Plain Layout

						link={option[0][1]} 
\end_layout

\begin_layout Plain Layout

						key={key} 
\end_layout

\begin_layout Plain Layout

						active={active}>
\end_layout

\begin_layout Plain Layout

						{option[0][0]}
\end_layout

\begin_layout Plain Layout

					</Menu>;
\end_layout

\begin_layout Plain Layout

			}           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<ul className={this.checkMenuFloat()}>       
\end_layout

\begin_layout Plain Layout

				{this.renderMenus()}     
\end_layout

\begin_layout Plain Layout

			</ul>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Dropdown
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used by NavsGroup segment to render the parent menu of a
 dropdown.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Dropdown = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		dropdownMenus : React.PropTypes.array.isRequired,   
\end_layout

\begin_layout Plain Layout

		collapse : React.PropTypes.bool.isRequired, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderSubMenus: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.dropdownMenus.map(function(menu, key){               
\end_layout

\begin_layout Plain Layout

			if (key > 0){                 
\end_layout

\begin_layout Plain Layout

				return 
\end_layout

\begin_layout Plain Layout

					<DropdownMenu key={key} link={menu[1]}>
\end_layout

\begin_layout Plain Layout

						{menu[0]}
\end_layout

\begin_layout Plain Layout

					</DropdownMenu>;             
\end_layout

\begin_layout Plain Layout

			}           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.collapse ? "menu-collapse" : ""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className={"dropdown " + this.checkIsCollapse()}>       
\end_layout

\begin_layout Plain Layout

				<a 
\end_layout

\begin_layout Plain Layout

					href={this.props.link} 
\end_layout

\begin_layout Plain Layout

					className="dropdown-toggle" 
\end_layout

\begin_layout Plain Layout

					data-toggle="dropdown" 
\end_layout

\begin_layout Plain Layout

					role="button" 
\end_layout

\begin_layout Plain Layout

					aria-haspopup="true" 
\end_layout

\begin_layout Plain Layout

					aria-expanded="false">
\end_layout

\begin_layout Plain Layout

					{this.props.children}
\end_layout

\begin_layout Plain Layout

					<span className="caret"></span>
\end_layout

\begin_layout Plain Layout

				</a>       
\end_layout

\begin_layout Plain Layout

				<ul className="dropdown-menu">
\end_layout

\begin_layout Plain Layout

					{this.renderSubMenus()}
\end_layout

\begin_layout Plain Layout

				</ul>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class DropdownMenu
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segement is used by NavsGroup segment to render the child menu of a
 dropdown.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var DropdownMenu = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string.isRequired, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li>       
\end_layout

\begin_layout Plain Layout

				<a href={this.props.link}>{this.getChild()}</a>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Menu
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used by NavsGroup segment to render a single menu.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Menu = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render : function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className={this.props.children == this.props.active? 
\end_layout

\begin_layout Plain Layout

				"active" : ""}>       
\end_layout

\begin_layout Plain Layout

				<a href={this.props.link} className="lead">
\end_layout

\begin_layout Plain Layout

					{this.getChild()}
\end_layout

\begin_layout Plain Layout

				</a>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Navbar.png
	lyxscale 40
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Navbar
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class SidePanel
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SidePanel is used to render the template of the side panel that contains
 SidePanelHeader as the header and SidePanelFooter as the footer.
\end_layout

\begin_layout Subsubsection
Segment Class SidePanel
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is the base template of the side panel.
 it contains list headers, lists of recent articles and tags, and a footer.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SidePanel = React.createClass({   
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

		<div className="col-lg-4 panel-sidepanel">     
\end_layout

\begin_layout Plain Layout

			<div className="panel panel-default">       
\end_layout

\begin_layout Plain Layout

				<div className="panel-body text-center">         
\end_layout

\begin_layout Plain Layout

					<ul className="list-group list-unstyled text-center">           
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item title">             
\end_layout

\begin_layout Plain Layout

							<Title navbar={false}></Title>           
\end_layout

\begin_layout Plain Layout

						</li>           
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item hello">             
\end_layout

\begin_layout Plain Layout

							<Headline></Headline>           
\end_layout

\begin_layout Plain Layout

						</li>         
\end_layout

\begin_layout Plain Layout

					</ul>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

			<SidePanelHeader class="list-header-collapse-xsmall">
\end_layout

\begin_layout Plain Layout

				Recent
\end_layout

\begin_layout Plain Layout

			</SidePanelHeader>     
\end_layout

\begin_layout Plain Layout

			<SmallArticleGroup 
\end_layout

\begin_layout Plain Layout

				articles={this.props.articles} 
\end_layout

\begin_layout Plain Layout

				type={this.props.type} 			
\end_layout

\begin_layout Plain Layout

				collapse={this.props.collapse}>
\end_layout

\begin_layout Plain Layout

			</SmallArticleGroup>     
\end_layout

\begin_layout Plain Layout

			<div className="panel-collapse">       
\end_layout

\begin_layout Plain Layout

				<SidePanelHeader>Tags</SidePanelHeader>     
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

			<div className="panel-collapse">       
\end_layout

\begin_layout Plain Layout

				<TagPanel tags={this.props.tags}></TagPanel>     
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

			<SidePanelFooter>Codime</SidePanelFooter>     
\end_layout

\begin_layout Plain Layout

		</div>     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}); 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class SidePanelHeader
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the template of list title.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SidePanelHeader = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){ 
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(   
\end_layout

\begin_layout Plain Layout

			<li className={"list-group-item text-left " + this.props.class}>
\end_layout

\begin_layout Plain Layout

				<span className="lead">{this.getChild()}</span>
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class SidePanelFooter
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the template of the side panel footer.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SidePanelFooter = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<div className="list-group-item text-center sidepanel-footer">      
 
\end_layout

\begin_layout Plain Layout

				<span>Created by <b><a href="#">
\end_layout

\begin_layout Plain Layout

					{this.getChild()}
\end_layout

\begin_layout Plain Layout

				</a></b></span>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Sidepanel.png
	lyxscale 40
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of SidePanel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Slider
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Slider is used to render all article data presented from the data in a carousel.
 This component will only render the title, tags and paragraph of each article.
\end_layout

\begin_layout Subsubsection
Segment Class SliderGroup
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segement is used to loop and group all articles and present each of
 them as a slider.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SliderGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderSlides: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map( function(article, key){       
\end_layout

\begin_layout Plain Layout

			return (           
\end_layout

\begin_layout Plain Layout

				<Slider 
\end_layout

\begin_layout Plain Layout

					link={article.link} key={key} index={key} 
\end_layout

\begin_layout Plain Layout

					tags={article.tags} title={article.title}>
\end_layout

\begin_layout Plain Layout

					{article.content.paragraph}
\end_layout

\begin_layout Plain Layout

				</Slider>         
\end_layout

\begin_layout Plain Layout

			);   
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function (){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className="col-md-12 panel-ad">       
\end_layout

\begin_layout Plain Layout

				<div id="carousel-recent" 
\end_layout

\begin_layout Plain Layout

					className="carousel slide collapse navbar-collapse" 
\end_layout

\begin_layout Plain Layout

					data-ride="carousel">         
\end_layout

\begin_layout Plain Layout

					<div className="carousel-inner" role="listbox">           
\end_layout

\begin_layout Plain Layout

						{this.renderSlides()}         
\end_layout

\begin_layout Plain Layout

					</div>         
\end_layout

\begin_layout Plain Layout

					<a className="left carousel-control" 
\end_layout

\begin_layout Plain Layout

						href="#carousel-recent" role="button" 
\end_layout

\begin_layout Plain Layout

						data-slide="prev">           
\end_layout

\begin_layout Plain Layout

						<span className="glyphicon 
\end_layout

\begin_layout Plain Layout

							glyphicon-chevron-left" 
\end_layout

\begin_layout Plain Layout

							aria-hidden="true"></span>           
\end_layout

\begin_layout Plain Layout

						<span className="sr-only">Previous</span>         
\end_layout

\begin_layout Plain Layout

					</a>         
\end_layout

\begin_layout Plain Layout

					<a className="right carousel-control" 
\end_layout

\begin_layout Plain Layout

						href="#carousel-recent" role="button" 
\end_layout

\begin_layout Plain Layout

						data-slide="next">           
\end_layout

\begin_layout Plain Layout

						<span className="glyphicon 
\end_layout

\begin_layout Plain Layout

							glyphicon-chevron-right" 
\end_layout

\begin_layout Plain Layout

							aria-hidden="true"></span>           
\end_layout

\begin_layout Plain Layout

						<span className="sr-only">Next</span>        
\end_layout

\begin_layout Plain Layout

					</a>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	}  
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class Slider
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the template of a single slider.
 Each slider contains title, tags and paragraphs.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Slider = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTags: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map( function(tag, key){             
\end_layout

\begin_layout Plain Layout

			return (               
\end_layout

\begin_layout Plain Layout

				<li key={key}>
\end_layout

\begin_layout Plain Layout

					<Badge type={tag.type}>{tag.title}</Badge>
\end_layout

\begin_layout Plain Layout

				</li>       
\end_layout

\begin_layout Plain Layout

			);            
\end_layout

\begin_layout Plain Layout

		}) 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className={this.props.index == 0? "item active": "item"}>       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<div className="col-sm-12">           
\end_layout

\begin_layout Plain Layout

						<div className="panel panel-default">             
\end_layout

\begin_layout Plain Layout

							<div className="panel-body">               
\end_layout

\begin_layout Plain Layout

								<div className="media">                 
\end_layout

\begin_layout Plain Layout

									<div className="media-body text-justify"> 
\end_layout

\begin_layout Plain Layout

										<h4 className="media-heading 
\end_layout

\begin_layout Plain Layout

											text-left lead">
\end_layout

\begin_layout Plain Layout

											{this.props.title}                      
\end_layout

\begin_layout Plain Layout

											<ul className="list-inline">    
\end_layout

\begin_layout Plain Layout

												{this.renderTags()}                 
\end_layout

\begin_layout Plain Layout

											</ul>                   
\end_layout

\begin_layout Plain Layout

										</h4>                   
\end_layout

\begin_layout Plain Layout

										<ul className="list-unstyled">              
\end_layout

\begin_layout Plain Layout

											<Paragraph 											type={"short"}>
\end_layout

\begin_layout Plain Layout

												{this.getChild()}
\end_layout

\begin_layout Plain Layout

											</Paragraph>                   
\end_layout

\begin_layout Plain Layout

										</ul>                 
\end_layout

\begin_layout Plain Layout

									</div>                 
\end_layout

\begin_layout Plain Layout

									<a href={this.props.link}>Read more...</a> 
\end_layout

\begin_layout Plain Layout

								</div>             
\end_layout

\begin_layout Plain Layout

							</div>           
\end_layout

\begin_layout Plain Layout

						</div>         
\end_layout

\begin_layout Plain Layout

					</div>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Slider.png
	lyxscale 40
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Slider
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class SmallArticle
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SmallArticle is used to render all article data presented from the data
 in a smaller view and this component will only render the title and author
 of each article.
\end_layout

\begin_layout Subsubsection
Segment Class SmallArticleGroup
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used to loop and group all articles and present each of
 them in a small panel.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SmallArticleGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		collapse: React.PropTypes.bool 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderArticles: function(){   
\end_layout

\begin_layout Plain Layout

		var type = this.props.type;   
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function(article, key){             
\end_layout

\begin_layout Plain Layout

			if(!type){                 
\end_layout

\begin_layout Plain Layout

			return 
\end_layout

\begin_layout Plain Layout

				<SmallArticle key={key} link={article.link} 
\end_layout

\begin_layout Plain Layout

					title={article.title} 
\end_layout

\begin_layout Plain Layout

					source={article.source}></SmallArticle>              
\end_layout

\begin_layout Plain Layout

			}else if(key < 3){                 
\end_layout

\begin_layout Plain Layout

			return 
\end_layout

\begin_layout Plain Layout

				<SmallArticle key={key} link={article.link} 
\end_layout

\begin_layout Plain Layout

					title={article.title} 
\end_layout

\begin_layout Plain Layout

					source={article.source}></SmallArticle>              
\end_layout

\begin_layout Plain Layout

			}           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.collapse? "collapse navbar-collapse" : ""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (         
\end_layout

\begin_layout Plain Layout

			<div className={"panel panel-small-article " + this.checkIsCollapse()}>
\end_layout

\begin_layout Plain Layout

				<div className="panel-body panel-body-content">             
\end_layout

\begin_layout Plain Layout

					<ul className="list-group text-center">                 
\end_layout

\begin_layout Plain Layout

						{this.renderArticles()}             
\end_layout

\begin_layout Plain Layout

					</ul>           
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class SmallArticle
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the template of a single small article.
 Each small article contains title and the author.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SmallArticle = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		title : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		source : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className="list-group-item small-article">       
\end_layout

\begin_layout Plain Layout

				<ul className="list-inline">         
\end_layout

\begin_layout Plain Layout

					<li>           
\end_layout

\begin_layout Plain Layout

						<div className="media">             
\end_layout

\begin_layout Plain Layout

							<div className="media-body text-justify">               
\end_layout

\begin_layout Plain Layout

								<h4 className="media-heading text-left">            
\end_layout

\begin_layout Plain Layout

									<a href={this.props.link}>
\end_layout

\begin_layout Plain Layout

										{this.props.title}
\end_layout

\begin_layout Plain Layout

									</a>    
\end_layout

\begin_layout Plain Layout

								</h4>              
\end_layout

\begin_layout Plain Layout

								<blockquote 
\end_layout

\begin_layout Plain Layout

									className="block-small-article">        
\end_layout

\begin_layout Plain Layout

									<footer>
\end_layout

\begin_layout Plain Layout

										Author : 
\end_layout

\begin_layout Plain Layout

										<cite>
\end_layout

\begin_layout Plain Layout

											{this.props.source}
\end_layout

\begin_layout Plain Layout

										</cite>
\end_layout

\begin_layout Plain Layout

									</footer>               
\end_layout

\begin_layout Plain Layout

								</blockquote>             
\end_layout

\begin_layout Plain Layout

							</div>           
\end_layout

\begin_layout Plain Layout

						</div>         
\end_layout

\begin_layout Plain Layout

					</li>       
\end_layout

\begin_layout Plain Layout

				</ul>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Smallarticle.png
	lyxscale 40
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of SmallArticle
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Badge
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Badge is used to render tags of an article.
 Each tag of the article is rendered as a badge with colored background
 based on the type of the tag.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Badge = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes: {   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<span className={"badge badge-"+this.props.type}>
\end_layout

\begin_layout Plain Layout

				{this.props.children}
\end_layout

\begin_layout Plain Layout

			</span>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Badge.png
	lyxscale 40
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Badge
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Headline
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Headline is used to render the headline template for the main page.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Headline = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(       
\end_layout

\begin_layout Plain Layout

			<p className="lead">         
\end_layout

\begin_layout Plain Layout

				<mark>Daily</mark> news about         
\end_layout

\begin_layout Plain Layout

				<mark>Cod</mark>e and An         
\end_layout

\begin_layout Plain Layout

				<mark>ime</mark>       
\end_layout

\begin_layout Plain Layout

			</p>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Headline.png
	lyxscale 40
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Headline
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Title
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Title is used to render the title template in the navigation bar at top
 of the page.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Title = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes: {   
\end_layout

\begin_layout Plain Layout

		navbar : React.PropTypes.bool, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkIsBrand: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.navbar? "navbar-brand" : ""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function (){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<h3 className={"lead " + this.checkIsBrand()}>
\end_layout

\begin_layout Plain Layout

				<strong>Daily<mark>Codime</mark></strong>
\end_layout

\begin_layout Plain Layout

			</h3>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Title.png
	lyxscale 40
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Title
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class TagPanel
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
TagPanel is used to render all tags presented from the data in small panel
 view.
 each tag is rendered by using the Badge class.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var TagPanel = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTags: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map( function(tag, key){             
\end_layout

\begin_layout Plain Layout

			return(             
\end_layout

\begin_layout Plain Layout

				<li key={key}>               
\end_layout

\begin_layout Plain Layout

					<a href={tag.link}>                 
\end_layout

\begin_layout Plain Layout

					<Badge type={tag.type}>{tag.title}</Badge>               
\end_layout

\begin_layout Plain Layout

					</a>             
\end_layout

\begin_layout Plain Layout

				</li>             
\end_layout

\begin_layout Plain Layout

			);           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<div className="panel panel-default">       
\end_layout

\begin_layout Plain Layout

				<div className="panel-body panel-body-content">         
\end_layout

\begin_layout Plain Layout

					<ul className="list-group text-center">           
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item badges">             
\end_layout

\begin_layout Plain Layout

							<ul className="list-inline">               
\end_layout

\begin_layout Plain Layout

								{this.renderTags()}             
\end_layout

\begin_layout Plain Layout

							</ul>           
\end_layout

\begin_layout Plain Layout

						</li>         
\end_layout

\begin_layout Plain Layout

					</ul>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class TagPanel.png
	lyxscale 40
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of TagPanel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Pagination
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pagination is used to render the list page numbers in the main page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Pagination = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		page : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderPages: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.pages.map( function(page, key){             
\end_layout

\begin_layout Plain Layout

			return (               
\end_layout

\begin_layout Plain Layout

				<li key={key}><a href={page[1]}>{page[0]}</a></li>             
\end_layout

\begin_layout Plain Layout

			);           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<nav className="panel-pagination">       
\end_layout

\begin_layout Plain Layout

				<ul className="pagination">        
\end_layout

\begin_layout Plain Layout

					<li>           
\end_layout

\begin_layout Plain Layout

						<a href="#" aria-label="Previous">             
\end_layout

\begin_layout Plain Layout

							<span aria-hidden="true">&laquo;</span>           
\end_layout

\begin_layout Plain Layout

						</a>         
\end_layout

\begin_layout Plain Layout

					</li>         
\end_layout

\begin_layout Plain Layout

					{this.renderPages()}         
\end_layout

\begin_layout Plain Layout

					<li>           
\end_layout

\begin_layout Plain Layout

						<a href="#" aria-label="Next">             
\end_layout

\begin_layout Plain Layout

							<span aria-hidden="true">&raquo;</span>           
\end_layout

\begin_layout Plain Layout

						</a>         
\end_layout

\begin_layout Plain Layout

					</li>       
\end_layout

\begin_layout Plain Layout

				</ul>     
\end_layout

\begin_layout Plain Layout

			</nav>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Pagination.png
	lyxscale 40
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Pagination
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Footer
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Footer is used to render footer template of the page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Footer = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		return (       
\end_layout

\begin_layout Plain Layout

			<nav className="navbar-fixed-bottom panel-footer-mobile down-collapse">
  
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid text-center">           
\end_layout

\begin_layout Plain Layout

					<ul className="list-group">             
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item">               
\end_layout

\begin_layout Plain Layout

							<span>Created by <b><a href="#">Codime</a></b></span>    
\end_layout

\begin_layout Plain Layout

						</li>           
\end_layout

\begin_layout Plain Layout

					</ul>         
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

			</nav>     
\end_layout

\begin_layout Plain Layout

		);     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Footer.png
	lyxscale 40
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Footer
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Index
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Index is used to set the main page template structure, get the article data
 from the data and pass them to other components respectively.
\end_layout

\begin_layout Subsubsection
Segment Class Index
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the container of the body of the Index page.
 In here, the state of data availability is defined and passed to body component.
 This segment documents basic structure of the page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Index = React.createClass({   
\end_layout

\begin_layout Plain Layout

	propTypes:{     
\end_layout

\begin_layout Plain Layout

		source : React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getResources: function(){     
\end_layout

\begin_layout Plain Layout

		$.ajax({url: this.props.source,dataType: 'json',cache: false,       
\end_layout

\begin_layout Plain Layout

			success: function(data) {
\end_layout

\begin_layout Plain Layout

				this.setState({resources: data});
\end_layout

\begin_layout Plain Layout

			}.bind(this),  
\end_layout

\begin_layout Plain Layout

			error: function(xhr, status, err) {
\end_layout

\begin_layout Plain Layout

				console.error(this.props.source, status, err.toString());
\end_layout

\begin_layout Plain Layout

			}.bind(this)     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getInitialState: function() {     
\end_layout

\begin_layout Plain Layout

		return {resources: {"page" : {"navbarCollapse" : false,"navbarRight" :
 			false,"navbarLeft" : false,"navbarForm" : false},"menu" : {"left" :
 			[[]],"right" : [[]],},"tags" : [{"title" : "","link" : "","type" : 			""}],"
pagination" : [[]],"articles" : {"type" : "","data" : [{"title" : 			"","tags"
 : [{"title" : "","link" : "","type" : ""}],"source" : 			"","link" : "","conten
t" :{"image" :"","video" : "","paragraph" : 			[]}}],},}
\end_layout

\begin_layout Plain Layout

		};   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	componentDidMount: function() {     
\end_layout

\begin_layout Plain Layout

		this.getResources();     
\end_layout

\begin_layout Plain Layout

		setInterval(this.getResources, 2000);   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		var json = this.state.resources;     
\end_layout

\begin_layout Plain Layout

		return (       
\end_layout

\begin_layout Plain Layout

			<div>       
\end_layout

\begin_layout Plain Layout

				<SidePanel 
\end_layout

\begin_layout Plain Layout

					type={json.articles.type} 
\end_layout

\begin_layout Plain Layout

					articles={json.articles.data} 
\end_layout

\begin_layout Plain Layout

					tags={json.tags} 
\end_layout

\begin_layout Plain Layout

					collapse={true}>
\end_layout

\begin_layout Plain Layout

				</SidePanel>         
\end_layout

\begin_layout Plain Layout

				<Navbar 
\end_layout

\begin_layout Plain Layout

					menus={json.menus} 
\end_layout

\begin_layout Plain Layout

					page={json.page} 
\end_layout

\begin_layout Plain Layout

					addMargin={true} 
\end_layout

\begin_layout Plain Layout

					title={false} 
\end_layout

\begin_layout Plain Layout

					active={json.page.active}>
\end_layout

\begin_layout Plain Layout

				</Navbar>         
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid">           
\end_layout

\begin_layout Plain Layout

					<div className="row">             
\end_layout

\begin_layout Plain Layout

						<div className="col-lg-8 col-lg-offset-4 full-width">   
\end_layout

\begin_layout Plain Layout

							<IndexBody 
\end_layout

\begin_layout Plain Layout

								articles={json.articles} 
\end_layout

\begin_layout Plain Layout

								pagination={json.pagination}>
\end_layout

\begin_layout Plain Layout

							</IndexBody>    
\end_layout

\begin_layout Plain Layout

						</div>          
\end_layout

\begin_layout Plain Layout

					</div>         
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

				<Footer></Footer>       
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

		);  
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment ClassIndexBody
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used to documents the main content view of the page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var IndexBody = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		pagination : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className="container-fluid panel-content-container">       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<SliderGroup articles={this.props.articles.data}>
\end_layout

\begin_layout Plain Layout

					</SliderGroup>
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<ArticleGroup 
\end_layout

\begin_layout Plain Layout

						articles={this.props.articles.data} 
\end_layout

\begin_layout Plain Layout

						type={this.props.articles.type} 
\end_layout

\begin_layout Plain Layout

						linker={this.props.articles.linker} 
\end_layout

\begin_layout Plain Layout

						linkMore={true}/>       
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<div className="col-md-8 col-md-offset-2 text-center">         
\end_layout

\begin_layout Plain Layout

						<Pagination pages={this.props.pagination}>
\end_layout

\begin_layout Plain Layout

						</Pagination> 
\end_layout

\begin_layout Plain Layout

					</div>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Index.png
	lyxscale 30
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Index
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Class Konten
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Konten is used to set the article page template structure, get the article
 data from JSON and pass them to other components respectively.
\end_layout

\begin_layout Subsubsection
Segment Class Konten
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used as the container of the body of the Konten page.
 In here, the state of data availability is defined and passed to body component.
 This segment defines basic structure of the page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Konten = React.createClass({   
\end_layout

\begin_layout Plain Layout

	propTypes:{     
\end_layout

\begin_layout Plain Layout

		source : React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getResources: function(){     
\end_layout

\begin_layout Plain Layout

		$.ajax({url: this.props.source,dataType: 'json',cache: false,       
\end_layout

\begin_layout Plain Layout

			success: function(data) {
\end_layout

\begin_layout Plain Layout

				this.setState({resources: data});
\end_layout

\begin_layout Plain Layout

			}.bind(this), 
\end_layout

\begin_layout Plain Layout

			error: function(xhr, status, err) {
\end_layout

\begin_layout Plain Layout

				console.error(this.props.source, status, err.toString());
\end_layout

\begin_layout Plain Layout

			}.bind(this)     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getInitialState: function() {     
\end_layout

\begin_layout Plain Layout

		return {resources: {"pagination" : [[]],"page" : {"navbarCollapse" : 			false,
"navbarRight" : false,"navbarLeft" : false,"navbarForm" : 			false,},"tags"
 : [{"title" : "","link" : "","type" : ""}],"menu" : 			{"left" : [[]],"right"
 : [[]],},"article" : {"type" : "","data" : 			[{"title" : "","tags" : [{"title"
 : "","link" : "","type" : 			""}],"source" : "","link" : "","content" :{"image"
 : "","video" : 			"","paragraph" : []}}],},"smallarticles" : {"data" :
 [{"title" : 			"","tags" : [{"title" : "","link" : "","type" : ""}],"source"
 : 			"","link" : "","content" :{"image" : "","video" : "","paragraph" :
 			[]}}],},}
\end_layout

\begin_layout Plain Layout

		};   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	componentDidMount: function() {     
\end_layout

\begin_layout Plain Layout

		var resource = this.props.source;         
\end_layout

\begin_layout Plain Layout

		this.getResources();     
\end_layout

\begin_layout Plain Layout

		setInterval(this.getResources, 2000);   
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render : function (){   
\end_layout

\begin_layout Plain Layout

		var json = this.state.resources;
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

    		<div>       
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid">         
\end_layout

\begin_layout Plain Layout

					<div className="row">           
\end_layout

\begin_layout Plain Layout

						<div className="col-lg-12 full-width">           
\end_layout

\begin_layout Plain Layout

							<Navbar 
\end_layout

\begin_layout Plain Layout

								menus={json.menus} 
\end_layout

\begin_layout Plain Layout

								page={json.page} 
\end_layout

\begin_layout Plain Layout

								addMargin={false} 
\end_layout

\begin_layout Plain Layout

								title={true} 
\end_layout

\begin_layout Plain Layout

								active={json.page.active}>
\end_layout

\begin_layout Plain Layout

							</Navbar>             
\end_layout

\begin_layout Plain Layout

							<div 
\end_layout

\begin_layout Plain Layout

								className="container-fluid 
\end_layout

\begin_layout Plain Layout

									panel-article panel-content-container">
\end_layout

\begin_layout Plain Layout

								<div className="row">            
\end_layout

\begin_layout Plain Layout

									<KontenBody article={json.article}></KontenBody
\end_layout

\begin_layout Plain Layout

									<div className="col-md-5">                   
\end_layout

\begin_layout Plain Layout

									<div 
\end_layout

\begin_layout Plain Layout

										className="panel 
\end_layout

\begin_layout Plain Layout

											panel-default pane-small-article">   
\end_layout

\begin_layout Plain Layout

										<div className="panel-body panel-body-content">
\end_layout

\begin_layout Plain Layout

											<SidePanelHeader>Recent</SidePanelHeader>   
\end_layout

\begin_layout Plain Layout

											<SmallArticleGroup 												articles={json.smallArticles.data}
 
\end_layout

\begin_layout Plain Layout

												collapse={false}>
\end_layout

\begin_layout Plain Layout

											</SmallArticleGroup>                   
\end_layout

\begin_layout Plain Layout

										</div>                   
\end_layout

\begin_layout Plain Layout

									</div>                 
\end_layout

\begin_layout Plain Layout

								</div>               
\end_layout

\begin_layout Plain Layout

							</div>             
\end_layout

\begin_layout Plain Layout

						</div>           
\end_layout

\begin_layout Plain Layout

					</div>         
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

			</div>       
\end_layout

\begin_layout Plain Layout

			<Footer></Footer>     
\end_layout

\begin_layout Plain Layout

		</div> 
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Segment Class KontenBody
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This segment is used to documents the main content view of the page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var KontenBody = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		article : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		smallArticles : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className="col-md-7">           
\end_layout

\begin_layout Plain Layout

				<ArticleGroup 
\end_layout

\begin_layout Plain Layout

					articles={this.props.article.data} 
\end_layout

\begin_layout Plain Layout

					type={this.props.article.type} 
\end_layout

\begin_layout Plain Layout

					linker={this.props.article.linker} 
\end_layout

\begin_layout Plain Layout

					linkMore={false}/>         
\end_layout

\begin_layout Plain Layout

			</div> 
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/class Konten.png
	lyxscale 30
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Result use of Konten
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Section
SASS Implementation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Below is the implementation of SASS structure specified in Chapter 3, contains
 Base Style Sheets that used for defining the basic template for all pages,
 Components Style Sheets that used for defining template at each component,
 and Config Style Sheets that used for defining configuration of what coloring
 theme is used.
\end_layout

\begin_layout Subsection
Basic Style Sheets
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This component contains several segmented style sheets such as: Base for
 the basic style for all components, Media that defines responsiveness for
 the layout, Mixins as a shortcut function for creating duplicate style,
 Variables that distributes color theme set from Config style sheets.
\end_layout

\begin_layout Subsubsection
Base Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is purposedly used for any unspecific component stylesheet.
 Any properties that is not needed to specific component should be placed
 here.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

body {   
\end_layout

\begin_layout Plain Layout

	background: $body-background;   
\end_layout

\begin_layout Plain Layout

	overflow-x: hidden; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.full-width {   
\end_layout

\begin_layout Plain Layout

	padding: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-content-container {   
\end_layout

\begin_layout Plain Layout

	margin-top: 50px;   
\end_layout

\begin_layout Plain Layout

	margin-left: 1px;  
\end_layout

\begin_layout Plain Layout

	width: 100%;   
\end_layout

\begin_layout Plain Layout

	z-index: 1;   
\end_layout

\begin_layout Plain Layout

	padding-top: 2%;   
\end_layout

\begin_layout Plain Layout

	overflow: auto; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-collapse {   
\end_layout

\begin_layout Plain Layout

	background: $sidepanel-collapse-background;   
\end_layout

\begin_layout Plain Layout

	visibility: hidden;   
\end_layout

\begin_layout Plain Layout

	height: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.lead {   
\end_layout

\begin_layout Plain Layout

	margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	margin-bottom: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

mark {   
\end_layout

\begin_layout Plain Layout

	color: $mark-color;   
\end_layout

\begin_layout Plain Layout

	background-color: $mark-background; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

blockquote {   
\end_layout

\begin_layout Plain Layout

	margin-bottom: 0px;   
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-top: 5px;   
\end_layout

\begin_layout Plain Layout

	footer {     
\end_layout

\begin_layout Plain Layout

		color: $blockquote-footer-color;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.list-group {   
\end_layout

\begin_layout Plain Layout

	margin: 0px;
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.list-group-item {   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px !important;   
\end_layout

\begin_layout Plain Layout

	border: 0px !important;   
\end_layout

\begin_layout Plain Layout

	background: $sidepanel-collapse-background; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Media Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used to specify responsiveness for any component, by adding
 a block of media properties with a width of the corresponding page as the
 argument.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

@media #{$break-xsmall} {   
\end_layout

\begin_layout Plain Layout

	.list-header-collapse-xsmall {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;     
\end_layout

\begin_layout Plain Layout

		max-height: 0px;     
\end_layout

\begin_layout Plain Layout

		padding: 0px;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@media #{$break-small} {   
\end_layout

\begin_layout Plain Layout

	.panel-navbar .navbar-form {     
\end_layout

\begin_layout Plain Layout

		background: none;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.list-header-collapse-xsmall {     
\end_layout

\begin_layout Plain Layout

		visibility: visible;     
\end_layout

\begin_layout Plain Layout

		max-height: none;     
\end_layout

\begin_layout Plain Layout

		padding: 10px 15px 10px 15px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.list-header-collapse-small {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;     
\end_layout

\begin_layout Plain Layout

		max-height: none;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-navbar {     
\end_layout

\begin_layout Plain Layout

		margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-tag, .panel-ad {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;     
\end_layout

\begin_layout Plain Layout

		max-height: 0px;  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-konten .panel-default li img {     
\end_layout

\begin_layout Plain Layout

		visibility: visible;     
\end_layout

\begin_layout Plain Layout

		height: inherit;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@media #{$break-big} {   
\end_layout

\begin_layout Plain Layout

	.navbar-left {    
\end_layout

\begin_layout Plain Layout

	margin-left: 34.5%;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.menu-collapse {     
\end_layout

\begin_layout Plain Layout

		visibility: hidden;     
\end_layout

\begin_layout Plain Layout

		width: 0px;     
\end_layout

\begin_layout Plain Layout

		height: 0px;  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-sidepanel {     
\end_layout

\begin_layout Plain Layout

		box-shadow: 0px 0px 2px 0.3px rgba(152, 152, 152, 0.49);  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-collapse {     
\end_layout

\begin_layout Plain Layout

		visibility: visible;     
\end_layout

\begin_layout Plain Layout

		height: inherit;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.sidepanel-footer {     
\end_layout

\begin_layout Plain Layout

		visibility: visible !important;     
\end_layout

\begin_layout Plain Layout

		height: inherit !important;     
\end_layout

\begin_layout Plain Layout

		padding: 15px !important;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-navbar {     
\end_layout

\begin_layout Plain Layout

		width: 67%;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-small-article,   .panel-tag,   .panel-ad 
\end_layout

\begin_layout Plain Layout

	{     
\end_layout

\begin_layout Plain Layout

	visibility: visible;     
\end_layout

\begin_layout Plain Layout

		max-height: inherit;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-sidepanel,   .panel-navbar {     
\end_layout

\begin_layout Plain Layout

		position: fixed;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-konten {     
\end_layout

\begin_layout Plain Layout

		padding-top: 8%;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-footer-mobile {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-footer {     
\end_layout

\begin_layout Plain Layout

		height: inherit;     
\end_layout

\begin_layout Plain Layout

		visibility: visible;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Mixins Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used to gather functons that will be applied as a shortcut
 for creating a repetitive properties for the same css classes.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$placeholder: "::-webkit-input-placeholder", ":-moz-placeholder", 
\end_layout

\begin_layout Plain Layout

"::-moz-placeholder", ":-ms-placeholder"; 
\end_layout

\begin_layout Plain Layout

@mixin placeholder {   
\end_layout

\begin_layout Plain Layout

	@each $prop in $placeholder {     
\end_layout

\begin_layout Plain Layout

		#{$prop} {       
\end_layout

\begin_layout Plain Layout

			@content;     
\end_layout

\begin_layout Plain Layout

		}  
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Variables Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used to gather variables that are distibuted to all components
 exist in the application.
 Each value of the variables are specified here.
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$body-background: tint($primary, 90%); 
\end_layout

\begin_layout Plain Layout

$mark-color: shade($primary, 10%); 
\end_layout

\begin_layout Plain Layout

$mark-background: $content; 
\end_layout

\begin_layout Plain Layout

$blockquote-footer-color: shade($primary, 10%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$panelfooter-background: $content; 
\end_layout

\begin_layout Plain Layout

$panelfooter-footer-span-color: tint($text, 10%); 
\end_layout

\begin_layout Plain Layout

$panelfooter-footer-span-link-color: (shade($primary, 5%), shade($primary,
 20%));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-background: shade($primary, 40%); 
\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-item-color: $content; 
\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-item-span-color: $content; 
\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-item-span-a-color: tint($primary, 25%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$forms-shadow: shade($primary, 40%); 
\end_layout

\begin_layout Plain Layout

$forms-shadow-focus: tint($secondary, 20%); 
\end_layout

\begin_layout Plain Layout

$forms-placeholder: $primary;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$navbar-background: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-shadow: $shadow; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-a-color: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-a-hover-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-a-hover-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-active-a-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-active-a-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-background: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-divider-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-li-a-hover-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-li-a-hover-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-toggle-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-toggle-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-lineborder: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-color: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-hover-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-hover-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-form-background: shade($primary, 30%); 
\end_layout

\begin_layout Plain Layout

$navbar-toggle-border: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-toggle-hover-background: shade($primary, 30%); 
\end_layout

\begin_layout Plain Layout

$navbar-toggle-hover-color: $primary; $navbar-toggle-icon: $content;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$sidepanel-collapse-background: $content; 
\end_layout

\begin_layout Plain Layout

$sidepanel-collapse-list-group-item-lead: tint($text, 5%); 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-item-lead: $content; 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-title-background: darken($primary, 5%); 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-hello-background: $secondary; 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-hello-shadow: $secondary; 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-hello-lead: tint($text, 10%); 
\end_layout

\begin_layout Plain Layout

$sidepanel-body-content-padding: 15px 0px 0px 0px;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$slider-item-a-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$slider-item-body-background: $content; 
\end_layout

\begin_layout Plain Layout

$slider-media-text-max-height: 80px; 
\end_layout

\begin_layout Plain Layout

$slider-media-heading-color: shade($text, 25%); 
\end_layout

\begin_layout Plain Layout

$slider-media-body-p: tint($text, 10%); 
\end_layout

\begin_layout Plain Layout

$slider-media-a-color: tint($primary, 10%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$panelarticle-default-shadow: $shadow; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-link-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-body-background: $content; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-heading-background: $content; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-heading-lineborder: $primary; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-heading-link-color: shade($primary, 30%); 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-li-text-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$panelarticle-footer-color: $primary;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$block-small-article-footer-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$panel-small-article-background: $content; 
\end_layout

\begin_layout Plain Layout

$panel-small-article-list-lineborder: tint($primary, 60%); 
\end_layout

\begin_layout Plain Layout

$panel-small-article-media-link-color: $primary;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$tag-shadow: tint($shadow, 15%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$pagination-shadow: $shadow; 
\end_layout

\begin_layout Plain Layout

$pagination-li-a-background: $content; 
\end_layout

\begin_layout Plain Layout

$pagination-li-a-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$pagination-li-a-hover-background: $shadow; 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Components Style Sheets
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This is the package that seperate each component into their own file.
 The package contains style sheets for Article, Badge, Footer, Forms, Navbar,
 Pagination, Side Panel, Slider, and Small Article.
\end_layout

\begin_layout Subsubsection
Article Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of an article.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.panel-default {  
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	width: 100%;   
\end_layout

\begin_layout Plain Layout

	box-shadow: 0px 0px 2px 0.3px $panelarticle-default-shadow;   
\end_layout

\begin_layout Plain Layout

	.panel-body {     
\end_layout

\begin_layout Plain Layout

		background: $panelarticle-default-body-background;     
\end_layout

\begin_layout Plain Layout

		padding-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		padding-top: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-heading {     
\end_layout

\begin_layout Plain Layout

		background-color: $panelarticle-default-heading-background;     
\end_layout

\begin_layout Plain Layout

		border-bottom: 1px solid $panelarticle-default-heading-lineborder;   
 
\end_layout

\begin_layout Plain Layout

		a {       
\end_layout

\begin_layout Plain Layout

		color: $panelarticle-default-heading-link-color;       
\end_layout

\begin_layout Plain Layout

			&:hover {         
\end_layout

\begin_layout Plain Layout

				text-decoration: underline;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	a {     
\end_layout

\begin_layout Plain Layout

		text-decoration: none;     
\end_layout

\begin_layout Plain Layout

		color: $panelarticle-default-link-color;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.article-img {     
\end_layout

\begin_layout Plain Layout

		img {       
\end_layout

\begin_layout Plain Layout

			visibility: visible;       
\end_layout

\begin_layout Plain Layout

			height: inherit;       
\end_layout

\begin_layout Plain Layout

			max-height: 400px;       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			margin-left: auto;       
\end_layout

\begin_layout Plain Layout

			margin-right: auto;       
\end_layout

\begin_layout Plain Layout

			margin-bottom: 10px;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	p {     
\end_layout

\begin_layout Plain Layout

		color: $panelarticle-default-li-text-color;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-wide {   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-text-short {   
\end_layout

\begin_layout Plain Layout

	max-height: 140px;   
\end_layout

\begin_layout Plain Layout

	overflow: hidden; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-text-long {   
\end_layout

\begin_layout Plain Layout

	max-height: 200px;   
\end_layout

\begin_layout Plain Layout

	overflow: hidden; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-text-full {   
\end_layout

\begin_layout Plain Layout

	overflow: visible; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-footer a {   
\end_layout

\begin_layout Plain Layout

	color: $panelarticle-footer-color;   
\end_layout

\begin_layout Plain Layout

	&:hover {     
\end_layout

\begin_layout Plain Layout

		cursor: pointer;     
\end_layout

\begin_layout Plain Layout

		text-decoration: underline;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Badge Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of a badge.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.badge {   
\end_layout

\begin_layout Plain Layout

	padding: 4px 8px 4px 8px;   
\end_layout

\begin_layout Plain Layout

	border-radius: 2px;   
\end_layout

\begin_layout Plain Layout

	font-size: 14px;   
\end_layout

\begin_layout Plain Layout

	margin: 2px 0px 2px 0px;   
\end_layout

\begin_layout Plain Layout

	box-shadow: 2px 2px .1px .1px $tag-shadow; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@for $type from 1 through length($badge) {   
\end_layout

\begin_layout Plain Layout

	.badge-#{$type} {     
\end_layout

\begin_layout Plain Layout

		background-color: nth($badge, $type);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Footer Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of the footer of the page.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.footer {     
\end_layout

\begin_layout Plain Layout

	background: $panelfooter-background;     
\end_layout

\begin_layout Plain Layout

	box-shadow: none;     
\end_layout

\begin_layout Plain Layout

	padding: 0px;     
\end_layout

\begin_layout Plain Layout

	span {       
\end_layout

\begin_layout Plain Layout

		color: $panelfooter-footer-span-color;       
\end_layout

\begin_layout Plain Layout

		b a {         
\end_layout

\begin_layout Plain Layout

			color: nth($panelfooter-footer-span-link-color, 1);         
\end_layout

\begin_layout Plain Layout

			&:hover {           
\end_layout

\begin_layout Plain Layout

				color: nth($panelfooter-footer-span-link-color, 2);         
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

}   
\end_layout

\begin_layout Plain Layout

.panel-footer-mobile {     
\end_layout

\begin_layout Plain Layout

	visibility: visible;     
\end_layout

\begin_layout Plain Layout

	background-color: $panelfooter-mobile-background;     
\end_layout

\begin_layout Plain Layout

	border: 0px;     
\end_layout

\begin_layout Plain Layout

	box-shadow: none;     
\end_layout

\begin_layout Plain Layout

	height: 30px;     
\end_layout

\begin_layout Plain Layout

	.list-group {       
\end_layout

\begin_layout Plain Layout

		padding: 0px;       
\end_layout

\begin_layout Plain Layout

		margin: 0px;     
\end_layout

\begin_layout Plain Layout

	}     
\end_layout

\begin_layout Plain Layout

.list-group .list-group-item {       
\end_layout

\begin_layout Plain Layout

	padding-top: 0px;       
\end_layout

\begin_layout Plain Layout

	padding-bottom: 0px;       
\end_layout

\begin_layout Plain Layout

	box-shadow: none;      
\end_layout

\begin_layout Plain Layout

	background: none;       
\end_layout

\begin_layout Plain Layout

	border: 0px;       
\end_layout

\begin_layout Plain Layout

	margin-top: 4px;       
\end_layout

\begin_layout Plain Layout

	color: $panelfooter-mobile-item-color;     
\end_layout

\begin_layout Plain Layout

}     
\end_layout

\begin_layout Plain Layout

.list-group .list-group-item span {      
\end_layout

\begin_layout Plain Layout

	color: $panelfooter-mobile-item-span-color;       
\end_layout

\begin_layout Plain Layout

		b a {         
\end_layout

\begin_layout Plain Layout

			color: $panelfooter-mobile-item-span-a-color;       
\end_layout

\begin_layout Plain Layout

		}    
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Forms Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of a form.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.form-group {   
\end_layout

\begin_layout Plain Layout

	@include placeholder {     
\end_layout

\begin_layout Plain Layout

		color: $forms-placeholder;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.form-control {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		border-radius: 2px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: 2px 2px .2px .2px $forms-shadow;     
\end_layout

\begin_layout Plain Layout

		&:focus {       
\end_layout

\begin_layout Plain Layout

			box-shadow: 0px 0px 3px 1px $forms-shadow-focus;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Navbar Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of the navigation bar.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.full-nav {   
\end_layout

\begin_layout Plain Layout

	min-width: 100%; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-navbar {  
\end_layout

\begin_layout Plain Layout

	margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	background: $navbar-background;   
\end_layout

\begin_layout Plain Layout

	z-index: 10;   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 0px;   
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	box-shadow: 0px 0px 3px 1px $navbar-shadow;   
\end_layout

\begin_layout Plain Layout

	.navbar-default {     
\end_layout

\begin_layout Plain Layout

		z-index: 10;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-brand {     
\end_layout

\begin_layout Plain Layout

		color: $navbar-nav-li-a-color;     
\end_layout

\begin_layout Plain Layout

		&:hover {       
\end_layout

\begin_layout Plain Layout

			@extend .navbar-brand;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-float-left {     
\end_layout

\begin_layout Plain Layout

		margin-left: -15px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-nav {     
\end_layout

\begin_layout Plain Layout

		> li > a {       
\end_layout

\begin_layout Plain Layout

			font-size: 15px;       
\end_layout

\begin_layout Plain Layout

			color: $navbar-nav-li-a-color;       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:active,       
\end_layout

\begin_layout Plain Layout

			&:focus {         
\end_layout

\begin_layout Plain Layout

				background: $navbar-nav-li-a-hover-background;         
\end_layout

\begin_layout Plain Layout

				color: $navbar-nav-li-a-hover-color;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		> .active a {       
\end_layout

\begin_layout Plain Layout

			background: $navbar-nav-active-a-background;       
\end_layout

\begin_layout Plain Layout

			color: $navbar-nav-active-a-color;       
\end_layout

\begin_layout Plain Layout

			font-weight: bold;       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:focus,       
\end_layout

\begin_layout Plain Layout

			&:active {         
\end_layout

\begin_layout Plain Layout

				@extend a;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		> li ul {       
\end_layout

\begin_layout Plain Layout

			border: 0px;       
\end_layout

\begin_layout Plain Layout

			background: $navbar-nav-li-ul-background;       
\end_layout

\begin_layout Plain Layout

			box-shadow: 0px 0px 2px 1px nth($theme, 5);       
\end_layout

\begin_layout Plain Layout

			.divider {         
\end_layout

\begin_layout Plain Layout

				background: $navbar-nav-li-ul-divider-background;       
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

			li a:hover {         
\end_layout

\begin_layout Plain Layout

				background: $navbar-nav-li-ul-li-a-hover-background;         
\end_layout

\begin_layout Plain Layout

				color: $navbar-nav-li-ul-li-a-hover-color;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-nav .dropdown {     
\end_layout

\begin_layout Plain Layout

		.dropdown-toggle {       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:focus {         
\end_layout

\begin_layout Plain Layout

				background-color: $navbar-collapse-dropdown-toggle-background;     
    
\end_layout

\begin_layout Plain Layout

				color: $navbar-collapse-dropdown-toggle-color;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.dropdown-menu {       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			border-bottom: 1px solid $navbar-collapse-dropdown-menu-lineborder; 
      
\end_layout

\begin_layout Plain Layout

			li a {         
\end_layout

\begin_layout Plain Layout

				color: $navbar-collapse-dropdown-menu-color;         
\end_layout

\begin_layout Plain Layout

				&:hover {           
\end_layout

\begin_layout Plain Layout

					background-color: $navbar-collapse-dropdown-menu-hover-background;
         
\end_layout

\begin_layout Plain Layout

					color: $navbar-collapse-dropdown-menu-hover-color;         
\end_layout

\begin_layout Plain Layout

				}       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-collapse {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-form {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;     
\end_layout

\begin_layout Plain Layout

		background-color: $navbar-form-background;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-toggle {     
\end_layout

\begin_layout Plain Layout

		border: 0px solid $navbar-toggle-border;     
\end_layout

\begin_layout Plain Layout

		background-color: none;     
\end_layout

\begin_layout Plain Layout

		&:hover,     
\end_layout

\begin_layout Plain Layout

		&:focus {       
\end_layout

\begin_layout Plain Layout

			background-color: $navbar-toggle-hover-background;       
\end_layout

\begin_layout Plain Layout

			border: 0px solid $navbar-toggle-hover-color;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.icon-bar {       
\end_layout

\begin_layout Plain Layout

			background-color: $navbar-toggle-icon;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Pagination Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of the pagination.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.panel-pagination .pagination {   
\end_layout

\begin_layout Plain Layout

	box-shadow: 0px 0px 2px 1px $pagination-shadow;   
\end_layout

\begin_layout Plain Layout

	margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	margin-bottom: 7.5%; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-pagination .pagination li a {   
\end_layout

\begin_layout Plain Layout

	background: $pagination-li-a-background;   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	color: $pagination-li-a-color;   
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	&:hover {     
\end_layout

\begin_layout Plain Layout

		background-color: $pagination-li-a-hover-background;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-pagination .pagination li {   
\end_layout

\begin_layout Plain Layout

	&:first-child{     
\end_layout

\begin_layout Plain Layout

		a:hover{       
\end_layout

\begin_layout Plain Layout

			border-bottom-left-radius: 4px;        
\end_layout

\begin_layout Plain Layout

			border-top-left-radius: 4px;      
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	&:last-child {     
\end_layout

\begin_layout Plain Layout

		a:hover {       
\end_layout

\begin_layout Plain Layout

			border-bottom-right-radius: 4px;        
\end_layout

\begin_layout Plain Layout

			border-top-right-radius: 4px;      
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Side Panel Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of the side panel.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.panel-sidepanel {   
\end_layout

\begin_layout Plain Layout

	border-bottom-right-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-bottom: 0px;   
\end_layout

\begin_layout Plain Layout

	background: $sidepanel-collapse-background;   
\end_layout

\begin_layout Plain Layout

	z-index: 11;   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 0px;   
\end_layout

\begin_layout Plain Layout

	.img-circle {     
\end_layout

\begin_layout Plain Layout

		border: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-default {     
\end_layout

\begin_layout Plain Layout

		margin-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		border-radius: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		.list-unstyled {       
\end_layout

\begin_layout Plain Layout

			margin-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.panel-body {       
\end_layout

\begin_layout Plain Layout

			padding: 0px;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.panel-body-content {      
\end_layout

\begin_layout Plain Layout

			padding: $sidepanel-body-content-padding;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	.collapse .panel-body {     
\end_layout

\begin_layout Plain Layout

		background: $sidepanel-collapse-background;     
\end_layout

\begin_layout Plain Layout

		.list-group .list-group-item {       
\end_layout

\begin_layout Plain Layout

			.lead {         
\end_layout

\begin_layout Plain Layout

				color: $sidepanel-collapse-list-group-item-lead;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.sidepanel-footer {     
\end_layout

\begin_layout Plain Layout

		visibility: hidden;     
\end_layout

\begin_layout Plain Layout

		height: 0px;     
\end_layout

\begin_layout Plain Layout

		padding: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.info {     
\end_layout

\begin_layout Plain Layout

		padding-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		padding-top: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.title {     
\end_layout

\begin_layout Plain Layout

		color: white;     
\end_layout

\begin_layout Plain Layout

		background: $sidepanel-list-title-background;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.hello {     
\end_layout

\begin_layout Plain Layout

		background: $sidepanel-list-hello-background;     
\end_layout

\begin_layout Plain Layout

		box-shadow: 0px 0px 100px 5px $sidepanel-list-hello-shadow inset;    
 
\end_layout

\begin_layout Plain Layout

		.lead {       
\end_layout

\begin_layout Plain Layout

			color: $sidepanel-list-hello-lead;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.info {     
\end_layout

\begin_layout Plain Layout

		padding-top: 20px;    
\end_layout

\begin_layout Plain Layout

		p {       
\end_layout

\begin_layout Plain Layout

			white-space: normal;     
\end_layout

\begin_layout Plain Layout

		}  
\end_layout

\begin_layout Plain Layout

	}  
\end_layout

\begin_layout Plain Layout

	.lanjut {     
\end_layout

\begin_layout Plain Layout

		padding: 0px 15px 0px 15px;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Slider Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of the slider.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.carousel {   
\end_layout

\begin_layout Plain Layout

	padding-left: 65px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 65px;   
\end_layout

\begin_layout Plain Layout

	.carousel-control {     
\end_layout

\begin_layout Plain Layout

		&.left,     
\end_layout

\begin_layout Plain Layout

		&.right {       
\end_layout

\begin_layout Plain Layout

			width: 10px;       
\end_layout

\begin_layout Plain Layout

			margin-top: -20px;       
\end_layout

\begin_layout Plain Layout

			padding-left: 40px;       
\end_layout

\begin_layout Plain Layout

			padding-right: 40px;       
\end_layout

\begin_layout Plain Layout

			z-index: 9;       
\end_layout

\begin_layout Plain Layout

			background: none;       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:focus {         
\end_layout

\begin_layout Plain Layout

				cursor: default;       
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

			span {         
\end_layout

\begin_layout Plain Layout

				cursor: pointer;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.item {     
\end_layout

\begin_layout Plain Layout

		padding: 5px;     
\end_layout

\begin_layout Plain Layout

		z-index: 8;     
\end_layout

\begin_layout Plain Layout

		a {       
\end_layout

\begin_layout Plain Layout

			color: $slider-item-a-color;       
\end_layout

\begin_layout Plain Layout

			text-decoration: none;       
\end_layout

\begin_layout Plain Layout

			&:hover {         
\end_layout

\begin_layout Plain Layout

				@extend a;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.media {       
\end_layout

\begin_layout Plain Layout

			.media-body {         
\end_layout

\begin_layout Plain Layout

				.media-heading {           
\end_layout

\begin_layout Plain Layout

					color: $slider-media-heading-color;         
\end_layout

\begin_layout Plain Layout

				}         
\end_layout

\begin_layout Plain Layout

				p {           
\end_layout

\begin_layout Plain Layout

					color: $slider-media-body-p;         
\end_layout

\begin_layout Plain Layout

				}         
\end_layout

\begin_layout Plain Layout

				ul li {           
\end_layout

\begin_layout Plain Layout

					max-height: $slider-media-text-max-height;           
\end_layout

\begin_layout Plain Layout

					overflow: hidden;         
\end_layout

\begin_layout Plain Layout

				}      
\end_layout

\begin_layout Plain Layout

			}      
\end_layout

\begin_layout Plain Layout

			a {         
\end_layout

\begin_layout Plain Layout

				color: $slider-media-a-color;         
\end_layout

\begin_layout Plain Layout

				&:hover {           
\end_layout

\begin_layout Plain Layout

					@extend a;         
\end_layout

\begin_layout Plain Layout

				}       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.panel-default .panel-body {       
\end_layout

\begin_layout Plain Layout

			background: $slider-item-body-background;       
\end_layout

\begin_layout Plain Layout

			padding: 15px;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Small Article Style Sheet
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This sheet is used as the design template of the small article.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.block-small-article {   
\end_layout

\begin_layout Plain Layout

	padding-top: 0px;   
\end_layout

\begin_layout Plain Layout

	footer {     
\end_layout

\begin_layout Plain Layout

		font-size: 12px;     
\end_layout

\begin_layout Plain Layout

		color: $block-small-article-footer-color;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-small-article {   
\end_layout

\begin_layout Plain Layout

	adding: 0px;   padding: 0px;   
\end_layout

\begin_layout Plain Layout

	border: 0px !important;   
\end_layout

\begin_layout Plain Layout

	box-shadow: none;   
\end_layout

\begin_layout Plain Layout

	.list-group {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;     
\end_layout

\begin_layout Plain Layout

		.text-left {       
\end_layout

\begin_layout Plain Layout

			background: $panel-small-article-background;       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			box-shadow: none;       
\end_layout

\begin_layout Plain Layout

			border: 0px;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.small-article {      
\end_layout

\begin_layout Plain Layout

			border: 0px;       
\end_layout

\begin_layout Plain Layout

			background: none;       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			margin-left: 1px;      
\end_layout

\begin_layout Plain Layout

			margin-right: 1px;       
\end_layout

\begin_layout Plain Layout

			> li {         
\end_layout

\begin_layout Plain Layout

			height: 130px;         
\end_layout

\begin_layout Plain Layout

			overflow: hidden;       
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

			ul li {         
\end_layout

\begin_layout Plain Layout

				border-top: 1px solid $panel-small-article-list-lineborder;        
 
\end_layout

\begin_layout Plain Layout

				padding: 9px 5px 0px 9px;         
\end_layout

\begin_layout Plain Layout

				.media .media-body .media-heading a {           
\end_layout

\begin_layout Plain Layout

					color: $panel-small-article-media-link-color;         
\end_layout

\begin_layout Plain Layout

				}       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Config Style Sheets
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This component is used to configure layout breakpoints and color themes
 for the web pages.
 The assignment is then passed to Variables that will distribute it to every
 component.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$xsmall: 0px; 
\end_layout

\begin_layout Plain Layout

$small: 768px; 
\end_layout

\begin_layout Plain Layout

$big: 1200px; 
\end_layout

\begin_layout Plain Layout

$break-xsmall: "(min-width: #{$xsmall})"; 
\end_layout

\begin_layout Plain Layout

$break-small: "(min-width: #{$small})"; 
\end_layout

\begin_layout Plain Layout

$break-big: "(min-width: #{$big})";
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$theme-blue: ( #38aff0, #fcbf5d, #ffffff, #383838, rgba(98, 98, 98, 0.26));
 $theme-brown: ( #c35115, #fcbf5d, #ffffff, #383838, rgba(98, 98, 98, 0.26));
 $theme-red: ( #f24f31, #f7ef35, #ffffff, #3c3434, rgba(98, 98, 98, 0.26));
 $theme-green: ( #209a67, #F4D03F, #ffffff, #08311b, rgba(98, 98, 98, 0.26));
 $theme-flat-zen: (#249991, #E76B6B, #FEFEFE, #224a6c, rgba(98, 98, 98,
 0.26)); 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$badge-rainbow: ( #2d99d4, #F9690E, #ae1dc9, #1fc17d, #e85143, #4a4f53,
 #F4D03F, 	#1d689f, #0e761a, #9b9b15, #777e86); $badge-ugly-duckling: (
 #BA5445, #BA5445, 	#BA5445, #BA5445, #BA5445, #BA5445, #BA5445, #BA5445,
 #BA5445, #BA5445, #BA5445
\end_layout

\begin_layout Plain Layout

);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$theme: $theme-flat-zen; 
\end_layout

\begin_layout Plain Layout

$badge: $badge-rainbow;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$primary: nth($theme, 1); 
\end_layout

\begin_layout Plain Layout

$secondary: nth($theme, 2); 
\end_layout

\begin_layout Plain Layout

$content: nth($theme, 3); 
\end_layout

\begin_layout Plain Layout

$text: nth($theme, 4); 
\end_layout

\begin_layout Plain Layout

$shadow: nth($theme, 5); 
\end_layout

\end_inset


\end_layout

\begin_layout Section
HTML and CSS Implementation
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
After the development of React and SASS and all of them has been transpiled
 into compatible JavasScript and CSS respectively, the implementation in
 HTML is shown as follows.
\end_layout

\begin_layout Subsection
Index Page
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This page is rendered by generating Index class into the actual HTML markup.
 
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<!DOCTYPE html> 
\end_layout

\begin_layout Plain Layout

<html lang="en" /> 
\end_layout

\begin_layout Plain Layout

<html>
\end_layout

\begin_layout Plain Layout

	<head>   
\end_layout

\begin_layout Plain Layout

		<title>     Home - DailyCodime   </title>   
\end_layout

\begin_layout Plain Layout

		<meta charset="utf-8">   
\end_layout

\begin_layout Plain Layout

		<meta name="viewport" content="width=device-width, initial-scale=1"> 
  
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/bootstrap.min.css">   
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/main.css">   
\end_layout

\begin_layout Plain Layout

		<script src="js/react-13.3.js"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/built.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/index.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/jquery-2.1.0.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/bootstrap.min.js" type="text/javascript"></script> 
\end_layout

\begin_layout Plain Layout

	</head>
\end_layout

\begin_layout Plain Layout

	<body>   
\end_layout

\begin_layout Plain Layout

		<div id="app"></div>   
\end_layout

\begin_layout Plain Layout

		<script type="text/javascript">     
\end_layout

\begin_layout Plain Layout

			var app = React.createElement(Index, {       
\end_layout

\begin_layout Plain Layout

				source: "http://127.0.0.1:59875/index.json"     
\end_layout

\begin_layout Plain Layout

			});    
\end_layout

\begin_layout Plain Layout

			React.render(app, document.getElementById("app"));  
\end_layout

\begin_layout Plain Layout

		</script>
\end_layout

\begin_layout Plain Layout

	</body>
\end_layout

\begin_layout Plain Layout

</html> 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Konten Page
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This page is rendered by generating Konten class into the actual HTML markup.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<!DOCTYPE html> 
\end_layout

\begin_layout Plain Layout

<html lang="en" /> 
\end_layout

\begin_layout Plain Layout

<html>
\end_layout

\begin_layout Plain Layout

	<head>   
\end_layout

\begin_layout Plain Layout

		<title>     Home - DailyCodime   </title>   
\end_layout

\begin_layout Plain Layout

		<meta charset="utf-8">   
\end_layout

\begin_layout Plain Layout

		<meta name="viewport" content="width=device-width, initial-scale=1"> 
  
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/bootstrap.min.css">   
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/main.css">   
\end_layout

\begin_layout Plain Layout

		<script src="js/react-13.3.js"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/built.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/index.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/jquery-2.1.0.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/bootstrap.min.js" type="text/javascript"></script> 
\end_layout

\begin_layout Plain Layout

	</head>
\end_layout

\begin_layout Plain Layout

	<body>   
\end_layout

\begin_layout Plain Layout

		<div id="app"></div>   
\end_layout

\begin_layout Plain Layout

		<script type="text/javascript">     
\end_layout

\begin_layout Plain Layout

			var app = React.createElement(Konten, {       
\end_layout

\begin_layout Plain Layout

				source: "http://127.0.0.1:59875/konten.json"     
\end_layout

\begin_layout Plain Layout

			});     
\end_layout

\begin_layout Plain Layout

			React.render(app, document.getElementById("app"));
\end_layout

\begin_layout Plain Layout

		</script>
\end_layout

\begin_layout Plain Layout

	</body>
\end_layout

\begin_layout Plain Layout

</html> 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Discussion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This research was purposed to inform people that developers also have to
 consider whether the development is maintainable and reusable.
 And this research has been implementing the idea of component-based development.
 And at the process of making the code, this research conceptually following
 several principles of Object-Oriented Design.
 Therefore, some principles are explained and compared to this development
 such as The Single Responsibility Principle, The Open-Closed Principle,
 The Common Closure Principle and The Acyclic Dependencies Principle.
\end_layout

\begin_layout Subsection
Object-Oriented Design
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
First of all, OOD is actually a concept that forces programmers to plan
 out their code in order to have a better flowing program.
 Notably, it has principles about class design, package cohesion and the
 coupling between packages.
 But, this research has only used a few of them, that are The Single Responsibil
ity Principle, The Open-Closed Principle, The Common Closure Principle and
 The Acyclic Dependencies Principle.
\end_layout

\begin_layout Subsubsection
The Single Responsibility Principle
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This principle prescribed that a Class should have one, and only one reason
 to change.
 Meaning that a class should have only one job.
 So, how this research has gotten this principle implemented is that each
 Class component, either as a single or packaged component, are made as
 small as possible so they could only have a single responsibility.
 The examples are shown in the following.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/halindex1.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Index
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/Slider1.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
SliderGroup
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/SidePanel1.png
	scale 30

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
SidePanel
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Example of Class Diagram with Single Responsibility
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As shown in these class diagrams, each class has a specific responsibility.
 The “Index” class is created as the container of the body.
 The “SliderGroup” class is created as a grouper that will group every single
 “Slider” class added in it.
 “SidePanel” class is divided to two segments, “SidePanelHeader” for the
 header and “SidePanelFooter” for the footer.
 Although there are some components that are depended with its parent component,
 it is possible to separate them into a single component and reuse it for
 another project.
 The practical reason why it is reusable is because the relation was just
 made by adding a tag with the class name as the attribute name of its tag,
 which works just like adding basic HTML markup.
\end_layout

\begin_layout Standard
More about single responsibility, SASS has also implemented this principle.
 Based on the file-tree designed in previous chapter, there are two main
 folders named “base” and “components”.
 Respectively, the first folder was used as a property adapter to every
 components style sheet in the second folder.
 Outside of those folders, there is a file named “config.scss” as the style
 sheet configuration for breakpoints and coloring properties.
 The principle in this file-tree occurred in the “components” folder.
 Inside it, there are several SASS files responsibly created for specific
 component.
 This benefits the development as follows.
 First, developers could quickly go into the right component they want work
 with without any difficulty such as looking through all style sheets just
 for trying to change a single property.
 Second, developers could add and/or get rid of any component in their developme
nt more easily since they can just create new or delete files they are working
 with.
 The requirement is that they must have all files in “base” folder, “config.scss”
 and “main.scss” file to make the code work well.
\end_layout

\begin_layout Subsubsection
The Open-Closed Principle
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This principle has two descriptions.
 First, it tells that the code must be ”Open for Extension”, meaning that
 the behavior of the class should be able to be extended.
 Meaning that it could have a new behavior as the requirement of the application
 changes, or to meet the needs of the new application.
 Second, the code must be “Closed for Modification”, meaning that the class
 is inviolate.
 No one is allowed to modify and make changes to it.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/navbar2.png

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class Diagram for Navbar segment component
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
What “Navbar” class does is basically to group every type of navigation
 bar such as right or left floated navigation bar and a search form.
 And rendering menu options inside the floated navigation bar is done in
 another class named “NavsGroup”.
 The code to make this idea possible is shown as below.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

navbarLeft: function(){   
\end_layout

\begin_layout Plain Layout

	return this.props.page.navbarLeft ? {     
\end_layout

\begin_layout Plain Layout

		float: "left",     
\end_layout

\begin_layout Plain Layout

		margin: this.props.addMargin,     
\end_layout

\begin_layout Plain Layout

		menu: this.props.menus.left,     
\end_layout

\begin_layout Plain Layout

		page: this.props.page.active,     
\end_layout

\begin_layout Plain Layout

		collapse: this.props.page.navbarCollapse,     
\end_layout

\begin_layout Plain Layout

		active: this.props.active,     
\end_layout

\begin_layout Plain Layout

	} : null; 
\end_layout

\begin_layout Plain Layout

},
\end_layout

\begin_layout Plain Layout

navbarRight: function(){   
\end_layout

\begin_layout Plain Layout

	return this.props.page.navbarRight ? {     
\end_layout

\begin_layout Plain Layout

		float: "right",     
\end_layout

\begin_layout Plain Layout

		margin: this.props.addMargin,     
\end_layout

\begin_layout Plain Layout

		menu: this.props.menus.right,     
\end_layout

\begin_layout Plain Layout

		page: this.props.page.active,     
\end_layout

\begin_layout Plain Layout

		collapse: this.props.page.navbarCollapse,     
\end_layout

\begin_layout Plain Layout

		active: this.props.active,     
\end_layout

\begin_layout Plain Layout

	} : null; 
\end_layout

\begin_layout Plain Layout

},
\end_layout

\begin_layout Plain Layout

renderNav: function(nav){   
\end_layout

\begin_layout Plain Layout

	return nav != null?     
\end_layout

\begin_layout Plain Layout

		<NavsGroup  
\end_layout

\begin_layout Plain Layout

			addMargin={nav.margin}                  
\end_layout

\begin_layout Plain Layout

			options={nav.menu}                	
\end_layout

\begin_layout Plain Layout

			page={nav.page}                  
\end_layout

\begin_layout Plain Layout

			float={nav.float}                  
\end_layout

\begin_layout Plain Layout

			collapse={nav.collapse}                  
\end_layout

\begin_layout Plain Layout

			active={nav.active}>     
\end_layout

\begin_layout Plain Layout

		</NavsGroup>:null;   
\end_layout

\begin_layout Plain Layout

},
\end_layout

\end_inset


\end_layout

\begin_layout Standard
As shown above, to make the function still open for extension but closed
 for modification, instead of creating two functions that each of them will
 renders a “NavsGroup” class with a little differences in its value, an
 abstracted “renderNav” function is created with replicated parameters that
 visualize the real value of each navigation bar.
 Then, “navbarLeft” and “navbarRight” function are made to specify the values
 of each corresponding type of navigation bar.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

{this.renderNav(this.navbarLeft())}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In the end, the main function can render each navigation bar by adding the
 code above.
 This structure would be more advantageous because now there is an abstraction
 fixed for one responsibility and yet still open for any other type of navigatio
n bar.
 Technically, the new specification of the navigation bar type could be
 made in a new function, and the main “render” function could render it
 by specifying it as the parameter value of “renderNav” function.
\end_layout

\begin_layout Subsubsection
The Common Closure Principle
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
What this development has done so far is separating every component into
 a single class with a single responsibility.
 But if the component is made as a segment of a bigger component, then that
 component is coupled and bundled as a package component.
 This principle is the explanation of how this approach benefits.
 What this principle meant is essentially to gather all the classes that
 are likely to change for the same reason in one place.
 If two classes are so tightly bounded, either physically or conceptually,
 such that they almost always change together, then they belong in the same
 package.
 This will minimizes the workload related to maintaining and releasing.
\end_layout

\begin_layout Subsubsection
The Acyclic Dependencies Principle
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Simply put, this principle telling that the dependency structure between
 packages must be a Directed Acyclic Graph (DAG).
 That is, there must be no cycles in the dependency structure.
 For example, if there is a small project with a few developers that works
 in a cyclic dependency of their development, it may be not that big of
 a problem when they face some errors that effected to them caused by that
 cyclic dependencies.
 But as the size of the project and the development team grows, it is not
 uncommon for weeks to go by without being able to build a stable version
 of the project.
 Instead, everyone keeps on changing their code trying to make it work with
 the last changes that someone else made.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/Article.png
	lyxscale 25
	scale 25

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Class Diagram of Article component
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
As one example above, the “Article” package is a dependent component since
 it references to “Badge” class to generate tags for each article.
 But “Badge” class is not a dependent component, which makes it properly
 maintainable and reusable because it will not affect any other component
 that is related to “Article” package.
\end_layout

\begin_layout Standard
Next is about the style sheet in SASS.
 Each file in “components” folder is a dependent component since they need
 all files in the “base” folder, but not the other way around.
 The principle benefit in this is that now developers could use the component
 properties selectively and it is easy to reuse them.
\end_layout

\begin_layout Section
Usage Benefits
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This section will show a few benefit findings after using React and SASS
 in order to implement component-based development and conceptually following
 the OOD principles.
 It is shown in two parts, HTML and CSS.
\end_layout

\begin_layout Subsection
Use of React for HTML
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

render: function () {     
\end_layout

\begin_layout Plain Layout

	var json = this.state.resources;     
\end_layout

\begin_layout Plain Layout

	return (       
\end_layout

\begin_layout Plain Layout

		<div>       
\end_layout

\begin_layout Plain Layout

			<SidePanel 
\end_layout

\begin_layout Plain Layout

				type={json.articles.type} 
\end_layout

\begin_layout Plain Layout

				articles={json.articles.data} 
\end_layout

\begin_layout Plain Layout

				tags={json.tags} 
\end_layout

\begin_layout Plain Layout

				collapse={true}>
\end_layout

\begin_layout Plain Layout

			</SidePanel>         
\end_layout

\begin_layout Plain Layout

			<Navbar 
\end_layout

\begin_layout Plain Layout

				menus={json.menus} 
\end_layout

\begin_layout Plain Layout

				page={json.page} 
\end_layout

\begin_layout Plain Layout

				addMargin={true} 
\end_layout

\begin_layout Plain Layout

				title={false} 
\end_layout

\begin_layout Plain Layout

				active={json.page.active}>
\end_layout

\begin_layout Plain Layout

			</Navbar>         
\end_layout

\begin_layout Plain Layout

			<div className="container-fluid">           
\end_layout

\begin_layout Plain Layout

				<div className="row">             
\end_layout

\begin_layout Plain Layout

					<div className="col-lg-8 col-lg-offset-4 full-width">             
\end_layout

\begin_layout Plain Layout

						<IndexBody
\end_layout

\begin_layout Plain Layout

							articles={json.articles} 							
\end_layout

\begin_layout Plain Layout

							pagination={json.pagination}>
\end_layout

\begin_layout Plain Layout

						</IndexBody>           
\end_layout

\begin_layout Plain Layout

					</div>           
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

			</div>         
\end_layout

\begin_layout Plain Layout

			<Footer></Footer>       
\end_layout

\begin_layout Plain Layout

		</div>     
\end_layout

\begin_layout Plain Layout

	);   
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When working with React, along with using JSX syntax for developing HTML
 structure, it is really convenient to find and focus on component that
 developers need to look, whether to erase or modify them.
 It relieves unneeded stress that developers don't need to get in the first
 place and raises the separation of concerns.
 However, they have to make sure the flow of data that passed from one component
 to another to be clearly expressed.
 They should add 
\begin_inset Quotes eld
\end_inset

isRequired
\begin_inset Quotes erd
\end_inset

 to any component attribute responsibly to debug the flow and see if it
 has ben defined or not.
 Otherwise, they will not able to see any error in the console log when
 they have one.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

propTypes : {   
\end_layout

\begin_layout Plain Layout

	link : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

	children : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

	type : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

	tags : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

	linkMore : React.PropTypes.bool.isRequired 
\end_layout

\begin_layout Plain Layout

},
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Also, The 
\begin_inset Quotes eld
\end_inset

PropTypes
\begin_inset Quotes erd
\end_inset

 function should be put on top of each class.
 This function gives a brief documentation at attributes used in each class.
 Developers can add component with attributes based on the 
\begin_inset Quotes eld
\end_inset

PropTypes
\begin_inset Quotes erd
\end_inset

 in each class.
 It helps decreasing time needed to work on a new component that they might
 get from another developers.
\end_layout

\begin_layout Subsection
Use of ShellScript
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
dirtree{%
\end_layout

\begin_layout Plain Layout

.1 component.jsx.
\end_layout

\begin_layout Plain Layout

.1 component.js.
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Each React component that has been transpiled by Babel is generated into
 a JavaScript file with the same name as the original JSX file.
 And it is placed right next to each other, so there will be a big number
 of JavaScript that needed to be linked to the HTML pages.
 The shellscript is used to bundle and convert all transpiled React component
 into a compressed JavaScript file named 
\begin_inset Quotes eld
\end_inset

built.min.js
\begin_inset Quotes erd
\end_inset

.
 Respectively, the Index and Konten component are also tranpiled and bundled
 into 
\begin_inset Quotes eld
\end_inset

index.min.js
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

konten.min.js
\begin_inset Quotes erd
\end_inset

.
 The benefits is that the HTML markup only have to link them once, instead
 of linking each transpiled React component one by one.
 The example shown as the following.
\end_layout

\begin_layout Enumerate
Index
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<script src="js/built.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

<script src="js/index.min.js" type="text/javascript"></script>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Enumerate
Konten
\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<script src="js/built.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

<script src="js/konten.min.js" type="text/javascript"></script>
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Subsection
Use of SASS for CSS
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
When working with SASS for developing CSS stylesheets, structuring properties
 and the separation of concerns are developed really well since it enables
 developers to implement programmable logic to structurize stylesheet into
 a readable and scalable CSS.
 For instance, This development could create 10 or more themes easily without
 directly changing the stylesheet properties.
 The resulting examples are shown as below.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/ex 1.png
	lyxscale 10
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
flat-zen
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/ex 2.png
	lyxscale 10
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
flat-red
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/ex 3.png
	lyxscale 10
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
bright-yellow
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/ex 4.png
	lyxscale 10
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
brown
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/ex 5.png
	lyxscale 10
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
drop-purple
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/alvian/Projects/Skripsi/work/writing/src/images/ex 6.png
	lyxscale 10
	scale 5

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
flat-zen
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Result examples of using SASS
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$theme-blue: ( #38aff0, #fcbf5d, #ffffff, #383838, rgba(98, 98, 98, 0.26));
 
\end_layout

\begin_layout Plain Layout

$theme-brown: ( #c35115, #fcbf5d, #ffffff, #383838, rgba(98, 98, 98, 0.26));
 
\end_layout

\begin_layout Plain Layout

$theme-red: ( #f24f31, #f7ef35, #ffffff, #3c3434, rgba(98, 98, 98, 0.26));
 
\end_layout

\begin_layout Plain Layout

$theme-green: ( #209a67, #F4D03F, #ffffff, #08311b, rgba(98, 98, 98, 0.26));
 
\end_layout

\begin_layout Plain Layout

$theme-flat-zen: (#249991, #E76B6B, #FEFEFE, #224a6c, rgba(98, 98, 98, 0.26));
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Inside 
\begin_inset Quotes eld
\end_inset

_config.scss
\begin_inset Quotes erd
\end_inset

, there are several variables of five-length array consisting base colors
 that will be adapted at all properties.
 As mentioned in the previous chapter, the 
\begin_inset Quotes eld
\end_inset

_variables.scss
\begin_inset Quotes erd
\end_inset

 is the adapter for these variables and other configurations inside 
\begin_inset Quotes eld
\end_inset

_config.scss
\begin_inset Quotes erd
\end_inset

.
 The code in the following used to activate the adapter.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$theme: $theme-flat-zen; 
\end_layout

\begin_layout Plain Layout

$badge: $badge-rainbow;
\end_layout

\begin_layout Plain Layout

/* color decisions */
\end_layout

\begin_layout Plain Layout

$primary: nth($theme, 1); 
\end_layout

\begin_layout Plain Layout

$secondary: nth($theme, 2); 
\end_layout

\begin_layout Plain Layout

$content: nth($theme, 3); 
\end_layout

\begin_layout Plain Layout

$text: nth($theme, 4); 
\end_layout

\begin_layout Plain Layout

$shadow: nth($theme, 5);
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By assigning the chosen array variable to the public variables, such as
 
\begin_inset Quotes eld
\end_inset

$primary
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

$secondary
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

$content
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

$text
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

$shadow
\begin_inset Quotes erd
\end_inset

 as shown above.
 Then these variables will be assigned directly to every properties in each
 component.
 This could cut the timespan and decision making in Color design through
 more tangible feedbacks.
 
\end_layout

\begin_layout Section
Comparison
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This section will show several difference foundings between developing a
 Front End web design with HTML and CSS, and with implementation of React
 and SASS.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Caption Standard

\begin_layout Plain Layout
Development comparison between only HTML-CSS and with React-SASS
\end_layout

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="5">
<features rotate="0" tabularvalignment="middle" tabularwidth="13cm">
<column alignment="center" valignment="middle" width="2.8cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<column alignment="center" valignment="middle" width="2cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HTML
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CSS
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
with React
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
with SASS
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
number of files used in development
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" width="2cm">
\begin_inset Text

\begin_layout Plain Layout
58
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
15
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
number of files used in application
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
4
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
1
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
file size (kb)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12 -15
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
12
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.3 - 3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2 - 3
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
file size used in development (kb)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
113
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
42
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
file size used in application (kb)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
27
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
21
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
32
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
documentation readability
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
difficult
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
difficult
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
easy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
easy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
seperation of concern
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
difficult
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
difficult
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
easy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
easy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
possibility of reuse
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
little
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
little
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
high
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
high
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
ease of maintanance
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hard
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
hard
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
easy
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
easy
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="left" valignment="middle" topline="true" bottomline="true" leftline="true" usebox="none" width="3cm">
\begin_inset Text

\begin_layout Plain Layout
development compatibility
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
open
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
open
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
for React only
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
must use transpiler
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
By the comparison in table 4.1, it is shown that React and SASS would take
 more number of files, but it gives more managable code generation, such
 as its readabality, separation of concerns and maintanance.
 Even though it has less compatibility and bigger file sizes, React and
 SASS is still superior for better development experiences.
\end_layout

\begin_layout Chapter
Conclusion and Suggestion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This Chapter covers the conclusion based on all findings during the development
 in this research along with suggestion for better development in the future.
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
React and SASS had been able to implement component-based development method
 by conceptually following several Object-Oriented Design principles, gives
 the ability to seperate component into different classes and make separation
 of concern easier.
 The JSX syntax within React helps to maintain the development since the
 syntax needed to add seperate components is by using a single tag that
 represents that component class into the body of the main class such as
 the Index, Konten or any other classes that need to use it.
 SASS has also helps to maintain the stylesheets of CSS since they are able
 to use programming features such as variables, mixins, extend, imports
 and more.
 It also helps seperate stylesheets into different files based on the component
 that it is refered and make separation of cocern easier.
\end_layout

\begin_layout Section
Suggestion
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
noindent
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This research had used several small tools to enhance the development process
 in using React and SASS.
 It is considered as not a good practice to follow because of the big amount
 of dependencies needed for the developers to start working with React and
 SASS.
 Any similar research should try using Webpack that could replace Brackets
 Babel plugin, ShellScript and Scout used in this research, and hopefully
 will get a better developer experience.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
renewcommand
\backslash
bibname{Bibliography}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Bibliography}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintAll"
bibfiles "biblio"
options "plunsrt"

\end_inset


\end_layout

\begin_layout Chapter*
Appendix
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{fancy}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyfoot[C]{
\backslash
thepage}
\end_layout

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Appendix}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
compressjs.sh
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

#!/bin/bash
\end_layout

\begin_layout Plain Layout

# Constants 
\end_layout

\begin_layout Plain Layout

SERVICE_URL=http://closure-compiler.appspot.com/compile 
\end_layout

\begin_layout Plain Layout

#NEWFILE="c`date +"%d%m%y"`.js" 
\end_layout

\begin_layout Plain Layout

#this specifies last arg as destination  declare -a
\end_layout

\begin_layout Plain Layout

component=(
\end_layout

\begin_layout Plain Layout

"react/components/Article/Article.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/ArticleGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/Image.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/Paragraph.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Article/Video.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Badge.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Badge.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Footer.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Headline.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/Navbar.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/Dropdown.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/DropdownMenu.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/Menu.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/NavbarForm.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Navbar/NavsGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Pagination.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SidePanel/SidePanel.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SidePanel/SidePanelHeader.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SidePanel/SidePanelFooter.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Slider/Slider.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Slider/SliderGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SmallArticle/SmallArticle.js" 
\end_layout

\begin_layout Plain Layout

"react/components/SmallArticle/SmallArticleGroup.js" 
\end_layout

\begin_layout Plain Layout

"react/components/TagPanel.js" 
\end_layout

\begin_layout Plain Layout

"react/components/Title.js") 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

declare -a index=("react/index/Index.js" 
\end_layout

\begin_layout Plain Layout

	"react/index/IndexBody.js") 
\end_layout

\begin_layout Plain Layout

declare -a konten=("react/konten/Konten.js" 
\end_layout

\begin_layout Plain Layout

	"react/konten/KontenBody.js") 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

for NEWFILE in $*; do :; done
\end_layout

\begin_layout Plain Layout

process_files=false 
\end_layout

\begin_layout Plain Layout

if [[ $1 == 1 ]]; then declare -a data="${component[@]}"  
\end_layout

\begin_layout Plain Layout

fi 
\end_layout

\begin_layout Plain Layout

if [[ $1 == 2 ]]; then declare -a data="${index[@]}"  
\end_layout

\begin_layout Plain Layout

fi  
\end_layout

\begin_layout Plain Layout

if [[ $1 == 3 ]]; then declare -a data="${konten[@]}"  
\end_layout

\begin_layout Plain Layout

fi 
\end_layout

\begin_layout Plain Layout

for f in ${data[@]} do         
\end_layout

\begin_layout Plain Layout

if [ ${f} != $NEWFILE ] then                 
\end_layout

\begin_layout Plain Layout

	if [ -r ${f} ] then                        
\end_layout

\begin_layout Plain Layout

		code="${code} --data-urlencode js_code@${f}"                         
          
\end_layout

\begin_layout Plain Layout

		if [ ${f} -nt $NEWFILE ]; then 						    			process_files=true 						
\end_layout

\begin_layout Plain Layout

		fi                 
\end_layout

\begin_layout Plain Layout

	else                         
\end_layout

\begin_layout Plain Layout

		echo "File ${f} does not exist or is not readable.
 Skipped."                	
\end_layout

\begin_layout Plain Layout

	fi         
\end_layout

\begin_layout Plain Layout

fi 
\end_layout

\begin_layout Plain Layout

done 
\end_layout

\begin_layout Plain Layout

curl 
\backslash
 
\end_layout

\begin_layout Plain Layout

--url ${SERVICE_URL} 
\backslash
 
\end_layout

\begin_layout Plain Layout

--header 'Content-type: application/x-www-form-urlencoded' 
\backslash
 
\end_layout

\begin_layout Plain Layout

${code} 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_format=json 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_info=compiled_code 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_info=statistics 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data output_info=errors 
\backslash
 
\end_layout

\begin_layout Plain Layout

--data compilation_level=SIMPLE_OPTIMIZATIONS |
\end_layout

\begin_layout Plain Layout

python -c ' 
\end_layout

\begin_layout Plain Layout

import json, sys 
\end_layout

\begin_layout Plain Layout

data = json.load(sys.stdin)
\end_layout

\begin_layout Plain Layout

if "errors" in data: 	
\end_layout

\begin_layout Plain Layout

	print "### COMPILATION FAILED WITH ERRORS" 	
\end_layout

\begin_layout Plain Layout

	for err in data["errors"]: 		
\end_layout

\begin_layout Plain Layout

		file = sys.argv[int(err["file"].replace("Input_", "")) 
\end_layout

\begin_layout Plain Layout

			+ 1] 		
\end_layout

\begin_layout Plain Layout

		print "File: %s, %d:%d" % (file, err["lineno"], 
\end_layout

\begin_layout Plain Layout

			err["charno"]) 		
\end_layout

\begin_layout Plain Layout

		print "Error: %s" % err["error"] 		
\end_layout

\begin_layout Plain Layout

		print "Line: %s" % err["line"] 	
\end_layout

\begin_layout Plain Layout

		print "
\backslash
nBuild failed.
\backslash
n" 
\end_layout

\begin_layout Plain Layout

else: 	
\end_layout

\begin_layout Plain Layout

	print "### COMPILATION COMPLETED" 	
\end_layout

\begin_layout Plain Layout

	print "Original size: %db, gziped: %db" % 
\end_layout

\begin_layout Plain Layout

		(data["statistics"]["originalSize"], 		data["statistics"]["originalGzipSize"])
 	
\end_layout

\begin_layout Plain Layout

	print "Compressed size: %db, gziped: %db" % 
\end_layout

\begin_layout Plain Layout

		(data["statistics"]["compressedSize"], 		data["statistics"]["compressedGzipSiz
e"]) 	
\end_layout

\begin_layout Plain Layout

	print "Compression rate: %.2f" % 
\end_layout

\begin_layout Plain Layout

		(float(data["statistics"]["compressedSize"]) / 
\end_layout

\begin_layout Plain Layout

		int(data["statistics"]["originalSize"]))
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	filename = "'${NEWFILE}'" 	
\end_layout

\begin_layout Plain Layout

	with open(filename, "w") as f: 		
\end_layout

\begin_layout Plain Layout

		f.write(data["compiledCode"])
\end_layout

\begin_layout Plain Layout

	
\end_layout

\begin_layout Plain Layout

	print "
\backslash
nBuild file %s created.
\backslash
n" % filename 
\end_layout

\begin_layout Plain Layout

' $@
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
index.json
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

{   
\end_layout

\begin_layout Plain Layout

	"page": {     
\end_layout

\begin_layout Plain Layout

		"active": "Home",     
\end_layout

\begin_layout Plain Layout

		"navbarCollapse": false,     
\end_layout

\begin_layout Plain Layout

		"navbarRight": true,     
\end_layout

\begin_layout Plain Layout

		"navbarLeft": true,     
\end_layout

\begin_layout Plain Layout

		"navbarForm": true   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	"tags": [     
\end_layout

\begin_layout Plain Layout

	{},{       
\end_layout

\begin_layout Plain Layout

		"title": "Photoshop",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "1" 
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "Illustrator",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "2"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "Anime",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "3"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "PHP",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "4"     
\end_layout

\begin_layout Plain Layout

	},{      
\end_layout

\begin_layout Plain Layout

		"title": "Bootstrap",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "5"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "Movies",      
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "7"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "Layout Design",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "8"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "HTML .
 CSS",       
\end_layout

\begin_layout Plain Layout

		"link": "#",       
\end_layout

\begin_layout Plain Layout

		"type": "9"     
\end_layout

\begin_layout Plain Layout

	},{      
\end_layout

\begin_layout Plain Layout

		"title": "Java",      
\end_layout

\begin_layout Plain Layout

		"link": "#",      
\end_layout

\begin_layout Plain Layout

		"type": "6"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "Javascript",     
\end_layout

\begin_layout Plain Layout

		 "link": "#",      
\end_layout

\begin_layout Plain Layout

		"type": "10"     
\end_layout

\begin_layout Plain Layout

	},{       
\end_layout

\begin_layout Plain Layout

		"title": "Varities",       
\end_layout

\begin_layout Plain Layout

		"link": "#",      
\end_layout

\begin_layout Plain Layout

		"type": "11"    
\end_layout

\begin_layout Plain Layout

	}],  
\end_layout

\begin_layout Plain Layout

	"menus":{    
\end_layout

\begin_layout Plain Layout

		"right":[       
\end_layout

\begin_layout Plain Layout

			[["What is Codime ?", "#"]]     
\end_layout

\begin_layout Plain Layout

		],     
\end_layout

\begin_layout Plain Layout

		"left":[
\end_layout

\begin_layout Plain Layout

			[
\end_layout

\begin_layout Plain Layout

				["Home", "#"]
\end_layout

\begin_layout Plain Layout

			],[         
\end_layout

\begin_layout Plain Layout

				["Developement", "#"],         
\end_layout

\begin_layout Plain Layout

				["HTML .
 CSS", "#"],         
\end_layout

\begin_layout Plain Layout

				["Javascript", "#"],         
\end_layout

\begin_layout Plain Layout

				["PHP", "#"],         
\end_layout

\begin_layout Plain Layout

				["Java", "#"],         
\end_layout

\begin_layout Plain Layout

				["Bootstrap", "#"]       
\end_layout

\begin_layout Plain Layout

			],[         
\end_layout

\begin_layout Plain Layout

				["Design ", "#"],         
\end_layout

\begin_layout Plain Layout

				["Photoshop", "#"],         
\end_layout

\begin_layout Plain Layout

				["Illustrator", "#"],         
\end_layout

\begin_layout Plain Layout

				["Layout Design", "#"]      
\end_layout

\begin_layout Plain Layout

			],[         
\end_layout

\begin_layout Plain Layout

				["TVs ", "#"],         
\end_layout

\begin_layout Plain Layout

				["Anime", "#"],         
\end_layout

\begin_layout Plain Layout

				["Movies", "#"],         
\end_layout

\begin_layout Plain Layout

				["Varities", "#"]
\end_layout

\begin_layout Plain Layout

			]
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

	},   																
\end_layout

\begin_layout Plain Layout

	"pagination":[     
\end_layout

\begin_layout Plain Layout

		["1", "#"],     
\end_layout

\begin_layout Plain Layout

		["2", "#"],     
\end_layout

\begin_layout Plain Layout

		["3", "#"],     
\end_layout

\begin_layout Plain Layout

		["4", "#"],     
\end_layout

\begin_layout Plain Layout

		["5", "#"]
\end_layout

\begin_layout Plain Layout

	],   
\end_layout

\begin_layout Plain Layout

	"articles":{     
\end_layout

\begin_layout Plain Layout

		"type": "short",     
\end_layout

\begin_layout Plain Layout

		"data": [{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 1",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

				},{           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,ultos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",             "Varias cernantur
 ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."               
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 2",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

				},{           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 2",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",        
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."               
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 3",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

				},{           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 3",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content":{           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph":[               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."               
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 4",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",          
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

				},{           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			],        
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 5",         
\end_layout

\begin_layout Plain Layout

				"tags":[{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"
\end_layout

\begin_layout Plain Layout

				},{           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 6",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"
\end_layout

\begin_layout Plain Layout

				},{           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"
\end_layout

\begin_layout Plain Layout

				}
\end_layout

\begin_layout Plain Layout

			],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}}
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
konten.json
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

{   
\end_layout

\begin_layout Plain Layout

	"page": {     
\end_layout

\begin_layout Plain Layout

		"active": "Home",     
\end_layout

\begin_layout Plain Layout

		"navbarCollapse": false,     
\end_layout

\begin_layout Plain Layout

		"navbarRight": true,     
\end_layout

\begin_layout Plain Layout

		"navbarLeft": true,     
\end_layout

\begin_layout Plain Layout

		"navbarForm": true   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	"tags": [     
\end_layout

\begin_layout Plain Layout

		{},{       
\end_layout

\begin_layout Plain Layout

			"title": "Photoshop",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "1" 
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "Illustrator",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "2"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "Anime",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "3"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "PHP",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "4"     
\end_layout

\begin_layout Plain Layout

		},{      
\end_layout

\begin_layout Plain Layout

			"title": "Bootstrap",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "5"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "Movies",      
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "7"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "Layout Design",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "8"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "HTML .
 CSS",       
\end_layout

\begin_layout Plain Layout

			"link": "#",       
\end_layout

\begin_layout Plain Layout

			"type": "9"     
\end_layout

\begin_layout Plain Layout

		},{      
\end_layout

\begin_layout Plain Layout

			"title": "Java",      
\end_layout

\begin_layout Plain Layout

			"link": "#",      
\end_layout

\begin_layout Plain Layout

			"type": "6"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "Javascript",     
\end_layout

\begin_layout Plain Layout

			 "link": "#",      
\end_layout

\begin_layout Plain Layout

			"type": "10"     
\end_layout

\begin_layout Plain Layout

		},{       
\end_layout

\begin_layout Plain Layout

			"title": "Varities",       
\end_layout

\begin_layout Plain Layout

			"link": "#",      
\end_layout

\begin_layout Plain Layout

			"type": "11"    
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	],  
\end_layout

\begin_layout Plain Layout

	"menus":{    
\end_layout

\begin_layout Plain Layout

		"right":[       
\end_layout

\begin_layout Plain Layout

			[["What is Codime ?", "#"]]     
\end_layout

\begin_layout Plain Layout

		],     
\end_layout

\begin_layout Plain Layout

		"left":[
\end_layout

\begin_layout Plain Layout

			[
\end_layout

\begin_layout Plain Layout

			["Home", "#"]
\end_layout

\begin_layout Plain Layout

			],[         
\end_layout

\begin_layout Plain Layout

			["Developement", "#"],         
\end_layout

\begin_layout Plain Layout

			["HTML .
 CSS", "#"],         
\end_layout

\begin_layout Plain Layout

			["Javascript", "#"],         
\end_layout

\begin_layout Plain Layout

			["PHP", "#"],         
\end_layout

\begin_layout Plain Layout

			["Java", "#"],         
\end_layout

\begin_layout Plain Layout

			["Bootstrap", "#"]       
\end_layout

\begin_layout Plain Layout

			],[         
\end_layout

\begin_layout Plain Layout

			["Design ", "#"],         
\end_layout

\begin_layout Plain Layout

			["Photoshop", "#"],         
\end_layout

\begin_layout Plain Layout

			["Illustrator", "#"],         
\end_layout

\begin_layout Plain Layout

			["Layout Design", "#"]      
\end_layout

\begin_layout Plain Layout

			],[         
\end_layout

\begin_layout Plain Layout

			["TVs ", "#"],         
\end_layout

\begin_layout Plain Layout

			["Anime", "#"],         
\end_layout

\begin_layout Plain Layout

			["Movies", "#"],         
\end_layout

\begin_layout Plain Layout

			["Varities", "#"]
\end_layout

\begin_layout Plain Layout

			]
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	"pagination":[     
\end_layout

\begin_layout Plain Layout

		["1", "#"],     
\end_layout

\begin_layout Plain Layout

		["2", "#"],     
\end_layout

\begin_layout Plain Layout

		["3", "#"],     
\end_layout

\begin_layout Plain Layout

		["4", "#"],     
\end_layout

\begin_layout Plain Layout

		["5", "#"]
\end_layout

\begin_layout Plain Layout

	],   
\end_layout

\begin_layout Plain Layout

	"article": {     
\end_layout

\begin_layout Plain Layout

		"type": "full",     
\end_layout

\begin_layout Plain Layout

		"data": [{        
\end_layout

\begin_layout Plain Layout

			"title": "Artikel 1",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

			}, {           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",          
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

			}],         
\end_layout

\begin_layout Plain Layout

			"source": "Source 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,ultos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",             
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",             
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",             
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,multos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic."               
\end_layout

\begin_layout Plain Layout

				]}}
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	"smallarticles": {     
\end_layout

\begin_layout Plain Layout

		"data": [{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 1",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

			}, {           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

			}],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,ultos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",             
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 2",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Anime",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

			}, {           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

			}],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 2",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,ultos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",           
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 3",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

			}, {           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

			}],         
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,ultos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",              
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}},{         
\end_layout

\begin_layout Plain Layout

			"title": "Title 4",         
\end_layout

\begin_layout Plain Layout

			"tags": [{           
\end_layout

\begin_layout Plain Layout

				"title": "Photoshop",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "1"           
\end_layout

\begin_layout Plain Layout

			}, {           
\end_layout

\begin_layout Plain Layout

				"title": "Illustrator",           
\end_layout

\begin_layout Plain Layout

				"link": "#",           
\end_layout

\begin_layout Plain Layout

				"type": "2"           
\end_layout

\begin_layout Plain Layout

			}],      
\end_layout

\begin_layout Plain Layout

			"source": "Author 1",         
\end_layout

\begin_layout Plain Layout

			"link": "konten.html",         
\end_layout

\begin_layout Plain Layout

			"content": {           
\end_layout

\begin_layout Plain Layout

				"image": "image/sample.png",           
\end_layout

\begin_layout Plain Layout

				"video": "",           
\end_layout

\begin_layout Plain Layout

				"paragraph": [               
\end_layout

\begin_layout Plain Layout

"Varias cernantur ad praetermissum.
 Commodo elit singulis.
 Excepteur ab anim,ultos mandaremus ut distinguantur ad an qui velit admodum,
 minim cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo
 fore malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siingeniis est iis ipsum praesentibus et fabulas lorem amet consequat
 ipsum,multos mandaremus ut distinguantur ad an qui velit admodum, minim
 cupidatatfidelissimae ad laboris sint arbitror, eram singulis quo fore
 malis, qui quofirmissimum, admodum anim anim sed irure.
 Aliquip varias ullamco ullamco, utdolor laborum se vidisse multos mandaremus,
 o qui aute esse sunt.
 Eiusmod siquorum tempor concursionibus.
 Est aliqua voluptate laboris de incurreret hic.",          
\end_layout

\begin_layout Plain Layout

				]
\end_layout

\begin_layout Plain Layout

			}}
\end_layout

\begin_layout Plain Layout

		]
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
index.html
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<!DOCTYPE html> 
\end_layout

\begin_layout Plain Layout

<html lang="en" /> 
\end_layout

\begin_layout Plain Layout

<html>
\end_layout

\begin_layout Plain Layout

	<head>   
\end_layout

\begin_layout Plain Layout

		<title>     Home - DailyCodime   </title>   
\end_layout

\begin_layout Plain Layout

		<meta charset="utf-8">   
\end_layout

\begin_layout Plain Layout

		<meta name="viewport" content="width=device-width, initial-scale=1"> 
  
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/bootstrap.min.css">   
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/main.css">   
\end_layout

\begin_layout Plain Layout

		<script src="js/react-13.3.js"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/built.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/index.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/jquery-2.1.0.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/bootstrap.min.js" type="text/javascript"></script> 
\end_layout

\begin_layout Plain Layout

	</head>
\end_layout

\begin_layout Plain Layout

	<body>   
\end_layout

\begin_layout Plain Layout

		<div id="app"></div>   
\end_layout

\begin_layout Plain Layout

		<script type="text/javascript">     
\end_layout

\begin_layout Plain Layout

			var app = React.createElement(Index, {       
\end_layout

\begin_layout Plain Layout

				source: "http://127.0.0.1:59875/index.json"     
\end_layout

\begin_layout Plain Layout

			});    
\end_layout

\begin_layout Plain Layout

			React.render(app, document.getElementById("app"));  
\end_layout

\begin_layout Plain Layout

		</script>
\end_layout

\begin_layout Plain Layout

	</body>
\end_layout

\begin_layout Plain Layout

</html> 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
konten.html
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

<!DOCTYPE html> 
\end_layout

\begin_layout Plain Layout

<html lang="en" /> 
\end_layout

\begin_layout Plain Layout

<html>
\end_layout

\begin_layout Plain Layout

	<head>   
\end_layout

\begin_layout Plain Layout

		<title>     Home - DailyCodime   </title>   
\end_layout

\begin_layout Plain Layout

		<meta charset="utf-8">   
\end_layout

\begin_layout Plain Layout

		<meta name="viewport" content="width=device-width, initial-scale=1"> 
  
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/bootstrap.min.css">   
\end_layout

\begin_layout Plain Layout

		<link rel="stylesheet" href="css/main.css">   
\end_layout

\begin_layout Plain Layout

		<script src="js/react-13.3.js"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/built.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/index.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/jquery-2.1.0.min.js" type="text/javascript"></script>   
\end_layout

\begin_layout Plain Layout

		<script src="js/bootstrap.min.js" type="text/javascript"></script> 
\end_layout

\begin_layout Plain Layout

	</head>
\end_layout

\begin_layout Plain Layout

	<body>   
\end_layout

\begin_layout Plain Layout

		<div id="app"></div>   
\end_layout

\begin_layout Plain Layout

		<script type="text/javascript">     
\end_layout

\begin_layout Plain Layout

			var app = React.createElement(Konten, {       
\end_layout

\begin_layout Plain Layout

				source: "http://127.0.0.1:59875/konten.json"     
\end_layout

\begin_layout Plain Layout

			});     
\end_layout

\begin_layout Plain Layout

			React.render(app, document.getElementById("app"));
\end_layout

\begin_layout Plain Layout

		</script>
\end_layout

\begin_layout Plain Layout

	</body>
\end_layout

\begin_layout Plain Layout

</html> 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
ArticleGroup.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var ArticleGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		linkMore : React.PropTypes.bool 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkColoumnType: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.type == "full" ? 
\end_layout

\begin_layout Plain Layout

			"col-md-12 panel-wide" : 
\end_layout

\begin_layout Plain Layout

			"col-md-6 col-sm-6 col-xs-12"; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderArticles: function(){   
\end_layout

\begin_layout Plain Layout

		var linkMore = this.props.linkMore;   
\end_layout

\begin_layout Plain Layout

		var column = this.checkColoumnType();   
\end_layout

\begin_layout Plain Layout

		var type = this.props.type;   
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function(article, key){     
\end_layout

\begin_layout Plain Layout

			return (     
\end_layout

\begin_layout Plain Layout

				<div  key={key} className={column}>       
\end_layout

\begin_layout Plain Layout

					<Article 
\end_layout

\begin_layout Plain Layout

						type={type} 
\end_layout

\begin_layout Plain Layout

						link={article.link} 
\end_layout

\begin_layout Plain Layout

						title={article.title} 
\end_layout

\begin_layout Plain Layout

						tags={article.tags} 
\end_layout

\begin_layout Plain Layout

						source={article.source} 
\end_layout

\begin_layout Plain Layout

						linkMore={linkMore}>           
\end_layout

\begin_layout Plain Layout

							{article.content}         
\end_layout

\begin_layout Plain Layout

					</Article>     
\end_layout

\begin_layout Plain Layout

				</div>      
\end_layout

\begin_layout Plain Layout

			);   
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return ({this.renderArticles()}); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
ArticleGroup.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var ArticleGroup = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "ArticleGroup",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		articles: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string,     
\end_layout

\begin_layout Plain Layout

		linkMore: React.PropTypes.bool   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkColoumnType: function checkColoumnType() {     
\end_layout

\begin_layout Plain Layout

		return this.props.type == "full" ? 
\end_layout

\begin_layout Plain Layout

			"col-md-12 panel-wide" : 
\end_layout

\begin_layout Plain Layout

			"col-md-6 col-sm-6 col-xs-12";   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderArticles: function renderArticles() {     
\end_layout

\begin_layout Plain Layout

		var linkMore = this.props.linkMore;     
\end_layout

\begin_layout Plain Layout

		var column = this.checkColoumnType();     
\end_layout

\begin_layout Plain Layout

		var type = this.props.type;     
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function (article, key) {       
\end_layout

\begin_layout Plain Layout

			return React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ key: key, className: column },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					Article,           
\end_layout

\begin_layout Plain Layout

					{ type: type, link: article.link, 
\end_layout

\begin_layout Plain Layout

					title: article.title, tags: article.tags, 
\end_layout

\begin_layout Plain Layout

					source: article.source, linkMore: linkMore },           
\end_layout

\begin_layout Plain Layout

					article.content         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

		});  
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {    
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			null,       
\end_layout

\begin_layout Plain Layout

			this.renderArticles()     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Article.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Article = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		linkMore : React.PropTypes.bool.isRequired 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 	
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTags: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map(function(tag, key){             
\end_layout

\begin_layout Plain Layout

			return(
\end_layout

\begin_layout Plain Layout

				<li key={key}>
\end_layout

\begin_layout Plain Layout

					<Badge type={tag.type}>{tag.title}</Badge>
\end_layout

\begin_layout Plain Layout

				</li>
\end_layout

\begin_layout Plain Layout

			);
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	shouldLinkMore: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.linkMore? 
\end_layout

\begin_layout Plain Layout

			<li className="article-footer text-left">
\end_layout

\begin_layout Plain Layout

				<a href={this.props.link}>Read More...</a>
\end_layout

\begin_layout Plain Layout

			</li> : null;  
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderParagraph: function(){   
\end_layout

\begin_layout Plain Layout

		return 
\end_layout

\begin_layout Plain Layout

			<Paragraph type={this.props.type}>
\end_layout

\begin_layout Plain Layout

				{this.getChild().paragraph}
\end_layout

\begin_layout Plain Layout

			</Paragraph>; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderVideo: function(){   
\end_layout

\begin_layout Plain Layout

		return <Video src={this.getChild().video}></Video>; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderImage: function(){   
\end_layout

\begin_layout Plain Layout

		return <Image src={this.getChild().image}></Image>; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderArticles: function(){   
\end_layout

\begin_layout Plain Layout

		var content = {     
\end_layout

\begin_layout Plain Layout

			paragraph: this.renderParagraph(),     
\end_layout

\begin_layout Plain Layout

			video: this.renderVideo(),     
\end_layout

\begin_layout Plain Layout

			image: this.renderImage()   
\end_layout

\begin_layout Plain Layout

		};   
\end_layout

\begin_layout Plain Layout

		return 
\end_layout

\begin_layout Plain Layout

			this.getChild().video != "" ?
\end_layout

\begin_layout Plain Layout

				<div>{content.video}{content.paragraph}</div>:
\end_layout

\begin_layout Plain Layout

			this.getChild().image != "" ? 
\end_layout

\begin_layout Plain Layout

				<div>{content.image}{content.paragraph}</div>:
\end_layout

\begin_layout Plain Layout

			null;   
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (             
\end_layout

\begin_layout Plain Layout

		<div className="panel panel-default">                 
\end_layout

\begin_layout Plain Layout

			<div className="panel-heading">                   
\end_layout

\begin_layout Plain Layout

				<div className="panel-title">
\end_layout

\begin_layout Plain Layout

					<a href={this.props.link}><span className="lead">
\end_layout

\begin_layout Plain Layout

						{this.props.title}</span>
\end_layout

\begin_layout Plain Layout

					</a>
\end_layout

\begin_layout Plain Layout

				</div>                 
\end_layout

\begin_layout Plain Layout

			</div>                 
\end_layout

\begin_layout Plain Layout

			<div className="panel-body">                   
\end_layout

\begin_layout Plain Layout

				<ul className="list-unstyled">                     
\end_layout

\begin_layout Plain Layout

					<li>                       
\end_layout

\begin_layout Plain Layout

						<ul className="list-inline">
\end_layout

\begin_layout Plain Layout

							{this.renderTags()}
\end_layout

\begin_layout Plain Layout

						</ul>                     
\end_layout

\begin_layout Plain Layout

					</li>                     
\end_layout

\begin_layout Plain Layout

					<li>                       
\end_layout

\begin_layout Plain Layout

						<blockquote>                         
\end_layout

\begin_layout Plain Layout

							<footer>Author : <cite title="Source Title">
\end_layout

\begin_layout Plain Layout

								{this.props.source}</cite>
\end_layout

\begin_layout Plain Layout

							</footer>                       
\end_layout

\begin_layout Plain Layout

						</blockquote>                    
\end_layout

\begin_layout Plain Layout

					</li>                     
\end_layout

\begin_layout Plain Layout

					<div>{this.renderArticles()}</div>
\end_layout

\begin_layout Plain Layout

					{this.shouldLinkMore()}
\end_layout

\begin_layout Plain Layout

				</ul>                 
\end_layout

\begin_layout Plain Layout

			</div>              
\end_layout

\begin_layout Plain Layout

		</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Article.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Article = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Article",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		link: React.PropTypes.string.isRequired,     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.object,     
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string.isRequired,     
\end_layout

\begin_layout Plain Layout

		tags: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		linkMore: React.PropTypes.bool.isRequired   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getChild: function getChild() {     
\end_layout

\begin_layout Plain Layout

		return this.props.children;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderTags: function renderTags() {     
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map(function (tag, key) {       
\end_layout

\begin_layout Plain Layout

			return React.createElement(         
\end_layout

\begin_layout Plain Layout

				"li",         
\end_layout

\begin_layout Plain Layout

				{ key: key },         
\end_layout

\begin_layout Plain Layout

				React.createElement(          
\end_layout

\begin_layout Plain Layout

				Badge,           
\end_layout

\begin_layout Plain Layout

				{ type: tag.type },           
\end_layout

\begin_layout Plain Layout

				tag.title         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	shouldLinkMore: function shouldLinkMore() {     
\end_layout

\begin_layout Plain Layout

		return this.props.linkMore ? React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: "article-footer text-left" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"a",         
\end_layout

\begin_layout Plain Layout

				{ href: this.props.link },         
\end_layout

\begin_layout Plain Layout

				"Read More..."       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		) : null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderParagraph: function renderParagraph() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(      
\end_layout

\begin_layout Plain Layout

			Paragraph,       
\end_layout

\begin_layout Plain Layout

			{ type: this.props.type },       
\end_layout

\begin_layout Plain Layout

			this.getChild().paragraph     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderVideo: function renderVideo() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(
\end_layout

\begin_layout Plain Layout

			Video, 
\end_layout

\begin_layout Plain Layout

			{ src: this.getChild().video 
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderImage: function renderImage() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(
\end_layout

\begin_layout Plain Layout

			Image, 
\end_layout

\begin_layout Plain Layout

			{ src: this.getChild().image 
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderArticles: function renderArticles() {     
\end_layout

\begin_layout Plain Layout

		var content = {       
\end_layout

\begin_layout Plain Layout

			paragraph: this.renderParagraph(),       
\end_layout

\begin_layout Plain Layout

			video: this.renderVideo(),       
\end_layout

\begin_layout Plain Layout

			image: this.renderImage()     
\end_layout

\begin_layout Plain Layout

		};     
\end_layout

\begin_layout Plain Layout

		return this.getChild().video != "" ? React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			null,       
\end_layout

\begin_layout Plain Layout

			content.video,       
\end_layout

\begin_layout Plain Layout

			content.paragraph     
\end_layout

\begin_layout Plain Layout

		) : this.getChild().image != "" ? React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			null,       
\end_layout

\begin_layout Plain Layout

			content.image,       
\end_layout

\begin_layout Plain Layout

			content.paragraph     
\end_layout

\begin_layout Plain Layout

		) : null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "panel panel-default" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "panel-heading" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "panel-title" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"a",             
\end_layout

\begin_layout Plain Layout

						{ href: this.props.link },             
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"span",               
\end_layout

\begin_layout Plain Layout

							{ className: "lead" },               
\end_layout

\begin_layout Plain Layout

							this.props.title             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

		React.createElement(         
\end_layout

\begin_layout Plain Layout

			"div",         
\end_layout

\begin_layout Plain Layout

			{ className: "panel-body" },         
\end_layout

\begin_layout Plain Layout

			React.createElement(           
\end_layout

\begin_layout Plain Layout

				"ul",           
\end_layout

\begin_layout Plain Layout

				{ className: "list-unstyled" },           
\end_layout

\begin_layout Plain Layout

				React.createElement(             
\end_layout

\begin_layout Plain Layout

					"li",             
\end_layout

\begin_layout Plain Layout

					null,             
\end_layout

\begin_layout Plain Layout

					React.createElement(               
\end_layout

\begin_layout Plain Layout

						"ul",               
\end_layout

\begin_layout Plain Layout

						{ className: "list-inline" },               
\end_layout

\begin_layout Plain Layout

						this.renderTags()             
\end_layout

\begin_layout Plain Layout

					)           
\end_layout

\begin_layout Plain Layout

				),           
\end_layout

\begin_layout Plain Layout

				React.createElement(             
\end_layout

\begin_layout Plain Layout

					"li",             
\end_layout

\begin_layout Plain Layout

					null,             
\end_layout

\begin_layout Plain Layout

					React.createElement(               
\end_layout

\begin_layout Plain Layout

						"blockquote",               
\end_layout

\begin_layout Plain Layout

						null,               
\end_layout

\begin_layout Plain Layout

						React.createElement(                 
\end_layout

\begin_layout Plain Layout

							"footer",                 
\end_layout

\begin_layout Plain Layout

							null,                 
\end_layout

\begin_layout Plain Layout

							"Author : ",                 
\end_layout

\begin_layout Plain Layout

							React.createElement(                   
\end_layout

\begin_layout Plain Layout

								"cite",                   
\end_layout

\begin_layout Plain Layout

								{ title: "Source Title" },                   
\end_layout

\begin_layout Plain Layout

							this.props.source                 
\end_layout

\begin_layout Plain Layout

							)               
\end_layout

\begin_layout Plain Layout

						)             
\end_layout

\begin_layout Plain Layout

					)           
\end_layout

\begin_layout Plain Layout

				),           
\end_layout

\begin_layout Plain Layout

				React.createElement(             
\end_layout

\begin_layout Plain Layout

					"div",             
\end_layout

\begin_layout Plain Layout

					null,             
\end_layout

\begin_layout Plain Layout

					this.renderArticles()           
\end_layout

\begin_layout Plain Layout

					),           
\end_layout

\begin_layout Plain Layout

					this.shouldLinkMore()         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Paragraph.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Paragraph = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.array, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderParagraph: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children.map(function(paragraph, key){             
\end_layout

\begin_layout Plain Layout

			return(               
\end_layout

\begin_layout Plain Layout

			<p className="text-justify" key={key}>                 
\end_layout

\begin_layout Plain Layout

				{paragraph}               
\end_layout

\begin_layout Plain Layout

			</p>             
\end_layout

\begin_layout Plain Layout

			);           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className={"article-text-"+ this.props.type}>       
\end_layout

\begin_layout Plain Layout

				{this.renderParagraph()}     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Paragraph.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Paragraph = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Paragraph",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string.isRequired,     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderParagraph: function renderParagraph() {     
\end_layout

\begin_layout Plain Layout

		return this.props.children.map(function (paragraph, key) {       
\end_layout

\begin_layout Plain Layout

			return React.createElement(         
\end_layout

\begin_layout Plain Layout

				"p",         
\end_layout

\begin_layout Plain Layout

				{ className: "text-justify", key: key },         
\end_layout

\begin_layout Plain Layout

				paragraph       
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

		});  
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: "article-text-" + this.props.type },       
\end_layout

\begin_layout Plain Layout

			this.renderParagraph()     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Image.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Image = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		src : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className="konten-img">
\end_layout

\begin_layout Plain Layout

				<img src={this.props.src} className="img-responsive"/>
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Image.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Image = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Image",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		src: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: "konten-img" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(
\end_layout

\begin_layout Plain Layout

				"img", 
\end_layout

\begin_layout Plain Layout

				{ src: this.props.src, className: "img-responsive" }
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Video.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Video = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		src : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li>       
\end_layout

\begin_layout Plain Layout

				<div className="embed-responsive embed-responsive-16by9">         
\end_layout

\begin_layout Plain Layout

					<iframe 
\end_layout

\begin_layout Plain Layout

						className="embed-responsive-item" 
\end_layout

\begin_layout Plain Layout

						src={this.props.src} 
\end_layout

\begin_layout Plain Layout

						frameBorder="0" 
\end_layout

\begin_layout Plain Layout

						allowFullScreen>
\end_layout

\begin_layout Plain Layout

					</iframe>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Video.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Video = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Video",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		src: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			null,       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "embed-responsive embed-responsive-16by9" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(
\end_layout

\begin_layout Plain Layout

					"iframe", 
\end_layout

\begin_layout Plain Layout

					{ className: "embed-responsive-item", 
\end_layout

\begin_layout Plain Layout

					src: this.props.src, frameBorder: "0", 
\end_layout

\begin_layout Plain Layout

					allowFullScreen: true }
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Navbar.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Navbar = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		menus : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		page : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		addMargin : React.PropTypes.bool,   
\end_layout

\begin_layout Plain Layout

		title : React.PropTypes.bool,   
\end_layout

\begin_layout Plain Layout

		active : React.PropTypes.string 
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarCollapse ? 
\end_layout

\begin_layout Plain Layout

			"collapse navbar-collapse" : 
\end_layout

\begin_layout Plain Layout

			""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	navbarLeft: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarLeft ? {     
\end_layout

\begin_layout Plain Layout

			float: "left",     
\end_layout

\begin_layout Plain Layout

			margin: this.props.addMargin,     
\end_layout

\begin_layout Plain Layout

			menu: this.props.menus.left,     
\end_layout

\begin_layout Plain Layout

			page: this.props.page.active,     
\end_layout

\begin_layout Plain Layout

			collapse: this.props.page.navbarCollapse,     
\end_layout

\begin_layout Plain Layout

			active: this.props.active,     
\end_layout

\begin_layout Plain Layout

		} : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	navbarRight: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarRight ? {     
\end_layout

\begin_layout Plain Layout

			float: "right",     
\end_layout

\begin_layout Plain Layout

			margin: this.props.addMargin,     
\end_layout

\begin_layout Plain Layout

			menu: this.props.menus.right,     
\end_layout

\begin_layout Plain Layout

			page: this.props.page.active,     
\end_layout

\begin_layout Plain Layout

			collapse: this.props.page.navbarCollapse,     
\end_layout

\begin_layout Plain Layout

			active: this.props.active,     
\end_layout

\begin_layout Plain Layout

		} : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderNav: function(nav){   
\end_layout

\begin_layout Plain Layout

		return nav != null?     
\end_layout

\begin_layout Plain Layout

			<NavsGroup 
\end_layout

\begin_layout Plain Layout

				addMargin={nav.margin}                  
\end_layout

\begin_layout Plain Layout

				options={nav.menu}                  
\end_layout

\begin_layout Plain Layout

				page={nav.page}                  
\end_layout

\begin_layout Plain Layout

				float={nav.float}                  
\end_layout

\begin_layout Plain Layout

				collapse={nav.collapse}                  
\end_layout

\begin_layout Plain Layout

				active={nav.active}>     
\end_layout

\begin_layout Plain Layout

			</NavsGroup> : null;   
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderForm: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarForm ? 
\end_layout

\begin_layout Plain Layout

			<NavbarForm></NavbarForm> : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTitle: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.title ? 
\end_layout

\begin_layout Plain Layout

			<Title navbar={true}></Title> : null; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<nav className={"navbar navbar-default panel-navbar full-nav " 
\end_layout

\begin_layout Plain Layout

					+ this.checkIsCollapse()}>           
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid">             
\end_layout

\begin_layout Plain Layout

					<div className="navbar-header">               
\end_layout

\begin_layout Plain Layout

						<button 
\end_layout

\begin_layout Plain Layout

							type="button" 
\end_layout

\begin_layout Plain Layout

							className="navbar-toggle collapsed" 
\end_layout

\begin_layout Plain Layout

							data-toggle="collapse" 
\end_layout

\begin_layout Plain Layout

							data-target="#bs-example-navbar-collapse-1" 
\end_layout

\begin_layout Plain Layout

							aria-expanded="false">                 
\end_layout

\begin_layout Plain Layout

							<span className="sr-only">Toggle navigation</span>    							<span
 className="icon-bar"></span>                 
\end_layout

\begin_layout Plain Layout

							<span className="icon-bar"></span>                 							<span className
="icon-bar"></span>               
\end_layout

\begin_layout Plain Layout

						</button>               
\end_layout

\begin_layout Plain Layout

						{this.renderTitle()}             
\end_layout

\begin_layout Plain Layout

					</div>
\end_layout

\begin_layout Plain Layout

					<div className="collapse navbar-collapse" 
\end_layout

\begin_layout Plain Layout

						id="bs-example-navbar-collapse-1">             						{this.renderNav(this.na
vbarLeft())}          						{this.renderForm()}
\end_layout

\begin_layout Plain Layout

						{this.renderNav(this.navbarRight())}             
\end_layout

\begin_layout Plain Layout

					</div>           
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

			</nav>     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}); 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Navbar.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Navbar = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Navbar",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		menus: React.PropTypes.object,     
\end_layout

\begin_layout Plain Layout

		page: React.PropTypes.object,     
\end_layout

\begin_layout Plain Layout

		addMargin: React.PropTypes.bool,     
\end_layout

\begin_layout Plain Layout

		title: React.PropTypes.bool,     
\end_layout

\begin_layout Plain Layout

		active: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function checkIsCollapse() {     
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarCollapse ? 
\end_layout

\begin_layout Plain Layout

			"collapse navbar-collapse" : "";   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	navbarLeft: function navbarLeft() {     
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarLeft ? {       
\end_layout

\begin_layout Plain Layout

			float: "left",       
\end_layout

\begin_layout Plain Layout

			margin: this.props.addMargin,      
\end_layout

\begin_layout Plain Layout

			menu: this.props.menus.left,       
\end_layout

\begin_layout Plain Layout

			page: this.props.page.active,       
\end_layout

\begin_layout Plain Layout

			collapse: this.props.page.navbarCollapse,       
\end_layout

\begin_layout Plain Layout

			active: this.props.active} : null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	navbarRight: function navbarRight() {     
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarRight ? {       
\end_layout

\begin_layout Plain Layout

			float: "right", 
\end_layout

\begin_layout Plain Layout

			margin: this.props.addMargin,       
\end_layout

\begin_layout Plain Layout

			menu: this.props.menus.right,       
\end_layout

\begin_layout Plain Layout

			page: this.props.page.active,       
\end_layout

\begin_layout Plain Layout

			collapse: this.props.page.navbarCollapse,       
\end_layout

\begin_layout Plain Layout

			active: this.props.active} : null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderNav: function renderNav(nav) {     
\end_layout

\begin_layout Plain Layout

		return nav != null ? React.createElement(
\end_layout

\begin_layout Plain Layout

			NavsGroup, 
\end_layout

\begin_layout Plain Layout

			{ 
\end_layout

\begin_layout Plain Layout

			addMargin: nav.margin, 
\end_layout

\begin_layout Plain Layout

			options: nav.menu,       
\end_layout

\begin_layout Plain Layout

			page: nav.page, 
\end_layout

\begin_layout Plain Layout

			float: nav.float,       
\end_layout

\begin_layout Plain Layout

			collapse: nav.collapse, 
\end_layout

\begin_layout Plain Layout

			active: nav.active }
\end_layout

\begin_layout Plain Layout

		) : null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderForm: function renderForm() {     
\end_layout

\begin_layout Plain Layout

		return this.props.page.navbarForm ? 
\end_layout

\begin_layout Plain Layout

			React.createElement(NavbarForm, null) 
\end_layout

\begin_layout Plain Layout

		: null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderTitle: function renderTitle() {     
\end_layout

\begin_layout Plain Layout

		return this.props.title ? 
\end_layout

\begin_layout Plain Layout

			React.createElement(Title, { navbar: true }) 
\end_layout

\begin_layout Plain Layout

		: null;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"nav",       
\end_layout

\begin_layout Plain Layout

			{ className: "navbar navbar-default panel-navbar full-nav " 
\end_layout

\begin_layout Plain Layout

			+ this.checkIsCollapse() },       
\end_layout

\begin_layout Plain Layout

			React.crateElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "container-fluid" },        
\end_layout

\begin_layout Plain Layout

				React.createElement(          
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "navbar-header" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"button",             
\end_layout

\begin_layout Plain Layout

						{ type: "button", className: "navbar-toggle collapsed", 
\end_layout

\begin_layout Plain Layout

						"data-toggle": "collapse", 
\end_layout

\begin_layout Plain Layout

						"data-target": "#bs-example-navbar-collapse-1", 
\end_layout

\begin_layout Plain Layout

						"aria-expanded": "false"},             
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"span",               
\end_layout

\begin_layout Plain Layout

							{ className: "sr-only" },               
\end_layout

\begin_layout Plain Layout

							"Toggle navigation"             
\end_layout

\begin_layout Plain Layout

						),             
\end_layout

\begin_layout Plain Layout

						React.createElement(
\end_layout

\begin_layout Plain Layout

							"span", 
\end_layout

\begin_layout Plain Layout

							{ className: "icon-bar" }
\end_layout

\begin_layout Plain Layout

						),             
\end_layout

\begin_layout Plain Layout

						React.createElement(
\end_layout

\begin_layout Plain Layout

							"span", 
\end_layout

\begin_layout Plain Layout

							{ className: "icon-bar" }
\end_layout

\begin_layout Plain Layout

						),             
\end_layout

\begin_layout Plain Layout

						React.createElement(
\end_layout

\begin_layout Plain Layout

							"span", 
\end_layout

\begin_layout Plain Layout

							{ className: "icon-bar" }
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					),           
\end_layout

\begin_layout Plain Layout

					this.renderTitle()         
\end_layout

\begin_layout Plain Layout

				),         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "collapse navbar-collapse", 
\end_layout

\begin_layout Plain Layout

					id: "bs-example-navbar-collapse-1" },           
\end_layout

\begin_layout Plain Layout

					this.renderNav(this.navbarLeft()),           
\end_layout

\begin_layout Plain Layout

					this.renderForm(),           
\end_layout

\begin_layout Plain Layout

					this.renderNav(this.navbarRight())        
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
NavbarForm.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var NavbarForm = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	render : function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<form className="navbar-form navbar-right" role="search">       
\end_layout

\begin_layout Plain Layout

				<div className="form-group">         
\end_layout

\begin_layout Plain Layout

					<input 
\end_layout

\begin_layout Plain Layout

						type="text" 
\end_layout

\begin_layout Plain Layout

						className="form-control" 
\end_layout

\begin_layout Plain Layout

						placeholder="Search"/>  
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</form>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
NavbarForm.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var NavbarForm = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "NavbarForm",
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"form",       
\end_layout

\begin_layout Plain Layout

			{ className: "navbar-form navbar-right", 
\end_layout

\begin_layout Plain Layout

			role: "search" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "form-group" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(
\end_layout

\begin_layout Plain Layout

					"input", 
\end_layout

\begin_layout Plain Layout

					{ type: "text", className: "form-control", 
\end_layout

\begin_layout Plain Layout

					placeholder: "Search" }
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
NavsGroup.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var NavsGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		float : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		collapse : React.PropTypes.bool.isRequired,   
\end_layout

\begin_layout Plain Layout

		options : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		addMargin : React.PropTypes.bool.isRequired,   
\end_layout

\begin_layout Plain Layout

		active : React.PropTypes.string 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkMenuFloat: function(){   
\end_layout

\begin_layout Plain Layout

		var float = this.props.float == "right" ? 
\end_layout

\begin_layout Plain Layout

			"nav navbar-nav navbar-right" : 
\end_layout

\begin_layout Plain Layout

			"nav navbar-nav navbar-left";   
\end_layout

\begin_layout Plain Layout

		return float + this.shouldAddMargin(); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	shouldAddMargin: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.addMargin ? "" : " navbar-float-left"; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderMenus: function(){   
\end_layout

\begin_layout Plain Layout

		var collapse = this.props.collapse;   
\end_layout

\begin_layout Plain Layout

		var active = this.props.active;   
\end_layout

\begin_layout Plain Layout

		return this.props.options.map(function(option, key){             
\end_layout

\begin_layout Plain Layout

			if(option.length >= 2){               
\end_layout

\begin_layout Plain Layout

				return 
\end_layout

\begin_layout Plain Layout

					<Dropdown 
\end_layout

\begin_layout Plain Layout

						collapse={collapse} 
\end_layout

\begin_layout Plain Layout

						key={key} 
\end_layout

\begin_layout Plain Layout

						dropdownMenus={option} 
\end_layout

\begin_layout Plain Layout

						link={option[0][1]}>
\end_layout

\begin_layout Plain Layout

						{option[0][0]}
\end_layout

\begin_layout Plain Layout

					</Dropdown>;             
\end_layout

\begin_layout Plain Layout

			}else{               
\end_layout

\begin_layout Plain Layout

				return 
\end_layout

\begin_layout Plain Layout

					<Menu 
\end_layout

\begin_layout Plain Layout

						link={option[0][1]} 
\end_layout

\begin_layout Plain Layout

						key={key} 
\end_layout

\begin_layout Plain Layout

						active={active}>
\end_layout

\begin_layout Plain Layout

						{option[0][0]}
\end_layout

\begin_layout Plain Layout

					</Menu>;
\end_layout

\begin_layout Plain Layout

			}           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<ul className={this.checkMenuFloat()}>       
\end_layout

\begin_layout Plain Layout

				{this.renderMenus()}     
\end_layout

\begin_layout Plain Layout

			</ul>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
NavbarGroup.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var NavsGroup = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "NavsGroup",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		float: React.PropTypes.string.isRequired,     
\end_layout

\begin_layout Plain Layout

		collapse: React.PropTypes.bool.isRequired,     
\end_layout

\begin_layout Plain Layout

		options: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		addMargin: React.PropTypes.bool.isRequired,     
\end_layout

\begin_layout Plain Layout

		active: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkMenuFloat: function checkMenuFloat() {     
\end_layout

\begin_layout Plain Layout

		var float = this.props.float == "right" ? 
\end_layout

\begin_layout Plain Layout

			"nav navbar-nav navbar-right" : 
\end_layout

\begin_layout Plain Layout

			"nav navbar-nav navbar-left";     
\end_layout

\begin_layout Plain Layout

		return float + this.shouldAddMargin();   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	shouldAddMargin: function shouldAddMargin() {     
\end_layout

\begin_layout Plain Layout

		return this.props.addMargin ? "" : 
\end_layout

\begin_layout Plain Layout

		" navbar-float-left";   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderMenus: function renderMenus() {     
\end_layout

\begin_layout Plain Layout

		var collapse = this.props.collapse;     
\end_layout

\begin_layout Plain Layout

		var active = this.props.active;     
\end_layout

\begin_layout Plain Layout

		return this.props.options.map(function (option, key) {       
\end_layout

\begin_layout Plain Layout

			if (option.length >= 2) {         
\end_layout

\begin_layout Plain Layout

				return React.createElement(           
\end_layout

\begin_layout Plain Layout

				Dropdown,           
\end_layout

\begin_layout Plain Layout

				{ collapse: collapse, key: key, 
\end_layout

\begin_layout Plain Layout

				dropdownMenus: option, 
\end_layout

\begin_layout Plain Layout

				link: option[0][1] },           
\end_layout

\begin_layout Plain Layout

				option[0][0]         
\end_layout

\begin_layout Plain Layout

				);       
\end_layout

\begin_layout Plain Layout

			} else {         
\end_layout

\begin_layout Plain Layout

				return React.createElement(           
\end_layout

\begin_layout Plain Layout

				Menu,           
\end_layout

\begin_layout Plain Layout

				{ link: option[0][1], key: key, 
\end_layout

\begin_layout Plain Layout

				active: active },           
\end_layout

\begin_layout Plain Layout

				option[0][0]         
\end_layout

\begin_layout Plain Layout

				);      
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"ul",       
\end_layout

\begin_layout Plain Layout

			{ className: this.checkMenuFloat() },       
\end_layout

\begin_layout Plain Layout

			this.renderMenus()    
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Dropdown.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Dropdown = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		dropdownMenus : React.PropTypes.array.isRequired,   
\end_layout

\begin_layout Plain Layout

		collapse : React.PropTypes.bool.isRequired, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderSubMenus: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.dropdownMenus.map(function(menu, key){               
\end_layout

\begin_layout Plain Layout

			if (key > 0){                 
\end_layout

\begin_layout Plain Layout

				return 
\end_layout

\begin_layout Plain Layout

					<DropdownMenu key={key} link={menu[1]}>
\end_layout

\begin_layout Plain Layout

						{menu[0]}
\end_layout

\begin_layout Plain Layout

					</DropdownMenu>;             
\end_layout

\begin_layout Plain Layout

			}           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.collapse ? "menu-collapse" : ""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className={"dropdown " + this.checkIsCollapse()}>       
\end_layout

\begin_layout Plain Layout

				<a 
\end_layout

\begin_layout Plain Layout

					href={this.props.link} 
\end_layout

\begin_layout Plain Layout

					className="dropdown-toggle" 
\end_layout

\begin_layout Plain Layout

					data-toggle="dropdown" 
\end_layout

\begin_layout Plain Layout

					role="button" 
\end_layout

\begin_layout Plain Layout

					aria-haspopup="true" 
\end_layout

\begin_layout Plain Layout

					aria-expanded="false">
\end_layout

\begin_layout Plain Layout

					{this.props.children}
\end_layout

\begin_layout Plain Layout

					<span className="caret"></span>
\end_layout

\begin_layout Plain Layout

				</a>       
\end_layout

\begin_layout Plain Layout

				<ul className="dropdown-menu">
\end_layout

\begin_layout Plain Layout

					{this.renderSubMenus()}
\end_layout

\begin_layout Plain Layout

				</ul>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Dropdown.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Dropdown = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Dropdown",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		dropdownMenus: React.PropTypes.array.isRequired,     
\end_layout

\begin_layout Plain Layout

		collapse: React.PropTypes.bool.isRequired   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderSubMenus: function renderSubMenus() {     
\end_layout

\begin_layout Plain Layout

		return this.props.dropdownMenus.map(function (menu, key) {       
\end_layout

\begin_layout Plain Layout

			if (key > 0) {         
\end_layout

\begin_layout Plain Layout

				return React.createElement(           
\end_layout

\begin_layout Plain Layout

					DropdownMenu,           
\end_layout

\begin_layout Plain Layout

					{ key: key, link: menu[1] },           
\end_layout

\begin_layout Plain Layout

					menu[0]         
\end_layout

\begin_layout Plain Layout

				);       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function checkIsCollapse() {     
\end_layout

\begin_layout Plain Layout

		return this.props.collapse ? "menu-collapse" 
\end_layout

\begin_layout Plain Layout

		: "";   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: "dropdown " + 
\end_layout

\begin_layout Plain Layout

			this.checkIsCollapse() },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"a",         
\end_layout

\begin_layout Plain Layout

				{ href: this.props.link, className: "dropdown-toggle", 
\end_layout

\begin_layout Plain Layout

				"data-toggle": "dropdown", role: "button", 
\end_layout

\begin_layout Plain Layout

				"aria-haspopup": "true", "aria-expanded": "false" },         
\end_layout

\begin_layout Plain Layout

				this.props.children,         
\end_layout

\begin_layout Plain Layout

				React.createElement(
\end_layout

\begin_layout Plain Layout

					"span", 
\end_layout

\begin_layout Plain Layout

					{ className: "caret" }
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),      
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"ul",         
\end_layout

\begin_layout Plain Layout

				{ className: "dropdown-menu" },        
\end_layout

\begin_layout Plain Layout

				this.renderSubMenus()       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
DropdownMenu.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var DropdownMenu = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string.isRequired, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li>       
\end_layout

\begin_layout Plain Layout

				<a href={this.props.link}>{this.getChild()}</a>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
DropdownMenu.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var DropdownMenu = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "DropdownMenu",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		link: React.PropTypes.string.isRequired,     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.string.isRequired   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getChild: function getChild() {     
\end_layout

\begin_layout Plain Layout

		return this.props.children;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			null,      
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"a",         
\end_layout

\begin_layout Plain Layout

				{ href: this.props.link },         
\end_layout

\begin_layout Plain Layout

				this.getChild()       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Menu.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Menu = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string.isRequired,   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render : function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className={this.props.children == this.props.active? 
\end_layout

\begin_layout Plain Layout

				"active" : ""}>       
\end_layout

\begin_layout Plain Layout

				<a href={this.props.link} className="lead">
\end_layout

\begin_layout Plain Layout

					{this.getChild()}
\end_layout

\begin_layout Plain Layout

				</a>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Menu.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Menu = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Menu",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.string.isRequired,     
\end_layout

\begin_layout Plain Layout

		link: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getChild: function getChild() {     
\end_layout

\begin_layout Plain Layout

		return this.props.children;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: this.props.children == 
\end_layout

\begin_layout Plain Layout

			this.props.active ? 
\end_layout

\begin_layout Plain Layout

			"active" : "" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"a",         
\end_layout

\begin_layout Plain Layout

				{ href: this.props.link, className: "lead" },         
\end_layout

\begin_layout Plain Layout

				this.getChild()       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SidePanel.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SidePanel = React.createClass({   
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

		<div className="col-lg-4 panel-sidepanel">     
\end_layout

\begin_layout Plain Layout

			<div className="panel panel-default">       
\end_layout

\begin_layout Plain Layout

				<div className="panel-body text-center">         
\end_layout

\begin_layout Plain Layout

					<ul className="list-group list-unstyled text-center">           
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item title">             
\end_layout

\begin_layout Plain Layout

							<Title navbar={false}></Title>           
\end_layout

\begin_layout Plain Layout

						</li>           
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item hello">             
\end_layout

\begin_layout Plain Layout

							<Headline></Headline>           
\end_layout

\begin_layout Plain Layout

						</li>         
\end_layout

\begin_layout Plain Layout

					</ul>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

			<SidePanelHeader class="list-header-collapse-xsmall">
\end_layout

\begin_layout Plain Layout

				Recent
\end_layout

\begin_layout Plain Layout

			</SidePanelHeader>     
\end_layout

\begin_layout Plain Layout

			<SmallArticleGroup 
\end_layout

\begin_layout Plain Layout

				articles={this.props.articles} 
\end_layout

\begin_layout Plain Layout

				type={this.props.type} 			
\end_layout

\begin_layout Plain Layout

				collapse={this.props.collapse}>
\end_layout

\begin_layout Plain Layout

			</SmallArticleGroup>     
\end_layout

\begin_layout Plain Layout

			<div className="panel-collapse">       
\end_layout

\begin_layout Plain Layout

				<SidePanelHeader>Tags</SidePanelHeader>     
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

			<div className="panel-collapse">       
\end_layout

\begin_layout Plain Layout

				<TagPanel tags={this.props.tags}></TagPanel>     
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

			<SidePanelFooter>Codime</SidePanelFooter>     
\end_layout

\begin_layout Plain Layout

		</div>     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

}); 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SidePanel.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var SidePanel = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "SidePanel",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		articles: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		tags: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "col-lg-4 panel-sidepanel" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "panel panel-default" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "panel-body text-center" },          
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"ul",             
\end_layout

\begin_layout Plain Layout

						{ className: "list-group list-unstyled text-center" },           
  
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"li",               
\end_layout

\begin_layout Plain Layout

							{ className: "list-group-item title" },               
\end_layout

\begin_layout Plain Layout

							React.createElement(
\end_layout

\begin_layout Plain Layout

								Title, 
\end_layout

\begin_layout Plain Layout

								{ navbar: false }
\end_layout

\begin_layout Plain Layout

							)             
\end_layout

\begin_layout Plain Layout

						),            
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"li",               
\end_layout

\begin_layout Plain Layout

							{ className: "list-group-item hello" },               
\end_layout

\begin_layout Plain Layout

							React.createElement(
\end_layout

\begin_layout Plain Layout

								Headline, 
\end_layout

\begin_layout Plain Layout

								null
\end_layout

\begin_layout Plain Layout

							)            
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				SidePanelHeader,         
\end_layout

\begin_layout Plain Layout

				{ "class": "list-header-collapse-xsmall" },         
\end_layout

\begin_layout Plain Layout

				"Recent"       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(
\end_layout

\begin_layout Plain Layout

				SmallArticleGroup, 
\end_layout

\begin_layout Plain Layout

				{ articles: this.props.articles, 
\end_layout

\begin_layout Plain Layout

				type: this.props.type, 
\end_layout

\begin_layout Plain Layout

				collapse: this.props.collapse }
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "panel-collapse" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					SidePanelHeader,           
\end_layout

\begin_layout Plain Layout

					null,           
\end_layout

\begin_layout Plain Layout

					"Tags"         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "panel-collapse" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(
\end_layout

\begin_layout Plain Layout

					TagPanel, 
\end_layout

\begin_layout Plain Layout

					{ tags: this.props.tags }
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				SidePanelFooter,         
\end_layout

\begin_layout Plain Layout

				null,         
\end_layout

\begin_layout Plain Layout

				"Codime"       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);  	 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SidePanelHeader.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SidePanelHeader = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){ 
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(   
\end_layout

\begin_layout Plain Layout

			<li className={"list-group-item text-left " + this.props.class}>
\end_layout

\begin_layout Plain Layout

				<span className="lead">{this.getChild()}</span>
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SidePanelHeader.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var SidePanelHeader = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "SidePanelHeader",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getChild: function getChild() {     
\end_layout

\begin_layout Plain Layout

		return this.props.children;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: "list-group-item text-left " 
\end_layout

\begin_layout Plain Layout

			+ this.props["class"] },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"span",        
\end_layout

\begin_layout Plain Layout

				{ className: "lead" },         
\end_layout

\begin_layout Plain Layout

				this.getChild()       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SidePanelFooter.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SidePanelFooter = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<div className="list-group-item text-center sidepanel-footer">      
 
\end_layout

\begin_layout Plain Layout

				<span>Created by <b><a href="#">
\end_layout

\begin_layout Plain Layout

					{this.getChild()}
\end_layout

\begin_layout Plain Layout

				</a></b></span>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SidePanelFooter.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var SidePanelFooter = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "SidePanelFooter",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getChild: function getChild() {    
\end_layout

\begin_layout Plain Layout

		return this.props.children;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {    
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "list-group-item text-center sidepanel-footer" },      
 
\end_layout

\begin_layout Plain Layout

			React.createElement(        
\end_layout

\begin_layout Plain Layout

				"span",         
\end_layout

\begin_layout Plain Layout

				null,         
\end_layout

\begin_layout Plain Layout

				"Created by ",         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"b",           
\end_layout

\begin_layout Plain Layout

					null,           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"a",             
\end_layout

\begin_layout Plain Layout

						{ href: "#" },             
\end_layout

\begin_layout Plain Layout

						this.getChild()           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SliderGroup.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SliderGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderSlides: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map( function(article, key){       
\end_layout

\begin_layout Plain Layout

			return (           
\end_layout

\begin_layout Plain Layout

				<Slider 
\end_layout

\begin_layout Plain Layout

					link={article.link} key={key} index={key} 
\end_layout

\begin_layout Plain Layout

					tags={article.tags} title={article.title}>
\end_layout

\begin_layout Plain Layout

					{article.content.paragraph}
\end_layout

\begin_layout Plain Layout

				</Slider>         
\end_layout

\begin_layout Plain Layout

			);   
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function (){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className="col-md-12 panel-ad">       
\end_layout

\begin_layout Plain Layout

				<div id="carousel-recent" 
\end_layout

\begin_layout Plain Layout

					className="carousel slide collapse navbar-collapse" 
\end_layout

\begin_layout Plain Layout

					data-ride="carousel">         
\end_layout

\begin_layout Plain Layout

					<div className="carousel-inner" role="listbox">           
\end_layout

\begin_layout Plain Layout

						{this.renderSlides()}         
\end_layout

\begin_layout Plain Layout

					</div>         
\end_layout

\begin_layout Plain Layout

					<a className="left carousel-control" 
\end_layout

\begin_layout Plain Layout

						href="#carousel-recent" role="button" 
\end_layout

\begin_layout Plain Layout

						data-slide="prev">           
\end_layout

\begin_layout Plain Layout

						<span className="glyphicon 
\end_layout

\begin_layout Plain Layout

							glyphicon-chevron-left" 
\end_layout

\begin_layout Plain Layout

							aria-hidden="true"></span>           
\end_layout

\begin_layout Plain Layout

						<span className="sr-only">Previous</span>         
\end_layout

\begin_layout Plain Layout

					</a>         
\end_layout

\begin_layout Plain Layout

					<a className="right carousel-control" 
\end_layout

\begin_layout Plain Layout

						href="#carousel-recent" role="button" 
\end_layout

\begin_layout Plain Layout

						data-slide="next">           
\end_layout

\begin_layout Plain Layout

						<span className="glyphicon 
\end_layout

\begin_layout Plain Layout

							glyphicon-chevron-right" 
\end_layout

\begin_layout Plain Layout

							aria-hidden="true"></span>           
\end_layout

\begin_layout Plain Layout

						<span className="sr-only">Next</span>        
\end_layout

\begin_layout Plain Layout

					</a>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	}  
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SliderGroup.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var SliderGroup = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "SliderGroup",
\end_layout

\begin_layout Plain Layout

	propTypes: {    
\end_layout

\begin_layout Plain Layout

		articles: React.PropTypes.array,    
\end_layout

\begin_layout Plain Layout

		tags: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderSlides: function renderSlides() {     
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function (article, key) {       
\end_layout

\begin_layout Plain Layout

			return React.createElement(        
\end_layout

\begin_layout Plain Layout

				Slider,         
\end_layout

\begin_layout Plain Layout

				{ link: article.link, key: key, index: key,
\end_layout

\begin_layout Plain Layout

				tags: article.tags, title: article.title },         
\end_layout

\begin_layout Plain Layout

				article.content.paragraph       
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "col-md-12 panel-ad" },      
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ id: "carousel-recent", 
\end_layout

\begin_layout Plain Layout

				className: "carousel slide collapse navbar-collapse", 
\end_layout

\begin_layout Plain Layout

				"data-ride": "carousel" },        
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "carousel-inner", role: "listbox" },           
\end_layout

\begin_layout Plain Layout

					this.renderSlides()         
\end_layout

\begin_layout Plain Layout

				),         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"a",           
\end_layout

\begin_layout Plain Layout

					{ className: "left carousel-control", 
\end_layout

\begin_layout Plain Layout

					href: "#carousel-recent", role: "button", 
\end_layout

\begin_layout Plain Layout

					"data-slide": "prev" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(
\end_layout

\begin_layout Plain Layout

						"span", 
\end_layout

\begin_layout Plain Layout

						{ className: "glyphicon glyphicon-chevron-left", 
\end_layout

\begin_layout Plain Layout

						"aria-hidden": "true" }
\end_layout

\begin_layout Plain Layout

					),           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"span",             
\end_layout

\begin_layout Plain Layout

						{ className: "sr-only" },             
\end_layout

\begin_layout Plain Layout

						"Previous"           
\end_layout

\begin_layout Plain Layout

					)        
\end_layout

\begin_layout Plain Layout

				),         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"a",           
\end_layout

\begin_layout Plain Layout

					{ className: "right carousel-control", 
\end_layout

\begin_layout Plain Layout

					href: "#carousel-recent", role: "button", 
\end_layout

\begin_layout Plain Layout

					"data-slide": "next" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(
\end_layout

\begin_layout Plain Layout

						"span", 
\end_layout

\begin_layout Plain Layout

						{ className: "glyphicon glyphicon-chevron-right", 
\end_layout

\begin_layout Plain Layout

						"aria-hidden": "true" }
\end_layout

\begin_layout Plain Layout

					),           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"span",             
\end_layout

\begin_layout Plain Layout

						{ className: "sr-only" },             
\end_layout

\begin_layout Plain Layout

						"Next"           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			)    
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Slider.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Slider = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	getChild: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.children; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTags: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map( function(tag, key){             
\end_layout

\begin_layout Plain Layout

			return (               
\end_layout

\begin_layout Plain Layout

				<li key={key}>
\end_layout

\begin_layout Plain Layout

					<Badge type={tag.type}>{tag.title}</Badge>
\end_layout

\begin_layout Plain Layout

				</li>       
\end_layout

\begin_layout Plain Layout

			);            
\end_layout

\begin_layout Plain Layout

		}) 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className={this.props.index == 0? "item active": "item"}>       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<div className="col-sm-12">           
\end_layout

\begin_layout Plain Layout

						<div className="panel panel-default">             
\end_layout

\begin_layout Plain Layout

							<div className="panel-body">               
\end_layout

\begin_layout Plain Layout

								<div className="media">                 
\end_layout

\begin_layout Plain Layout

									<div className="media-body text-justify"> 
\end_layout

\begin_layout Plain Layout

										<h4 className="media-heading 
\end_layout

\begin_layout Plain Layout

											text-left lead">
\end_layout

\begin_layout Plain Layout

											{this.props.title}                      
\end_layout

\begin_layout Plain Layout

											<ul className="list-inline">    
\end_layout

\begin_layout Plain Layout

												{this.renderTags()}                 
\end_layout

\begin_layout Plain Layout

											</ul>                   
\end_layout

\begin_layout Plain Layout

										</h4>                   
\end_layout

\begin_layout Plain Layout

										<ul className="list-unstyled">              
\end_layout

\begin_layout Plain Layout

											<Paragraph 											type={"short"}>
\end_layout

\begin_layout Plain Layout

												{this.getChild()}
\end_layout

\begin_layout Plain Layout

											</Paragraph>                   
\end_layout

\begin_layout Plain Layout

										</ul>                 
\end_layout

\begin_layout Plain Layout

									</div>                 
\end_layout

\begin_layout Plain Layout

									<a href={this.props.link}>Read more...</a> 
\end_layout

\begin_layout Plain Layout

								</div>             
\end_layout

\begin_layout Plain Layout

							</div>           
\end_layout

\begin_layout Plain Layout

						</div>         
\end_layout

\begin_layout Plain Layout

					</div>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Slider.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Slider = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Slider",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		tags: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		link: React.PropTypes.string,     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getChild: function getChild() {     
\end_layout

\begin_layout Plain Layout

		return this.props.children;   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderTags: function renderTags() {     
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map(function (tag, key) {       
\end_layout

\begin_layout Plain Layout

			return React.createElement(         
\end_layout

\begin_layout Plain Layout

				"li",        
\end_layout

\begin_layout Plain Layout

				{ key: key },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					Badge,           
\end_layout

\begin_layout Plain Layout

					{ type: tag.type },          
\end_layout

\begin_layout Plain Layout

					tag.title         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: this.props.index == 0 ? 
\end_layout

\begin_layout Plain Layout

			"item active" : "item" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "row" },        
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "col-sm-12" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"div",             
\end_layout

\begin_layout Plain Layout

						{ className: "panel panel-default" },             
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"div",               
\end_layout

\begin_layout Plain Layout

							{ className: "panel-body" },               
\end_layout

\begin_layout Plain Layout

							React.createElement(                 
\end_layout

\begin_layout Plain Layout

								"div",                
\end_layout

\begin_layout Plain Layout

								{ className: "media" },                
\end_layout

\begin_layout Plain Layout

								React.createElement(                   
\end_layout

\begin_layout Plain Layout

									"div",                  
\end_layout

\begin_layout Plain Layout

									{ className: "media-body text-justify" },   
\end_layout

\begin_layout Plain Layout

									React.createElement(                     
\end_layout

\begin_layout Plain Layout

										"h4",                     
\end_layout

\begin_layout Plain Layout

										{ className: "media-heading text-left lead" },
\end_layout

\begin_layout Plain Layout

										this.props.title,                     
\end_layout

\begin_layout Plain Layout

										React.createElement(                       
\end_layout

\begin_layout Plain Layout

											"ul",                      
\end_layout

\begin_layout Plain Layout

											{ className: "list-inline" },  
\end_layout

\begin_layout Plain Layout

											 this.renderTags()                    
\end_layout

\begin_layout Plain Layout

										)                  
\end_layout

\begin_layout Plain Layout

									),                   
\end_layout

\begin_layout Plain Layout

									React.createElement(                     
\end_layout

\begin_layout Plain Layout

										"ul",                     
\end_layout

\begin_layout Plain Layout

										{ className: "list-unstyled" },     
\end_layout

\begin_layout Plain Layout

										React.createElement(                       
\end_layout

\begin_layout Plain Layout

											Paragraph,                       
\end_layout

\begin_layout Plain Layout

											{ type: "short" },                       
\end_layout

\begin_layout Plain Layout

											this.getChild()                     
\end_layout

\begin_layout Plain Layout

										)                   
\end_layout

\begin_layout Plain Layout

									)                 
\end_layout

\begin_layout Plain Layout

								),                
\end_layout

\begin_layout Plain Layout

								React.createElement(                   
\end_layout

\begin_layout Plain Layout

									"a",                   
\end_layout

\begin_layout Plain Layout

									{ href: this.props.link },                  
\end_layout

\begin_layout Plain Layout

									"Read more..."                
\end_layout

\begin_layout Plain Layout

								)               
\end_layout

\begin_layout Plain Layout

							)             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SmallArticleGroup.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SmallArticleGroup = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.array,   
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		collapse: React.PropTypes.bool 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderArticles: function(){   
\end_layout

\begin_layout Plain Layout

		var type = this.props.type;   
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function(article, key){             
\end_layout

\begin_layout Plain Layout

			if(!type){                 
\end_layout

\begin_layout Plain Layout

			return 
\end_layout

\begin_layout Plain Layout

				<SmallArticle key={key} link={article.link} 
\end_layout

\begin_layout Plain Layout

					title={article.title} 
\end_layout

\begin_layout Plain Layout

					source={article.source}></SmallArticle>              
\end_layout

\begin_layout Plain Layout

			}else if(key < 3){                 
\end_layout

\begin_layout Plain Layout

			return 
\end_layout

\begin_layout Plain Layout

				<SmallArticle key={key} link={article.link} 
\end_layout

\begin_layout Plain Layout

					title={article.title} 
\end_layout

\begin_layout Plain Layout

					source={article.source}></SmallArticle>              
\end_layout

\begin_layout Plain Layout

			}           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.collapse? "collapse navbar-collapse" : ""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (         
\end_layout

\begin_layout Plain Layout

			<div className={"panel panel-small-article " + this.checkIsCollapse()}>
\end_layout

\begin_layout Plain Layout

				<div className="panel-body panel-body-content">             
\end_layout

\begin_layout Plain Layout

					<ul className="list-group text-center">                 
\end_layout

\begin_layout Plain Layout

						{this.renderArticles()}             
\end_layout

\begin_layout Plain Layout

					</ul>           
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SmallArticleGroup.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var SmallArticleGroup = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "SmallArticleGroup",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		articles: React.PropTypes.array,     
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string,     
\end_layout

\begin_layout Plain Layout

		collapse: React.PropTypes.bool   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderArticles: function renderArticles() {     
\end_layout

\begin_layout Plain Layout

		var type = this.props.type;     
\end_layout

\begin_layout Plain Layout

		return this.props.articles.map(function (article, key) {       
\end_layout

\begin_layout Plain Layout

			if (!type) {         
\end_layout

\begin_layout Plain Layout

				return React.createElement(
\end_layout

\begin_layout Plain Layout

					SmallArticle, 
\end_layout

\begin_layout Plain Layout

					{ key: key, link: article.link, 
\end_layout

\begin_layout Plain Layout

					title: article.title, source: article.source }
\end_layout

\begin_layout Plain Layout

				);       
\end_layout

\begin_layout Plain Layout

			} else if (key < 3) {         
\end_layout

\begin_layout Plain Layout

				return React.createElement(
\end_layout

\begin_layout Plain Layout

					SmallArticle, 
\end_layout

\begin_layout Plain Layout

					{ key: key, link: article.link, 
\end_layout

\begin_layout Plain Layout

					title: article.title, source: article.source }
\end_layout

\begin_layout Plain Layout

				);       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkIsCollapse: function checkIsCollapse() {     
\end_layout

\begin_layout Plain Layout

		return this.props.collapse ? "collapse navbar-collapse" : "";   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "panel panel-small-article " + 
\end_layout

\begin_layout Plain Layout

			this.checkIsCollapse() },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "panel-body panel-body-content" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"ul",           
\end_layout

\begin_layout Plain Layout

					{ className: "list-group text-center" },           
\end_layout

\begin_layout Plain Layout

					this.renderArticles()         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SmallArticle.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var SmallArticle = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		link : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		title : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		source : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<li className="list-group-item small-article">       
\end_layout

\begin_layout Plain Layout

				<ul className="list-inline">         
\end_layout

\begin_layout Plain Layout

					<li>           
\end_layout

\begin_layout Plain Layout

						<div className="media">             
\end_layout

\begin_layout Plain Layout

							<div className="media-body text-justify">               
\end_layout

\begin_layout Plain Layout

								<h4 className="media-heading text-left">            
\end_layout

\begin_layout Plain Layout

									<a href={this.props.link}>
\end_layout

\begin_layout Plain Layout

										{this.props.title}
\end_layout

\begin_layout Plain Layout

									</a>    
\end_layout

\begin_layout Plain Layout

								</h4>              
\end_layout

\begin_layout Plain Layout

								<blockquote 
\end_layout

\begin_layout Plain Layout

									className="block-small-article">        
\end_layout

\begin_layout Plain Layout

									<footer>
\end_layout

\begin_layout Plain Layout

										Author : 
\end_layout

\begin_layout Plain Layout

										<cite>
\end_layout

\begin_layout Plain Layout

											{this.props.source}
\end_layout

\begin_layout Plain Layout

										</cite>
\end_layout

\begin_layout Plain Layout

									</footer>               
\end_layout

\begin_layout Plain Layout

								</blockquote>             
\end_layout

\begin_layout Plain Layout

							</div>           
\end_layout

\begin_layout Plain Layout

						</div>         
\end_layout

\begin_layout Plain Layout

					</li>       
\end_layout

\begin_layout Plain Layout

				</ul>     
\end_layout

\begin_layout Plain Layout

			</li>   
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
SmallArticle.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var SmallArticle = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "SmallArticle",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		link: React.PropTypes.string,     
\end_layout

\begin_layout Plain Layout

		title: React.PropTypes.string,     
\end_layout

\begin_layout Plain Layout

		source: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"li",       
\end_layout

\begin_layout Plain Layout

			{ className: "list-group-item small-article" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"ul",         
\end_layout

\begin_layout Plain Layout

				{ className: "list-inline" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"li",           
\end_layout

\begin_layout Plain Layout

					null,           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"div",             
\end_layout

\begin_layout Plain Layout

						{ className: "media" },             
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"div",               
\end_layout

\begin_layout Plain Layout

							{ className: "media-body text-justify" },              
\end_layout

\begin_layout Plain Layout

							React.createElement(                 
\end_layout

\begin_layout Plain Layout

								"h4",                 
\end_layout

\begin_layout Plain Layout

								{ className: "media-heading text-left" },                
\end_layout

\begin_layout Plain Layout

								React.createElement(                   
\end_layout

\begin_layout Plain Layout

									"a",                  
\end_layout

\begin_layout Plain Layout

									{ href: this.props.link },                   
\end_layout

\begin_layout Plain Layout

									this.props.title                 
\end_layout

\begin_layout Plain Layout

								)               
\end_layout

\begin_layout Plain Layout

							),               
\end_layout

\begin_layout Plain Layout

							React.createElement(                
\end_layout

\begin_layout Plain Layout

								"blockquote",                 
\end_layout

\begin_layout Plain Layout

								{ className: "block-small-article" },                 
\end_layout

\begin_layout Plain Layout

								React.createElement(                   
\end_layout

\begin_layout Plain Layout

									"footer",                   
\end_layout

\begin_layout Plain Layout

									null,                   
\end_layout

\begin_layout Plain Layout

									"Author : ",                  
\end_layout

\begin_layout Plain Layout

									React.createElement(                    
\end_layout

\begin_layout Plain Layout

										"cite",                     
\end_layout

\begin_layout Plain Layout

										null,                     
\end_layout

\begin_layout Plain Layout

										this.props.source                   
\end_layout

\begin_layout Plain Layout

									)                 
\end_layout

\begin_layout Plain Layout

								)               
\end_layout

\begin_layout Plain Layout

							)             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Badge.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Badge = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes: {   
\end_layout

\begin_layout Plain Layout

		type : React.PropTypes.string,   
\end_layout

\begin_layout Plain Layout

		children : React.PropTypes.string, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<span className={"badge badge-"+this.props.type}>
\end_layout

\begin_layout Plain Layout

				{this.props.children}
\end_layout

\begin_layout Plain Layout

			</span>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Badge.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Badge = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Badge",
\end_layout

\begin_layout Plain Layout

	propTypes: {    
\end_layout

\begin_layout Plain Layout

		type: React.PropTypes.string,     
\end_layout

\begin_layout Plain Layout

		children: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"span",       
\end_layout

\begin_layout Plain Layout

			{ className: "badge badge-" + this.props.type },       
\end_layout

\begin_layout Plain Layout

			this.props.children     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Headline.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Headline = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(       
\end_layout

\begin_layout Plain Layout

			<p className="lead">         
\end_layout

\begin_layout Plain Layout

				<mark>Daily</mark> news about         
\end_layout

\begin_layout Plain Layout

				<mark>Cod</mark>e and An         
\end_layout

\begin_layout Plain Layout

				<mark>ime</mark>       
\end_layout

\begin_layout Plain Layout

			</p>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Headline.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Headline = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Headline",
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"p",      
\end_layout

\begin_layout Plain Layout

			{ className: "lead" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(        
\end_layout

\begin_layout Plain Layout

				"mark",         
\end_layout

\begin_layout Plain Layout

				null,         
\end_layout

\begin_layout Plain Layout

				"Daily"      
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			" news about",      
\end_layout

\begin_layout Plain Layout

			React.createElement(        
\end_layout

\begin_layout Plain Layout

				"mark",         
\end_layout

\begin_layout Plain Layout

				null,         
\end_layout

\begin_layout Plain Layout

				"Cod"       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			"e and An",       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"mark",         
\end_layout

\begin_layout Plain Layout

				null,        
\end_layout

\begin_layout Plain Layout

				"ime"      
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Title.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Title = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes: {   
\end_layout

\begin_layout Plain Layout

		navbar : React.PropTypes.bool, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	checkIsBrand: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.navbar? "navbar-brand" : ""; 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function (){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<h3 className={"lead " + this.checkIsBrand()}>
\end_layout

\begin_layout Plain Layout

				<strong>Daily<mark>Codime</mark></strong>
\end_layout

\begin_layout Plain Layout

			</h3>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Title.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Title = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Title",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		navbar: React.PropTypes.bool   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	checkIsBrand: function checkIsBrand() {     
\end_layout

\begin_layout Plain Layout

		return this.props.navbar ? "navbar-brand" : "";  
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"h3",       
\end_layout

\begin_layout Plain Layout

			{ className: "lead " + this.checkIsBrand() },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"strong",        
\end_layout

\begin_layout Plain Layout

				null,         
\end_layout

\begin_layout Plain Layout

				"Daily",        
\end_layout

\begin_layout Plain Layout

				React.createElement(          
\end_layout

\begin_layout Plain Layout

					"mark",           
\end_layout

\begin_layout Plain Layout

					null,           
\end_layout

\begin_layout Plain Layout

					"Codime"         
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			)    
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
TagPanel.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var TagPanel = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		tags : React.PropTypes.array, 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderTags: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map( function(tag, key){             
\end_layout

\begin_layout Plain Layout

			return(             
\end_layout

\begin_layout Plain Layout

				<li key={key}>               
\end_layout

\begin_layout Plain Layout

					<a href={tag.link}>                 
\end_layout

\begin_layout Plain Layout

					<Badge type={tag.type}>{tag.title}</Badge>               
\end_layout

\begin_layout Plain Layout

					</a>             
\end_layout

\begin_layout Plain Layout

				</li>             
\end_layout

\begin_layout Plain Layout

			);           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return(     
\end_layout

\begin_layout Plain Layout

			<div className="panel panel-default">       
\end_layout

\begin_layout Plain Layout

				<div className="panel-body panel-body-content">         
\end_layout

\begin_layout Plain Layout

					<ul className="list-group text-center">           
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item badges">             
\end_layout

\begin_layout Plain Layout

							<ul className="list-inline">               
\end_layout

\begin_layout Plain Layout

								{this.renderTags()}             
\end_layout

\begin_layout Plain Layout

							</ul>           
\end_layout

\begin_layout Plain Layout

						</li>         
\end_layout

\begin_layout Plain Layout

					</ul>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
TagPanel.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var TagPanel = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "TagPanel",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		tags: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderTags: function renderTags() {     
\end_layout

\begin_layout Plain Layout

		return this.props.tags.map(function (tag, key) {       
\end_layout

\begin_layout Plain Layout

			return React.createElement(         
\end_layout

\begin_layout Plain Layout

				"li",         
\end_layout

\begin_layout Plain Layout

				{ key: key },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"a",           
\end_layout

\begin_layout Plain Layout

					{ href: tag.link },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						Badge,             
\end_layout

\begin_layout Plain Layout

						{ type: tag.type },             
\end_layout

\begin_layout Plain Layout

						tag.title           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			);     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "panel panel-default" },      
\end_layout

\begin_layout Plain Layout

			React.createElement(        
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "panel-body panel-body-content" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"ul",           
\end_layout

\begin_layout Plain Layout

					{ className: "list-group text-center" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"li",             
\end_layout

\begin_layout Plain Layout

						{ className: "list-group-item badges" },             
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"ul",               
\end_layout

\begin_layout Plain Layout

							{ className: "list-inline" },               
\end_layout

\begin_layout Plain Layout

							this.renderTags()             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)    
\end_layout

\begin_layout Plain Layout

		);  
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Pagination.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Pagination = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		page : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	renderPages: function(){   
\end_layout

\begin_layout Plain Layout

		return this.props.pages.map( function(page, key){             
\end_layout

\begin_layout Plain Layout

			return (               
\end_layout

\begin_layout Plain Layout

				<li key={key}><a href={page[1]}>{page[0]}</a></li>             
\end_layout

\begin_layout Plain Layout

			);           
\end_layout

\begin_layout Plain Layout

		}); 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<nav className="panel-pagination">       
\end_layout

\begin_layout Plain Layout

				<ul className="pagination">        
\end_layout

\begin_layout Plain Layout

					<li>           
\end_layout

\begin_layout Plain Layout

						<a href="#" aria-label="Previous">             
\end_layout

\begin_layout Plain Layout

							<span aria-hidden="true">&laquo;</span>           
\end_layout

\begin_layout Plain Layout

						</a>         
\end_layout

\begin_layout Plain Layout

					</li>         
\end_layout

\begin_layout Plain Layout

					{this.renderPages()}         
\end_layout

\begin_layout Plain Layout

					<li>           
\end_layout

\begin_layout Plain Layout

						<a href="#" aria-label="Next">             
\end_layout

\begin_layout Plain Layout

							<span aria-hidden="true">&raquo;</span>           
\end_layout

\begin_layout Plain Layout

						</a>         
\end_layout

\begin_layout Plain Layout

					</li>       
\end_layout

\begin_layout Plain Layout

				</ul>     
\end_layout

\begin_layout Plain Layout

			</nav>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Pagination.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Pagination = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Pagination",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		page: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	renderPages: function renderPages() {     
\end_layout

\begin_layout Plain Layout

		return this.props.pages.map(function (page, key) {      
\end_layout

\begin_layout Plain Layout

			return React.createElement(         
\end_layout

\begin_layout Plain Layout

				"li",         
\end_layout

\begin_layout Plain Layout

				{ key: key },        
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"a",          
\end_layout

\begin_layout Plain Layout

					{ href: page[1] },           
\end_layout

\begin_layout Plain Layout

					page[0]        
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			);    
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {    
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"nav",      
\end_layout

\begin_layout Plain Layout

			{ className: "panel-pagination" },      
\end_layout

\begin_layout Plain Layout

			React.createElement(        
\end_layout

\begin_layout Plain Layout

				"ul",        
\end_layout

\begin_layout Plain Layout

				{ className: "pagination" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"li",           
\end_layout

\begin_layout Plain Layout

					null,           
\end_layout

\begin_layout Plain Layout

					React.createElement(            
\end_layout

\begin_layout Plain Layout

						"a",            
\end_layout

\begin_layout Plain Layout

						{ href: "#", "aria-label": "Previous" },             
\end_layout

\begin_layout Plain Layout

						React.createElement(              
\end_layout

\begin_layout Plain Layout

							"span",              
\end_layout

\begin_layout Plain Layout

							{ "aria-hidden": "true" },               
\end_layout

\begin_layout Plain Layout

							"«"             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)        
\end_layout

\begin_layout Plain Layout

				),         
\end_layout

\begin_layout Plain Layout

				this.renderPages(),         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"li",          
\end_layout

\begin_layout Plain Layout

					null,          
\end_layout

\begin_layout Plain Layout

					React.createElement(            
\end_layout

\begin_layout Plain Layout

						"a",             
\end_layout

\begin_layout Plain Layout

						{ href: "#", "aria-label": "Next" },            
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"span",              
\end_layout

\begin_layout Plain Layout

							{ "aria-hidden": "true" },              
\end_layout

\begin_layout Plain Layout

							"»"             
\end_layout

\begin_layout Plain Layout

						)          
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)    
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Footer.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Footer = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		return (       
\end_layout

\begin_layout Plain Layout

			<nav className="navbar-fixed-bottom panel-footer-mobile down-collapse">
  
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid text-center">           
\end_layout

\begin_layout Plain Layout

					<ul className="list-group">             
\end_layout

\begin_layout Plain Layout

						<li className="list-group-item">               
\end_layout

\begin_layout Plain Layout

							<span>Created by <b><a href="#">Codime</a></b></span>    
\end_layout

\begin_layout Plain Layout

						</li>           
\end_layout

\begin_layout Plain Layout

					</ul>         
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

			</nav>     
\end_layout

\begin_layout Plain Layout

		);     
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Footer.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Footer = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Footer",
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"nav",       
\end_layout

\begin_layout Plain Layout

			{ className: "navbar-fixed-bottom panel-footer-mobile down-collapse"
 },
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "container-fluid text-center" },        
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"ul",          
\end_layout

\begin_layout Plain Layout

					{ className: "list-group" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(            
\end_layout

\begin_layout Plain Layout

						"li",             
\end_layout

\begin_layout Plain Layout

						{ className: "list-group-item" },            
\end_layout

\begin_layout Plain Layout

						React.createElement(              
\end_layout

\begin_layout Plain Layout

							"span",               
\end_layout

\begin_layout Plain Layout

							null,               
\end_layout

\begin_layout Plain Layout

							"Created by ",               
\end_layout

\begin_layout Plain Layout

							React.createElement(                 
\end_layout

\begin_layout Plain Layout

								"b",                
\end_layout

\begin_layout Plain Layout

								null,                
\end_layout

\begin_layout Plain Layout

								React.createElement(                   
\end_layout

\begin_layout Plain Layout

									"a",                   
\end_layout

\begin_layout Plain Layout

									{ href: "#" },                   
\end_layout

\begin_layout Plain Layout

									"Codime"                 
\end_layout

\begin_layout Plain Layout

								)              
\end_layout

\begin_layout Plain Layout

							)             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Index.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Index = React.createClass({   
\end_layout

\begin_layout Plain Layout

	propTypes:{     
\end_layout

\begin_layout Plain Layout

		source : React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getResources: function(){     
\end_layout

\begin_layout Plain Layout

		$.ajax({url: this.props.source,dataType: 'json',cache: false,       
\end_layout

\begin_layout Plain Layout

			success: function(data) {
\end_layout

\begin_layout Plain Layout

				this.setState({resources: data});
\end_layout

\begin_layout Plain Layout

			}.bind(this),  
\end_layout

\begin_layout Plain Layout

			error: function(xhr, status, err) {
\end_layout

\begin_layout Plain Layout

				console.error(this.props.source, status, err.toString());
\end_layout

\begin_layout Plain Layout

			}.bind(this)     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getInitialState: function() {     
\end_layout

\begin_layout Plain Layout

		return {resources: {"page" : {"navbarCollapse" : false,"navbarRight" :
 			false,"navbarLeft" : false,"navbarForm" : false},"menu" : {"left" :
 			[[]],"right" : [[]],},"tags" : [{"title" : "","link" : "","type" : 			""}],"
pagination" : [[]],"articles" : {"type" : "","data" : [{"title" : 			"","tags"
 : [{"title" : "","link" : "","type" : ""}],"source" : 			"","link" : "","conten
t" :{"image" :"","video" : "","paragraph" : 			[]}}],},}
\end_layout

\begin_layout Plain Layout

		};   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	componentDidMount: function() {     
\end_layout

\begin_layout Plain Layout

		this.getResources();     
\end_layout

\begin_layout Plain Layout

		setInterval(this.getResources, 2000);   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function () {     
\end_layout

\begin_layout Plain Layout

		var json = this.state.resources;     
\end_layout

\begin_layout Plain Layout

		return (       
\end_layout

\begin_layout Plain Layout

			<div>       
\end_layout

\begin_layout Plain Layout

				<SidePanel 
\end_layout

\begin_layout Plain Layout

					type={json.articles.type} 
\end_layout

\begin_layout Plain Layout

					articles={json.articles.data} 
\end_layout

\begin_layout Plain Layout

					tags={json.tags} 
\end_layout

\begin_layout Plain Layout

					collapse={true}>
\end_layout

\begin_layout Plain Layout

				</SidePanel>         
\end_layout

\begin_layout Plain Layout

				<Navbar 
\end_layout

\begin_layout Plain Layout

					menus={json.menus} 
\end_layout

\begin_layout Plain Layout

					page={json.page} 
\end_layout

\begin_layout Plain Layout

					addMargin={true} 
\end_layout

\begin_layout Plain Layout

					title={false} 
\end_layout

\begin_layout Plain Layout

					active={json.page.active}>
\end_layout

\begin_layout Plain Layout

				</Navbar>         
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid">           
\end_layout

\begin_layout Plain Layout

					<div className="row">             
\end_layout

\begin_layout Plain Layout

						<div className="col-lg-8 col-lg-offset-4 full-width">   
\end_layout

\begin_layout Plain Layout

							<IndexBody 
\end_layout

\begin_layout Plain Layout

								articles={json.articles} 
\end_layout

\begin_layout Plain Layout

								pagination={json.pagination}>
\end_layout

\begin_layout Plain Layout

							</IndexBody>    
\end_layout

\begin_layout Plain Layout

						</div>          
\end_layout

\begin_layout Plain Layout

					</div>         
\end_layout

\begin_layout Plain Layout

				</div>         
\end_layout

\begin_layout Plain Layout

				<Footer></Footer>       
\end_layout

\begin_layout Plain Layout

			</div>     
\end_layout

\begin_layout Plain Layout

		);  
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Index.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Index = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Index",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		source: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getResources: function getResources() {     
\end_layout

\begin_layout Plain Layout

		$.ajax({ url: this.props.source, dataType: 'json', cache: false,       
\end_layout

\begin_layout Plain Layout

			success: (function (data) {         
\end_layout

\begin_layout Plain Layout

				this.setState({ resources: data });       
\end_layout

\begin_layout Plain Layout

			}).bind(this),       
\end_layout

\begin_layout Plain Layout

			error: (function (xhr, status, err) {         
\end_layout

\begin_layout Plain Layout

				console.error(this.props.source, status, err.toString());       
\end_layout

\begin_layout Plain Layout

			}).bind(this)     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getInitialState: function getInitialState() {     
\end_layout

\begin_layout Plain Layout

	return { resources: { "page": { "navbarCollapse": false, "navbarRight":
 false, 		"navbarLeft": false, "navbarForm": false }, "menu": { "left":
 [[]], "right": 		[[]] }, "tags": [{ "title": "", "link": "", "type": ""
 }], "pagination": [[]], 		"articles": { "type": "", "data": [{ "title":
 "", "tags": [{ "title": "", 		"link": "", "type": "" }], "source": "",
 "link": "", "content": { "image": "", 		"video": "", "paragraph": [] }
 }] } }};   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	componentDidMount: function componentDidMount() {     
\end_layout

\begin_layout Plain Layout

		this.getResources();     
\end_layout

\begin_layout Plain Layout

		setInterval(this.getResources, 2000);   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		var json = this.state.resources;     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			null,       
\end_layout

\begin_layout Plain Layout

			React.createElement(
\end_layout

\begin_layout Plain Layout

				SidePanel, 
\end_layout

\begin_layout Plain Layout

				{ type: json.articles.type, 
\end_layout

\begin_layout Plain Layout

				articles: json.articles.data, 
\end_layout

\begin_layout Plain Layout

				tags: json.tags, collapse: true }
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(
\end_layout

\begin_layout Plain Layout

				Navbar, 
\end_layout

\begin_layout Plain Layout

				{ menus: json.menus, page: json.page, 
\end_layout

\begin_layout Plain Layout

				addMargin: true, title: false, 
\end_layout

\begin_layout Plain Layout

				active: json.page.active }
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "container-fluid" },        
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "row" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"div",             
\end_layout

\begin_layout Plain Layout

						{ className: "col-lg-8 col-lg-offset-4 full-width" },            
 
\end_layout

\begin_layout Plain Layout

						React.createElement(
\end_layout

\begin_layout Plain Layout

							IndexBody, 
\end_layout

\begin_layout Plain Layout

							{ articles: json.articles, 
\end_layout

\begin_layout Plain Layout

							pagination: json.pagination }
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)        
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(
\end_layout

\begin_layout Plain Layout

				Footer, 
\end_layout

\begin_layout Plain Layout

				null
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
IndexBody.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var IndexBody = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		articles : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		pagination : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className="container-fluid panel-content-container">       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<SliderGroup articles={this.props.articles.data}>
\end_layout

\begin_layout Plain Layout

					</SliderGroup>
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<ArticleGroup 
\end_layout

\begin_layout Plain Layout

						articles={this.props.articles.data} 
\end_layout

\begin_layout Plain Layout

						type={this.props.articles.type} 
\end_layout

\begin_layout Plain Layout

						linker={this.props.articles.linker} 
\end_layout

\begin_layout Plain Layout

						linkMore={true}/>       
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

				<div className="row">         
\end_layout

\begin_layout Plain Layout

					<div className="col-md-8 col-md-offset-2 text-center">         
\end_layout

\begin_layout Plain Layout

						<Pagination pages={this.props.pagination}>
\end_layout

\begin_layout Plain Layout

						</Pagination> 
\end_layout

\begin_layout Plain Layout

					</div>       
\end_layout

\begin_layout Plain Layout

				</div>     
\end_layout

\begin_layout Plain Layout

			</div>   
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
IndexBody.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var IndexBody = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "IndexBody",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		articles: React.PropTypes.object,     
\end_layout

\begin_layout Plain Layout

		pagination: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "container-fluid panel-content-container" },       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "row" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(
\end_layout

\begin_layout Plain Layout

					SliderGroup, 
\end_layout

\begin_layout Plain Layout

					{ articles: this.props.articles.data }
\end_layout

\begin_layout Plain Layout

				)      
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "row" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(
\end_layout

\begin_layout Plain Layout

					ArticleGroup, 
\end_layout

\begin_layout Plain Layout

					{ articles: this.props.articles.data, 
\end_layout

\begin_layout Plain Layout

					type: this.props.articles.type, 
\end_layout

\begin_layout Plain Layout

					linker: this.props.articles.linker, 
\end_layout

\begin_layout Plain Layout

					linkMore: true }
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "row" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "col-md-8 col-md-offset-2 text-center" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(
\end_layout

\begin_layout Plain Layout

						Pagination, 
\end_layout

\begin_layout Plain Layout

						{ pages: this.props.pagination }
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Konten.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var Konten = React.createClass({   
\end_layout

\begin_layout Plain Layout

	propTypes:{     
\end_layout

\begin_layout Plain Layout

		source : React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getResources: function(){     
\end_layout

\begin_layout Plain Layout

		$.ajax({url: this.props.source,dataType: 'json',cache: false,       
\end_layout

\begin_layout Plain Layout

			success: function(data) {
\end_layout

\begin_layout Plain Layout

				this.setState({resources: data});
\end_layout

\begin_layout Plain Layout

			}.bind(this), 
\end_layout

\begin_layout Plain Layout

			error: function(xhr, status, err) {
\end_layout

\begin_layout Plain Layout

				console.error(this.props.source, status, err.toString());
\end_layout

\begin_layout Plain Layout

			}.bind(this)     
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getInitialState: function() {     
\end_layout

\begin_layout Plain Layout

		return {resources: {"pagination" : [[]],"page" : {"navbarCollapse" : 			false,
"navbarRight" : false,"navbarLeft" : false,"navbarForm" : 			false,},"tags"
 : [{"title" : "","link" : "","type" : ""}],"menu" : 			{"left" : [[]],"right"
 : [[]],},"article" : {"type" : "","data" : 			[{"title" : "","tags" : [{"title"
 : "","link" : "","type" : 			""}],"source" : "","link" : "","content" :{"image"
 : "","video" : 			"","paragraph" : []}}],},"smallarticles" : {"data" :
 [{"title" : 			"","tags" : [{"title" : "","link" : "","type" : ""}],"source"
 : 			"","link" : "","content" :{"image" : "","video" : "","paragraph" :
 			[]}}],},}
\end_layout

\begin_layout Plain Layout

		};   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	componentDidMount: function() {     
\end_layout

\begin_layout Plain Layout

		var resource = this.props.source;         
\end_layout

\begin_layout Plain Layout

		this.getResources();     
\end_layout

\begin_layout Plain Layout

		setInterval(this.getResources, 2000);   
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render : function (){   
\end_layout

\begin_layout Plain Layout

		var json = this.state.resources;
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

    		<div>       
\end_layout

\begin_layout Plain Layout

				<div className="container-fluid">         
\end_layout

\begin_layout Plain Layout

					<div className="row">           
\end_layout

\begin_layout Plain Layout

						<div className="col-lg-12 full-width">           
\end_layout

\begin_layout Plain Layout

							<Navbar 
\end_layout

\begin_layout Plain Layout

								menus={json.menus} 
\end_layout

\begin_layout Plain Layout

								page={json.page} 
\end_layout

\begin_layout Plain Layout

								addMargin={false} 
\end_layout

\begin_layout Plain Layout

								title={true} 
\end_layout

\begin_layout Plain Layout

								active={json.page.active}>
\end_layout

\begin_layout Plain Layout

							</Navbar>             
\end_layout

\begin_layout Plain Layout

							<div 
\end_layout

\begin_layout Plain Layout

								className="container-fluid 
\end_layout

\begin_layout Plain Layout

									panel-article panel-content-container">
\end_layout

\begin_layout Plain Layout

								<div className="row">            
\end_layout

\begin_layout Plain Layout

									<KontenBody article={json.article}></KontenBody
\end_layout

\begin_layout Plain Layout

									<div className="col-md-5">                   
\end_layout

\begin_layout Plain Layout

									<div 
\end_layout

\begin_layout Plain Layout

										className="panel 
\end_layout

\begin_layout Plain Layout

											panel-default pane-small-article">   
\end_layout

\begin_layout Plain Layout

										<div className="panel-body panel-body-content">
\end_layout

\begin_layout Plain Layout

											<SidePanelHeader>Recent</SidePanelHeader>   
\end_layout

\begin_layout Plain Layout

											<SmallArticleGroup 												articles={json.smallArticles.data}
 
\end_layout

\begin_layout Plain Layout

												collapse={false}>
\end_layout

\begin_layout Plain Layout

											</SmallArticleGroup>                   
\end_layout

\begin_layout Plain Layout

										</div>                   
\end_layout

\begin_layout Plain Layout

									</div>                 
\end_layout

\begin_layout Plain Layout

								</div>               
\end_layout

\begin_layout Plain Layout

							</div>             
\end_layout

\begin_layout Plain Layout

						</div>           
\end_layout

\begin_layout Plain Layout

					</div>         
\end_layout

\begin_layout Plain Layout

				</div>       
\end_layout

\begin_layout Plain Layout

			</div>       
\end_layout

\begin_layout Plain Layout

			<Footer></Footer>     
\end_layout

\begin_layout Plain Layout

		</div> 
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
Konten.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var Konten = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "Konten",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		source: React.PropTypes.string   
\end_layout

\begin_layout Plain Layout

	},  
\end_layout

\begin_layout Plain Layout

	getResources: function getResources() {    
\end_layout

\begin_layout Plain Layout

		$.ajax({ url: this.props.source, dataType: 'json', cache: false,       
\end_layout

\begin_layout Plain Layout

			success: (function (data) {         
\end_layout

\begin_layout Plain Layout

				this.setState({ resources: data });       
\end_layout

\begin_layout Plain Layout

			}).bind(this),       
\end_layout

\begin_layout Plain Layout

			error: (function (xhr, status, err) {        
\end_layout

\begin_layout Plain Layout

				console.error(this.props.source, status, err.toString());       
\end_layout

\begin_layout Plain Layout

			}).bind(this)    
\end_layout

\begin_layout Plain Layout

		});   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	getInitialState: function getInitialState() {     
\end_layout

\begin_layout Plain Layout

		return { resources: { "pagination": [[]], "page": { "navbarCollapse":
 false, 			"navbarRight": false, "navbarLeft": false, "navbarForm": false
 }, "tags": 			[{ "title": "", "link": "", "type": "" }], "menu": { "left":
 [[]], "right": 			[[]] }, "article": { "type": "", "data": [{ "title":
 "", "tags": [{ 			"title": "", "link": "", "type": "" }], "source": "",
 "link": "", 			"content": { "image": "", "video": "", "paragraph": [] }
 }] }, 			"smallarticles": { "data": [{ "title": "", "tags": [{ "title":
 "", "link": 			"", "type": "" }], "source": "", "link": "", "content":
 { "image": "", 			"video": "", "paragraph": [] } }] } } };  
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	componentDidMount: function componentDidMount() {     
\end_layout

\begin_layout Plain Layout

		var resource = this.props.source;     
\end_layout

\begin_layout Plain Layout

		this.getResources();     
\end_layout

\begin_layout Plain Layout

		setInterval(this.getResources, 2000);  
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {   
\end_layout

\begin_layout Plain Layout

		var json = this.state.resources;     
\end_layout

\begin_layout Plain Layout

		return React.createElement(      
\end_layout

\begin_layout Plain Layout

			"div",      
\end_layout

\begin_layout Plain Layout

			null,       
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "container-fluid" },        
\end_layout

\begin_layout Plain Layout

				React.createElement(          
\end_layout

\begin_layout Plain Layout

					"div",         
\end_layout

\begin_layout Plain Layout

					{ className: "row" },          
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"div",             
\end_layout

\begin_layout Plain Layout

						{ className: "col-lg-12 full-width" },             
\end_layout

\begin_layout Plain Layout

						React.createElement(
\end_layout

\begin_layout Plain Layout

							Navbar, 
\end_layout

\begin_layout Plain Layout

							{ menus: json.menus, 
\end_layout

\begin_layout Plain Layout

							page: json.page,
\end_layout

\begin_layout Plain Layout

							addMargin: false, 
\end_layout

\begin_layout Plain Layout

							title: true, active: json.page.active }
\end_layout

\begin_layout Plain Layout

						),             
\end_layout

\begin_layout Plain Layout

						React.createElement(
\end_layout

\begin_layout Plain Layout

							KontenBody, 
\end_layout

\begin_layout Plain Layout

							{ article: json.article, 
\end_layout

\begin_layout Plain Layout

							smallArticles: json.smallarticles.data }
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			),       
\end_layout

\begin_layout Plain Layout

			React.createElement(
\end_layout

\begin_layout Plain Layout

				Footer, 
\end_layout

\begin_layout Plain Layout

				null
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
KontenBody.jsx
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

var KontenBody = React.createClass({ 
\end_layout

\begin_layout Plain Layout

	propTypes : {   
\end_layout

\begin_layout Plain Layout

		article : React.PropTypes.object,   
\end_layout

\begin_layout Plain Layout

		smallArticles : React.PropTypes.array 
\end_layout

\begin_layout Plain Layout

	}, 
\end_layout

\begin_layout Plain Layout

	render: function(){   
\end_layout

\begin_layout Plain Layout

		return (     
\end_layout

\begin_layout Plain Layout

			<div className="col-md-7">           
\end_layout

\begin_layout Plain Layout

				<ArticleGroup 
\end_layout

\begin_layout Plain Layout

					articles={this.props.article.data} 
\end_layout

\begin_layout Plain Layout

					type={this.props.article.type} 
\end_layout

\begin_layout Plain Layout

					linker={this.props.article.linker} 
\end_layout

\begin_layout Plain Layout

					linkMore={false}/>         
\end_layout

\begin_layout Plain Layout

			</div> 
\end_layout

\begin_layout Plain Layout

		); 
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
KontenBody.js
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

"use strict";
\end_layout

\begin_layout Plain Layout

var KontenBody = React.createClass({   
\end_layout

\begin_layout Plain Layout

	displayName: "KontenBody",
\end_layout

\begin_layout Plain Layout

	propTypes: {     
\end_layout

\begin_layout Plain Layout

		article: React.PropTypes.object,     
\end_layout

\begin_layout Plain Layout

		smallArticles: React.PropTypes.array   
\end_layout

\begin_layout Plain Layout

	},   
\end_layout

\begin_layout Plain Layout

	render: function render() {     
\end_layout

\begin_layout Plain Layout

		return React.createElement(       
\end_layout

\begin_layout Plain Layout

			"div",       
\end_layout

\begin_layout Plain Layout

			{ className: "container-fluid panel-article panel-content-container"
 }, 
\end_layout

\begin_layout Plain Layout

			React.createElement(         
\end_layout

\begin_layout Plain Layout

				"div",         
\end_layout

\begin_layout Plain Layout

				{ className: "row" },         
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "col-md-7" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(
\end_layout

\begin_layout Plain Layout

						ArticleGroup, 
\end_layout

\begin_layout Plain Layout

						{ articles: this.props.article.data, 
\end_layout

\begin_layout Plain Layout

						type: this.props.article.type, 
\end_layout

\begin_layout Plain Layout

						linker: this.props.article.linker, 
\end_layout

\begin_layout Plain Layout

						linkMore: false }
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				),        
\end_layout

\begin_layout Plain Layout

				React.createElement(           
\end_layout

\begin_layout Plain Layout

					"div",           
\end_layout

\begin_layout Plain Layout

					{ className: "col-md-5" },           
\end_layout

\begin_layout Plain Layout

					React.createElement(             
\end_layout

\begin_layout Plain Layout

						"div",             
\end_layout

\begin_layout Plain Layout

						{ className: "panel panel-default pane-small-article" },         
    
\end_layout

\begin_layout Plain Layout

						React.createElement(               
\end_layout

\begin_layout Plain Layout

							"div",               
\end_layout

\begin_layout Plain Layout

							{ className: "panel-body panel-body-content" },               
\end_layout

\begin_layout Plain Layout

							React.createElement(                 
\end_layout

\begin_layout Plain Layout

								SidePanelHeader,                 
\end_layout

\begin_layout Plain Layout

								null,                 
\end_layout

\begin_layout Plain Layout

								"Recent"               
\end_layout

\begin_layout Plain Layout

							),               
\end_layout

\begin_layout Plain Layout

							React.createElement(
\end_layout

\begin_layout Plain Layout

								SmallArticleGroup, 
\end_layout

\begin_layout Plain Layout

								{ articles: this.props.smallArticles, collapse: false }
\end_layout

\begin_layout Plain Layout

							)             
\end_layout

\begin_layout Plain Layout

						)           
\end_layout

\begin_layout Plain Layout

					)         
\end_layout

\begin_layout Plain Layout

				)       
\end_layout

\begin_layout Plain Layout

			)     
\end_layout

\begin_layout Plain Layout

		);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

});
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_base.scsss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

body {   
\end_layout

\begin_layout Plain Layout

	background: $body-background;   
\end_layout

\begin_layout Plain Layout

	overflow-x: hidden; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.full-width {   
\end_layout

\begin_layout Plain Layout

	padding: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-content-container {   
\end_layout

\begin_layout Plain Layout

	margin-top: 50px;   
\end_layout

\begin_layout Plain Layout

	margin-left: 1px;  
\end_layout

\begin_layout Plain Layout

	width: 100%;   
\end_layout

\begin_layout Plain Layout

	z-index: 1;   
\end_layout

\begin_layout Plain Layout

	padding-top: 2%;   
\end_layout

\begin_layout Plain Layout

	overflow: auto; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-collapse {   
\end_layout

\begin_layout Plain Layout

	background: $sidepanel-collapse-background;   
\end_layout

\begin_layout Plain Layout

	visibility: hidden;   
\end_layout

\begin_layout Plain Layout

	height: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.lead {   
\end_layout

\begin_layout Plain Layout

	margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	margin-bottom: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

mark {   
\end_layout

\begin_layout Plain Layout

	color: $mark-color;   
\end_layout

\begin_layout Plain Layout

	background-color: $mark-background; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

blockquote {   
\end_layout

\begin_layout Plain Layout

	margin-bottom: 0px;   
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-top: 5px;   
\end_layout

\begin_layout Plain Layout

	footer {     
\end_layout

\begin_layout Plain Layout

		color: $blockquote-footer-color;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.list-group {   
\end_layout

\begin_layout Plain Layout

	margin: 0px;
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.list-group-item {   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px !important;   
\end_layout

\begin_layout Plain Layout

	border: 0px !important;   
\end_layout

\begin_layout Plain Layout

	background: $sidepanel-collapse-background; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_media.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

@media #{$break-xsmall} {   
\end_layout

\begin_layout Plain Layout

	.list-header-collapse-xsmall {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;     
\end_layout

\begin_layout Plain Layout

		max-height: 0px;     
\end_layout

\begin_layout Plain Layout

		padding: 0px;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@media #{$break-small} {   
\end_layout

\begin_layout Plain Layout

	.panel-navbar .navbar-form {     
\end_layout

\begin_layout Plain Layout

		background: none;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.list-header-collapse-xsmall {     
\end_layout

\begin_layout Plain Layout

		visibility: visible;     
\end_layout

\begin_layout Plain Layout

		max-height: none;     
\end_layout

\begin_layout Plain Layout

		padding: 10px 15px 10px 15px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.list-header-collapse-small {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;     
\end_layout

\begin_layout Plain Layout

		max-height: none;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-navbar {     
\end_layout

\begin_layout Plain Layout

		margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-tag, .panel-ad {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;     
\end_layout

\begin_layout Plain Layout

		max-height: 0px;  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-konten .panel-default li img {     
\end_layout

\begin_layout Plain Layout

		visibility: visible;     
\end_layout

\begin_layout Plain Layout

		height: inherit;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@media #{$break-big} {   
\end_layout

\begin_layout Plain Layout

	.navbar-left {    
\end_layout

\begin_layout Plain Layout

	margin-left: 34.5%;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.menu-collapse {     
\end_layout

\begin_layout Plain Layout

		visibility: hidden;     
\end_layout

\begin_layout Plain Layout

		width: 0px;     
\end_layout

\begin_layout Plain Layout

		height: 0px;  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-sidepanel {     
\end_layout

\begin_layout Plain Layout

		box-shadow: 0px 0px 2px 0.3px rgba(152, 152, 152, 0.49);  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-collapse {     
\end_layout

\begin_layout Plain Layout

		visibility: visible;     
\end_layout

\begin_layout Plain Layout

		height: inherit;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.sidepanel-footer {     
\end_layout

\begin_layout Plain Layout

		visibility: visible !important;     
\end_layout

\begin_layout Plain Layout

		height: inherit !important;     
\end_layout

\begin_layout Plain Layout

		padding: 15px !important;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-navbar {     
\end_layout

\begin_layout Plain Layout

		width: 67%;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-small-article,   .panel-tag,   .panel-ad 
\end_layout

\begin_layout Plain Layout

	{     
\end_layout

\begin_layout Plain Layout

	visibility: visible;     
\end_layout

\begin_layout Plain Layout

		max-height: inherit;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-sidepanel,   .panel-navbar {     
\end_layout

\begin_layout Plain Layout

		position: fixed;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-konten {     
\end_layout

\begin_layout Plain Layout

		padding-top: 8%;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-footer-mobile {     
\end_layout

\begin_layout Plain Layout

		visibility: collapse;  
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-footer {     
\end_layout

\begin_layout Plain Layout

		height: inherit;     
\end_layout

\begin_layout Plain Layout

		visibility: visible;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_mixins.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$placeholder: "::-webkit-input-placeholder", ":-moz-placeholder", 
\end_layout

\begin_layout Plain Layout

"::-moz-placeholder", ":-ms-placeholder"; 
\end_layout

\begin_layout Plain Layout

@mixin placeholder {   
\end_layout

\begin_layout Plain Layout

	@each $prop in $placeholder {     
\end_layout

\begin_layout Plain Layout

		#{$prop} {       
\end_layout

\begin_layout Plain Layout

			@content;     
\end_layout

\begin_layout Plain Layout

		}  
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_variables.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$body-background: tint($primary, 90%); 
\end_layout

\begin_layout Plain Layout

$mark-color: shade($primary, 10%); 
\end_layout

\begin_layout Plain Layout

$mark-background: $content; 
\end_layout

\begin_layout Plain Layout

$blockquote-footer-color: shade($primary, 10%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$panelfooter-background: $content; 
\end_layout

\begin_layout Plain Layout

$panelfooter-footer-span-color: tint($text, 10%); 
\end_layout

\begin_layout Plain Layout

$panelfooter-footer-span-link-color: (shade($primary, 5%), shade($primary,
 20%));
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-background: shade($primary, 40%); 
\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-item-color: $content; 
\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-item-span-color: $content; 
\end_layout

\begin_layout Plain Layout

$panelfooter-mobile-item-span-a-color: tint($primary, 25%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$forms-shadow: shade($primary, 40%); 
\end_layout

\begin_layout Plain Layout

$forms-shadow-focus: tint($secondary, 20%); 
\end_layout

\begin_layout Plain Layout

$forms-placeholder: $primary;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$navbar-background: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-shadow: $shadow; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-a-color: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-a-hover-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-a-hover-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-active-a-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-active-a-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-background: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-divider-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-li-a-hover-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-nav-li-ul-li-a-hover-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-toggle-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-toggle-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-lineborder: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-color: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-hover-background: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-collapse-dropdown-menu-hover-color: $primary; 
\end_layout

\begin_layout Plain Layout

$navbar-form-background: shade($primary, 30%); 
\end_layout

\begin_layout Plain Layout

$navbar-toggle-border: $content; 
\end_layout

\begin_layout Plain Layout

$navbar-toggle-hover-background: shade($primary, 30%); 
\end_layout

\begin_layout Plain Layout

$navbar-toggle-hover-color: $primary; $navbar-toggle-icon: $content;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$sidepanel-collapse-background: $content; 
\end_layout

\begin_layout Plain Layout

$sidepanel-collapse-list-group-item-lead: tint($text, 5%); 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-item-lead: $content; 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-title-background: darken($primary, 5%); 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-hello-background: $secondary; 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-hello-shadow: $secondary; 
\end_layout

\begin_layout Plain Layout

$sidepanel-list-hello-lead: tint($text, 10%); 
\end_layout

\begin_layout Plain Layout

$sidepanel-body-content-padding: 15px 0px 0px 0px;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$slider-item-a-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$slider-item-body-background: $content; 
\end_layout

\begin_layout Plain Layout

$slider-media-text-max-height: 80px; 
\end_layout

\begin_layout Plain Layout

$slider-media-heading-color: shade($text, 25%); 
\end_layout

\begin_layout Plain Layout

$slider-media-body-p: tint($text, 10%); 
\end_layout

\begin_layout Plain Layout

$slider-media-a-color: tint($primary, 10%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$panelarticle-default-shadow: $shadow; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-link-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-body-background: $content; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-heading-background: $content; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-heading-lineborder: $primary; 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-heading-link-color: shade($primary, 30%); 
\end_layout

\begin_layout Plain Layout

$panelarticle-default-li-text-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$panelarticle-footer-color: $primary;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$block-small-article-footer-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$panel-small-article-background: $content; 
\end_layout

\begin_layout Plain Layout

$panel-small-article-list-lineborder: tint($primary, 60%); 
\end_layout

\begin_layout Plain Layout

$panel-small-article-media-link-color: $primary;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$tag-shadow: tint($shadow, 15%);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$pagination-shadow: $shadow; 
\end_layout

\begin_layout Plain Layout

$pagination-li-a-background: $content; 
\end_layout

\begin_layout Plain Layout

$pagination-li-a-color: tint($text, 20%); 
\end_layout

\begin_layout Plain Layout

$pagination-li-a-hover-background: $shadow; 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_article.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.panel-default {  
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	width: 100%;   
\end_layout

\begin_layout Plain Layout

	box-shadow: 0px 0px 2px 0.3px $panelarticle-default-shadow;   
\end_layout

\begin_layout Plain Layout

	.panel-body {     
\end_layout

\begin_layout Plain Layout

		background: $panelarticle-default-body-background;     
\end_layout

\begin_layout Plain Layout

		padding-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		padding-top: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-heading {     
\end_layout

\begin_layout Plain Layout

		background-color: $panelarticle-default-heading-background;     
\end_layout

\begin_layout Plain Layout

		border-bottom: 1px solid $panelarticle-default-heading-lineborder;   
 
\end_layout

\begin_layout Plain Layout

		a {       
\end_layout

\begin_layout Plain Layout

		color: $panelarticle-default-heading-link-color;       
\end_layout

\begin_layout Plain Layout

			&:hover {         
\end_layout

\begin_layout Plain Layout

				text-decoration: underline;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	a {     
\end_layout

\begin_layout Plain Layout

		text-decoration: none;     
\end_layout

\begin_layout Plain Layout

		color: $panelarticle-default-link-color;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.article-img {     
\end_layout

\begin_layout Plain Layout

		img {       
\end_layout

\begin_layout Plain Layout

			visibility: visible;       
\end_layout

\begin_layout Plain Layout

			height: inherit;       
\end_layout

\begin_layout Plain Layout

			max-height: 400px;       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			margin-left: auto;       
\end_layout

\begin_layout Plain Layout

			margin-right: auto;       
\end_layout

\begin_layout Plain Layout

			margin-bottom: 10px;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	p {     
\end_layout

\begin_layout Plain Layout

		color: $panelarticle-default-li-text-color;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-wide {   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 0px; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-text-short {   
\end_layout

\begin_layout Plain Layout

	max-height: 140px;   
\end_layout

\begin_layout Plain Layout

	overflow: hidden; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-text-long {   
\end_layout

\begin_layout Plain Layout

	max-height: 200px;   
\end_layout

\begin_layout Plain Layout

	overflow: hidden; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-text-full {   
\end_layout

\begin_layout Plain Layout

	overflow: visible; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.article-footer a {   
\end_layout

\begin_layout Plain Layout

	color: $panelarticle-footer-color;   
\end_layout

\begin_layout Plain Layout

	&:hover {     
\end_layout

\begin_layout Plain Layout

		cursor: pointer;     
\end_layout

\begin_layout Plain Layout

		text-decoration: underline;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_badge.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.badge {   
\end_layout

\begin_layout Plain Layout

	padding: 4px 8px 4px 8px;   
\end_layout

\begin_layout Plain Layout

	border-radius: 2px;   
\end_layout

\begin_layout Plain Layout

	font-size: 14px;   
\end_layout

\begin_layout Plain Layout

	margin: 2px 0px 2px 0px;   
\end_layout

\begin_layout Plain Layout

	box-shadow: 2px 2px .1px .1px $tag-shadow; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@for $type from 1 through length($badge) {   
\end_layout

\begin_layout Plain Layout

	.badge-#{$type} {     
\end_layout

\begin_layout Plain Layout

		background-color: nth($badge, $type);   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_footer.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.footer {     
\end_layout

\begin_layout Plain Layout

	background: $panelfooter-background;     
\end_layout

\begin_layout Plain Layout

	box-shadow: none;     
\end_layout

\begin_layout Plain Layout

	padding: 0px;     
\end_layout

\begin_layout Plain Layout

	span {       
\end_layout

\begin_layout Plain Layout

		color: $panelfooter-footer-span-color;       
\end_layout

\begin_layout Plain Layout

		b a {         
\end_layout

\begin_layout Plain Layout

			color: nth($panelfooter-footer-span-link-color, 1);         
\end_layout

\begin_layout Plain Layout

			&:hover {           
\end_layout

\begin_layout Plain Layout

				color: nth($panelfooter-footer-span-link-color, 2);         
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

}   
\end_layout

\begin_layout Plain Layout

.panel-footer-mobile {     
\end_layout

\begin_layout Plain Layout

	visibility: visible;     
\end_layout

\begin_layout Plain Layout

	background-color: $panelfooter-mobile-background;     
\end_layout

\begin_layout Plain Layout

	border: 0px;     
\end_layout

\begin_layout Plain Layout

	box-shadow: none;     
\end_layout

\begin_layout Plain Layout

	height: 30px;     
\end_layout

\begin_layout Plain Layout

	.list-group {       
\end_layout

\begin_layout Plain Layout

		padding: 0px;       
\end_layout

\begin_layout Plain Layout

		margin: 0px;     
\end_layout

\begin_layout Plain Layout

	}     
\end_layout

\begin_layout Plain Layout

.list-group .list-group-item {       
\end_layout

\begin_layout Plain Layout

	padding-top: 0px;       
\end_layout

\begin_layout Plain Layout

	padding-bottom: 0px;       
\end_layout

\begin_layout Plain Layout

	box-shadow: none;      
\end_layout

\begin_layout Plain Layout

	background: none;       
\end_layout

\begin_layout Plain Layout

	border: 0px;       
\end_layout

\begin_layout Plain Layout

	margin-top: 4px;       
\end_layout

\begin_layout Plain Layout

	color: $panelfooter-mobile-item-color;     
\end_layout

\begin_layout Plain Layout

}     
\end_layout

\begin_layout Plain Layout

.list-group .list-group-item span {      
\end_layout

\begin_layout Plain Layout

	color: $panelfooter-mobile-item-span-color;       
\end_layout

\begin_layout Plain Layout

		b a {         
\end_layout

\begin_layout Plain Layout

			color: $panelfooter-mobile-item-span-a-color;       
\end_layout

\begin_layout Plain Layout

		}    
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_forms.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.form-group {   
\end_layout

\begin_layout Plain Layout

	@include placeholder {     
\end_layout

\begin_layout Plain Layout

		color: $forms-placeholder;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.form-control {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		border-radius: 2px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: 2px 2px .2px .2px $forms-shadow;     
\end_layout

\begin_layout Plain Layout

		&:focus {       
\end_layout

\begin_layout Plain Layout

			box-shadow: 0px 0px 3px 1px $forms-shadow-focus;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_navbar.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.full-nav {   
\end_layout

\begin_layout Plain Layout

	min-width: 100%; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-navbar {  
\end_layout

\begin_layout Plain Layout

	margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	background: $navbar-background;   
\end_layout

\begin_layout Plain Layout

	z-index: 10;   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 0px;   
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	box-shadow: 0px 0px 3px 1px $navbar-shadow;   
\end_layout

\begin_layout Plain Layout

	.navbar-default {     
\end_layout

\begin_layout Plain Layout

		z-index: 10;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-brand {     
\end_layout

\begin_layout Plain Layout

		color: $navbar-nav-li-a-color;     
\end_layout

\begin_layout Plain Layout

		&:hover {       
\end_layout

\begin_layout Plain Layout

			@extend .navbar-brand;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-float-left {     
\end_layout

\begin_layout Plain Layout

		margin-left: -15px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-nav {     
\end_layout

\begin_layout Plain Layout

		> li > a {       
\end_layout

\begin_layout Plain Layout

			font-size: 15px;       
\end_layout

\begin_layout Plain Layout

			color: $navbar-nav-li-a-color;       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:active,       
\end_layout

\begin_layout Plain Layout

			&:focus {         
\end_layout

\begin_layout Plain Layout

				background: $navbar-nav-li-a-hover-background;         
\end_layout

\begin_layout Plain Layout

				color: $navbar-nav-li-a-hover-color;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		> .active a {       
\end_layout

\begin_layout Plain Layout

			background: $navbar-nav-active-a-background;       
\end_layout

\begin_layout Plain Layout

			color: $navbar-nav-active-a-color;       
\end_layout

\begin_layout Plain Layout

			font-weight: bold;       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:focus,       
\end_layout

\begin_layout Plain Layout

			&:active {         
\end_layout

\begin_layout Plain Layout

				@extend a;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		> li ul {       
\end_layout

\begin_layout Plain Layout

			border: 0px;       
\end_layout

\begin_layout Plain Layout

			background: $navbar-nav-li-ul-background;       
\end_layout

\begin_layout Plain Layout

			box-shadow: 0px 0px 2px 1px nth($theme, 5);       
\end_layout

\begin_layout Plain Layout

			.divider {         
\end_layout

\begin_layout Plain Layout

				background: $navbar-nav-li-ul-divider-background;       
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

			li a:hover {         
\end_layout

\begin_layout Plain Layout

				background: $navbar-nav-li-ul-li-a-hover-background;         
\end_layout

\begin_layout Plain Layout

				color: $navbar-nav-li-ul-li-a-hover-color;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-nav .dropdown {     
\end_layout

\begin_layout Plain Layout

		.dropdown-toggle {       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:focus {         
\end_layout

\begin_layout Plain Layout

				background-color: $navbar-collapse-dropdown-toggle-background;     
    
\end_layout

\begin_layout Plain Layout

				color: $navbar-collapse-dropdown-toggle-color;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.dropdown-menu {       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			border-bottom: 1px solid $navbar-collapse-dropdown-menu-lineborder; 
      
\end_layout

\begin_layout Plain Layout

			li a {         
\end_layout

\begin_layout Plain Layout

				color: $navbar-collapse-dropdown-menu-color;         
\end_layout

\begin_layout Plain Layout

				&:hover {           
\end_layout

\begin_layout Plain Layout

					background-color: $navbar-collapse-dropdown-menu-hover-background;
         
\end_layout

\begin_layout Plain Layout

					color: $navbar-collapse-dropdown-menu-hover-color;         
\end_layout

\begin_layout Plain Layout

				}       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-collapse {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-form {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;     
\end_layout

\begin_layout Plain Layout

		background-color: $navbar-form-background;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.navbar-toggle {     
\end_layout

\begin_layout Plain Layout

		border: 0px solid $navbar-toggle-border;     
\end_layout

\begin_layout Plain Layout

		background-color: none;     
\end_layout

\begin_layout Plain Layout

		&:hover,     
\end_layout

\begin_layout Plain Layout

		&:focus {       
\end_layout

\begin_layout Plain Layout

			background-color: $navbar-toggle-hover-background;       
\end_layout

\begin_layout Plain Layout

			border: 0px solid $navbar-toggle-hover-color;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.icon-bar {       
\end_layout

\begin_layout Plain Layout

			background-color: $navbar-toggle-icon;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_paginations.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.panel-pagination .pagination {   
\end_layout

\begin_layout Plain Layout

	box-shadow: 0px 0px 2px 1px $pagination-shadow;   
\end_layout

\begin_layout Plain Layout

	margin-top: 0px;   
\end_layout

\begin_layout Plain Layout

	margin-bottom: 7.5%; 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-pagination .pagination li a {   
\end_layout

\begin_layout Plain Layout

	background: $pagination-li-a-background;   
\end_layout

\begin_layout Plain Layout

	border-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	color: $pagination-li-a-color;   
\end_layout

\begin_layout Plain Layout

	border: 0px;   
\end_layout

\begin_layout Plain Layout

	&:hover {     
\end_layout

\begin_layout Plain Layout

		background-color: $pagination-li-a-hover-background;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-pagination .pagination li {   
\end_layout

\begin_layout Plain Layout

	&:first-child{     
\end_layout

\begin_layout Plain Layout

		a:hover{       
\end_layout

\begin_layout Plain Layout

			border-bottom-left-radius: 4px;        
\end_layout

\begin_layout Plain Layout

			border-top-left-radius: 4px;      
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	&:last-child {     
\end_layout

\begin_layout Plain Layout

		a:hover {       
\end_layout

\begin_layout Plain Layout

			border-bottom-right-radius: 4px;        
\end_layout

\begin_layout Plain Layout

			border-top-right-radius: 4px;      
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_sidepanel.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.panel-sidepanel {   
\end_layout

\begin_layout Plain Layout

	border-bottom-right-radius: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-bottom: 0px;   
\end_layout

\begin_layout Plain Layout

	background: $sidepanel-collapse-background;   
\end_layout

\begin_layout Plain Layout

	z-index: 11;   
\end_layout

\begin_layout Plain Layout

	padding-left: 0px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 0px;   
\end_layout

\begin_layout Plain Layout

	.img-circle {     
\end_layout

\begin_layout Plain Layout

		border: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.panel-default {     
\end_layout

\begin_layout Plain Layout

		margin-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		border-radius: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		.list-unstyled {       
\end_layout

\begin_layout Plain Layout

			margin-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.panel-body {       
\end_layout

\begin_layout Plain Layout

			padding: 0px;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.panel-body-content {      
\end_layout

\begin_layout Plain Layout

			padding: $sidepanel-body-content-padding;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	.collapse .panel-body {     
\end_layout

\begin_layout Plain Layout

		background: $sidepanel-collapse-background;     
\end_layout

\begin_layout Plain Layout

		.list-group .list-group-item {       
\end_layout

\begin_layout Plain Layout

			.lead {         
\end_layout

\begin_layout Plain Layout

				color: $sidepanel-collapse-list-group-item-lead;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.sidepanel-footer {     
\end_layout

\begin_layout Plain Layout

		visibility: hidden;     
\end_layout

\begin_layout Plain Layout

		height: 0px;     
\end_layout

\begin_layout Plain Layout

		padding: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.info {     
\end_layout

\begin_layout Plain Layout

		padding-bottom: 0px;     
\end_layout

\begin_layout Plain Layout

		padding-top: 0px;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.title {     
\end_layout

\begin_layout Plain Layout

		color: white;     
\end_layout

\begin_layout Plain Layout

		background: $sidepanel-list-title-background;   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.hello {     
\end_layout

\begin_layout Plain Layout

		background: $sidepanel-list-hello-background;     
\end_layout

\begin_layout Plain Layout

		box-shadow: 0px 0px 100px 5px $sidepanel-list-hello-shadow inset;    
 
\end_layout

\begin_layout Plain Layout

		.lead {       
\end_layout

\begin_layout Plain Layout

			color: $sidepanel-list-hello-lead;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.info {     
\end_layout

\begin_layout Plain Layout

		padding-top: 20px;    
\end_layout

\begin_layout Plain Layout

		p {       
\end_layout

\begin_layout Plain Layout

			white-space: normal;     
\end_layout

\begin_layout Plain Layout

		}  
\end_layout

\begin_layout Plain Layout

	}  
\end_layout

\begin_layout Plain Layout

	.lanjut {     
\end_layout

\begin_layout Plain Layout

		padding: 0px 15px 0px 15px;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_slider.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.carousel {   
\end_layout

\begin_layout Plain Layout

	padding-left: 65px;   
\end_layout

\begin_layout Plain Layout

	padding-right: 65px;   
\end_layout

\begin_layout Plain Layout

	.carousel-control {     
\end_layout

\begin_layout Plain Layout

		&.left,     
\end_layout

\begin_layout Plain Layout

		&.right {       
\end_layout

\begin_layout Plain Layout

			width: 10px;       
\end_layout

\begin_layout Plain Layout

			margin-top: -20px;       
\end_layout

\begin_layout Plain Layout

			padding-left: 40px;       
\end_layout

\begin_layout Plain Layout

			padding-right: 40px;       
\end_layout

\begin_layout Plain Layout

			z-index: 9;       
\end_layout

\begin_layout Plain Layout

			background: none;       
\end_layout

\begin_layout Plain Layout

			&:hover,       
\end_layout

\begin_layout Plain Layout

			&:focus {         
\end_layout

\begin_layout Plain Layout

				cursor: default;       
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

			span {         
\end_layout

\begin_layout Plain Layout

				cursor: pointer;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	}   
\end_layout

\begin_layout Plain Layout

	.item {     
\end_layout

\begin_layout Plain Layout

		padding: 5px;     
\end_layout

\begin_layout Plain Layout

		z-index: 8;     
\end_layout

\begin_layout Plain Layout

		a {       
\end_layout

\begin_layout Plain Layout

			color: $slider-item-a-color;       
\end_layout

\begin_layout Plain Layout

			text-decoration: none;       
\end_layout

\begin_layout Plain Layout

			&:hover {         
\end_layout

\begin_layout Plain Layout

				@extend a;       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.media {       
\end_layout

\begin_layout Plain Layout

			.media-body {         
\end_layout

\begin_layout Plain Layout

				.media-heading {           
\end_layout

\begin_layout Plain Layout

					color: $slider-media-heading-color;         
\end_layout

\begin_layout Plain Layout

				}         
\end_layout

\begin_layout Plain Layout

				p {           
\end_layout

\begin_layout Plain Layout

					color: $slider-media-body-p;         
\end_layout

\begin_layout Plain Layout

				}         
\end_layout

\begin_layout Plain Layout

				ul li {           
\end_layout

\begin_layout Plain Layout

					max-height: $slider-media-text-max-height;           
\end_layout

\begin_layout Plain Layout

					overflow: hidden;         
\end_layout

\begin_layout Plain Layout

				}      
\end_layout

\begin_layout Plain Layout

			}      
\end_layout

\begin_layout Plain Layout

			a {         
\end_layout

\begin_layout Plain Layout

				color: $slider-media-a-color;         
\end_layout

\begin_layout Plain Layout

				&:hover {           
\end_layout

\begin_layout Plain Layout

					@extend a;         
\end_layout

\begin_layout Plain Layout

				}       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.panel-default .panel-body {       
\end_layout

\begin_layout Plain Layout

			background: $slider-item-body-background;       
\end_layout

\begin_layout Plain Layout

			padding: 15px;     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_smallarticle.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

.block-small-article {   
\end_layout

\begin_layout Plain Layout

	padding-top: 0px;   
\end_layout

\begin_layout Plain Layout

	footer {     
\end_layout

\begin_layout Plain Layout

		font-size: 12px;     
\end_layout

\begin_layout Plain Layout

		color: $block-small-article-footer-color;   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

.panel-small-article {   
\end_layout

\begin_layout Plain Layout

	adding: 0px;   padding: 0px;   
\end_layout

\begin_layout Plain Layout

	border: 0px !important;   
\end_layout

\begin_layout Plain Layout

	box-shadow: none;   
\end_layout

\begin_layout Plain Layout

	.list-group {     
\end_layout

\begin_layout Plain Layout

		border: 0px;     
\end_layout

\begin_layout Plain Layout

		box-shadow: none;     
\end_layout

\begin_layout Plain Layout

		.text-left {       
\end_layout

\begin_layout Plain Layout

			background: $panel-small-article-background;       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			box-shadow: none;       
\end_layout

\begin_layout Plain Layout

			border: 0px;     
\end_layout

\begin_layout Plain Layout

		}     
\end_layout

\begin_layout Plain Layout

		.small-article {      
\end_layout

\begin_layout Plain Layout

			border: 0px;       
\end_layout

\begin_layout Plain Layout

			background: none;       
\end_layout

\begin_layout Plain Layout

			border-radius: 0px;       
\end_layout

\begin_layout Plain Layout

			margin-left: 1px;      
\end_layout

\begin_layout Plain Layout

			margin-right: 1px;       
\end_layout

\begin_layout Plain Layout

			> li {         
\end_layout

\begin_layout Plain Layout

			height: 130px;         
\end_layout

\begin_layout Plain Layout

			overflow: hidden;       
\end_layout

\begin_layout Plain Layout

			}       
\end_layout

\begin_layout Plain Layout

			ul li {         
\end_layout

\begin_layout Plain Layout

				border-top: 1px solid $panel-small-article-list-lineborder;        
 
\end_layout

\begin_layout Plain Layout

				padding: 9px 5px 0px 9px;         
\end_layout

\begin_layout Plain Layout

				.media .media-body .media-heading a {           
\end_layout

\begin_layout Plain Layout

					color: $panel-small-article-media-link-color;         
\end_layout

\begin_layout Plain Layout

				}       
\end_layout

\begin_layout Plain Layout

			}     
\end_layout

\begin_layout Plain Layout

		}   
\end_layout

\begin_layout Plain Layout

	} 
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
_config.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

$xsmall: 0px; 
\end_layout

\begin_layout Plain Layout

$small: 768px; 
\end_layout

\begin_layout Plain Layout

$big: 1200px; 
\end_layout

\begin_layout Plain Layout

$break-xsmall: "(min-width: #{$xsmall})"; 
\end_layout

\begin_layout Plain Layout

$break-small: "(min-width: #{$small})"; 
\end_layout

\begin_layout Plain Layout

$break-big: "(min-width: #{$big})";
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$theme-blue: ( #38aff0, #fcbf5d, #ffffff, #383838, rgba(98, 98, 98, 0.26));
 $theme-brown: ( #c35115, #fcbf5d, #ffffff, #383838, rgba(98, 98, 98, 0.26));
 $theme-red: ( #f24f31, #f7ef35, #ffffff, #3c3434, rgba(98, 98, 98, 0.26));
 $theme-green: ( #209a67, #F4D03F, #ffffff, #08311b, rgba(98, 98, 98, 0.26));
 $theme-flat-zen: (#249991, #E76B6B, #FEFEFE, #224a6c, rgba(98, 98, 98,
 0.26)); 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$badge-rainbow: ( #2d99d4, #F9690E, #ae1dc9, #1fc17d, #e85143, #4a4f53,
 #F4D03F, 	#1d689f, #0e761a, #9b9b15, #777e86); $badge-ugly-duckling: (
 #BA5445, #BA5445, 	#BA5445, #BA5445, #BA5445, #BA5445, #BA5445, #BA5445,
 #BA5445, #BA5445, #BA5445
\end_layout

\begin_layout Plain Layout

);
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$theme: $theme-flat-zen; 
\end_layout

\begin_layout Plain Layout

$badge: $badge-rainbow;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

$primary: nth($theme, 1); 
\end_layout

\begin_layout Plain Layout

$secondary: nth($theme, 2); 
\end_layout

\begin_layout Plain Layout

$content: nth($theme, 3); 
\end_layout

\begin_layout Plain Layout

$text: nth($theme, 4); 
\end_layout

\begin_layout Plain Layout

$shadow: nth($theme, 5); 
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
main.scss
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "numbers=left,breaklines=true,showstringspaces=false,tabsize=2"
inline false
status collapsed

\begin_layout Plain Layout

//config 
\end_layout

\begin_layout Plain Layout

@import 'config'; 
\end_layout

\begin_layout Plain Layout

//base  
\end_layout

\begin_layout Plain Layout

@import 'base/variables'; 
\end_layout

\begin_layout Plain Layout

@import 'base/mixins'; 
\end_layout

\begin_layout Plain Layout

@import 'base/base'; 
\end_layout

\begin_layout Plain Layout

//components 
\end_layout

\begin_layout Plain Layout

@import 'components/footer'; 
\end_layout

\begin_layout Plain Layout

@import 'components/forms'; 
\end_layout

\begin_layout Plain Layout

@import 'components/article'; 
\end_layout

\begin_layout Plain Layout

@import 'components/navbar'; 
\end_layout

\begin_layout Plain Layout

@import 'components/pagination'; 
\end_layout

\begin_layout Plain Layout

@import 'components/smallarticle'; 
\end_layout

\begin_layout Plain Layout

@import 'components/sidepanel'; 
\end_layout

\begin_layout Plain Layout

@import 'components/slider'; 
\end_layout

\begin_layout Plain Layout

@import 'components/badge'; 
\end_layout

\begin_layout Plain Layout

@import 'base/media'; 
\end_layout

\end_inset


\end_layout

\end_body
\end_document
